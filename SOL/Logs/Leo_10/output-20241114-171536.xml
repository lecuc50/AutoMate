<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 7.1 (Python 3.9.9 on win32)" generated="2024-11-14T17:15:36.890326" rpa="false" schemaversion="5">
<suite id="s1" name="Quick Test" source="C:\Diamond\HHS\HHSProject\Procedures\Quick_Test">
<suite id="s1-s1" name="ATQ AddOn Timer" source="C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\ATQ_AddOn_Timer.robot">
<kw name="Open Com port and set Interface" owner="Keywords" type="SETUP">
<kw name="Set Interface Name" owner="Commands">
<arg>${interface_name}</arg>
<status status="PASS" start="2024-11-14T17:15:38.131208" elapsed="0.000000"/>
</kw>
<kw name="Connect With COM port" owner="Keywords">
<kw name="Open Com Port" owner="Commands">
<msg time="2024-11-14T17:15:38.133203" level="INFO">${data} = OK</msg>
<var>${data}</var>
<arg>${COMPORT}</arg>
<status status="PASS" start="2024-11-14T17:15:38.132205" elapsed="0.002032"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Open Com Port ${COMPORT}: ${data}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:15:38.134237" elapsed="0.000000"/>
</kw>
<arg>${COMPORT}</arg>
<status status="PASS" start="2024-11-14T17:15:38.132205" elapsed="0.002032"/>
</kw>
<kw name="Set Interface For HH" owner="Keywords">
<kw name="Set Interface" owner="Commands">
<msg time="2024-11-14T17:15:52.168689" level="INFO">${data} = $S,AE,HA05,CSNRM03,Ar:$&gt;,&gt;,&gt;,&gt;,&gt;\r</msg>
<var>${data}</var>
<arg>${interface_name}</arg>
<arg>${reading_mode}</arg>
<status status="PASS" start="2024-11-14T17:15:38.135197" elapsed="14.033492"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Set Interface ${interface_name} For HH successful: ${data}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:15:52.169423" elapsed="0.000000"/>
</kw>
<arg>${interface_name}</arg>
<arg>${reading_mode}</arg>
<status status="PASS" start="2024-11-14T17:15:38.134237" elapsed="14.035186"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-11-14T17:15:52.169423" level="INFO">${init_interface_name} = RS232_STD</msg>
<var>${init_interface_name}</var>
<arg>${interface_name}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-11-14T17:15:52.169423" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-11-14T17:15:52.170420" level="INFO">${init_interface_name} = RS232_STD</msg>
<arg>${init_interface_name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-11-14T17:15:52.170420" elapsed="0.000000"/>
</kw>
<kw name="SetSoftTrigger" owner="Keywords">
<kw name="Set Trigger" owner="Commands">
<arg>${on_off}</arg>
<status status="PASS" start="2024-11-14T17:15:52.170420" elapsed="0.000000"/>
</kw>
<arg>${soft_trigger}</arg>
<doc>Set Soft trigger to On/Off</doc>
<status status="PASS" start="2024-11-14T17:15:52.170420" elapsed="0.000996"/>
</kw>
<kw name="Read" owner="Keywords">
<kw name="Log To Console" owner="BuiltIn">
<arg>\nReading label: ${image_name}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:15:52.171416" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Read Label" owner="Commands">
<arg>${current_directory}</arg>
<arg>${image_name}</arg>
<doc>Load image to Eink and wait HH read the barcode to respond data
- For Label Programing, the system will wait for default 4s to HH can read this label
- For Label programing digit, the system will wait for default 1.2 s to HH can't read this label twice</doc>
<status status="PASS" start="2024-11-14T17:15:52.172413" elapsed="14.220015"/>
</kw>
<msg time="2024-11-14T17:16:06.393167" level="INFO">${data} = </msg>
<var>${data}</var>
<arg>Read Label</arg>
<arg>${current_directory}</arg>
<arg>${image_name}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:15:52.171416" elapsed="14.221751"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Expected-----: ${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:16:06.393167" elapsed="0.001406"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Responded----: ${data}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:16:06.394573" elapsed="0.001048"/>
</kw>
<kw name="LogImage" owner="Keywords">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-11-14T17:16:06.398613" level="INFO">${data} = C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\DataSet\$P,AE,Interface,CSNRM03,P.jpg</msg>
<var>${data}</var>
<arg>${current_directory}\\${image_name}.jpg</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-11-14T17:16:06.397615" elapsed="0.000998"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-14T17:16:06.399608" level="INFO" html="true">&lt;img src=C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\DataSet\$P,AE,Interface,CSNRM03,P.jpg&gt;</msg>
<arg>&lt;img src=${data}&gt;</arg>
<arg>html=true</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-14T17:16:06.398613" elapsed="0.000995"/>
</kw>
<arg>${image_name}</arg>
<status status="PASS" start="2024-11-14T17:16:06.396616" elapsed="0.002992"/>
</kw>
<if>
<branch type="IF" condition="$value!=None">
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<var>${data}</var>
<arg>Compare</arg>
<arg>\nReading label: ${image_name}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="NOT RUN" start="2024-11-14T17:16:06.402588" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<arg>Should Be Equal</arg>
<arg>${data}</arg>
<arg>True</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="NOT RUN" start="2024-11-14T17:16:06.402588" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-11-14T17:16:06.399608" elapsed="0.002980"/>
</branch>
<status status="PASS" start="2024-11-14T17:16:06.399608" elapsed="0.002980"/>
</if>
<return>
<value>${data}</value>
<status status="PASS" start="2024-11-14T17:16:06.402588" elapsed="0.000000"/>
</return>
<arg>$P,AE,Interface,${reading_mode},P</arg>
<status status="PASS" start="2024-11-14T17:15:52.171416" elapsed="14.231172"/>
</kw>
<kw name="Send Command" owner="Commands">
<msg time="2024-11-14T17:16:06.815830" level="INFO">${RevA_Version_Base} = Gryphon GD4600 SOFTWARE RELEASE 0.10 Nov  5 2024\r</msg>
<var>${RevA_Version_Base}</var>
<arg>$!</arg>
<status status="PASS" start="2024-11-14T17:16:06.402588" elapsed="0.413242"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-11-14T17:16:06.816568" level="INFO">${RevA_Version_Base} = Gryphon GD4600 SOFTWARE RELEASE 0.10 Nov  5 2024\r</msg>
<arg>${RevA_Version_Base}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-11-14T17:16:06.815830" elapsed="0.000738"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-14T17:16:06.816568" level="INFO">RS232_STD + COM2 + CSNRM03 + Gryphon GD4600 SOFTWARE RELEASE 0.10 Nov  5 2024\r</msg>
<arg>${interface_name} + ${COMPORT} + ${reading_mode} + ${RevA_Version_Base}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-14T17:16:06.816568" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Running On ${COMPORT}: ${interface_name}: ${reading_mode}: ${RevA_Version_Base}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:16:06.816568" elapsed="0.000997"/>
</kw>
<arg>${interface_name}</arg>
<arg>${COMPORT}</arg>
<arg>${reading_mode}</arg>
<status status="PASS" start="2024-11-14T17:15:38.131208" elapsed="28.686357"/>
</kw>
<test id="s1-s1-t1" name="ATQ_AddOn_Timer_SNRM00" line="9">
<kw name="EnterSP" owner="Keywords">
<kw name="Log To Console" owner="BuiltIn">
<arg>\nSending Command: $S</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:16:06.819521" elapsed="0.000998"/>
</kw>
<kw name="Enter Service Port" owner="Commands">
<msg time="2024-11-14T17:16:07.224528" level="INFO">${data} = $&gt;\r</msg>
<var>${data}</var>
<status status="PASS" start="2024-11-14T17:16:06.820519" elapsed="0.404009"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Responded-------: ${data}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:16:07.225528" elapsed="0.000997"/>
</kw>
<if>
<branch type="IF" condition="$value!=None">
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${data}</arg>
<arg>$&gt;\\r</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-11-14T17:16:07.227558" elapsed="0.000993"/>
</kw>
<arg>Should Be Equal</arg>
<arg>${data}</arg>
<arg>$&gt;\\r</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:16:07.227558" elapsed="0.000993"/>
</kw>
<status status="PASS" start="2024-11-14T17:16:07.226525" elapsed="0.002026"/>
</branch>
<status status="PASS" start="2024-11-14T17:16:07.226525" elapsed="0.002026"/>
</if>
<return>
<value>${data}</value>
<status status="PASS" start="2024-11-14T17:16:07.229542" elapsed="0.000000"/>
</return>
<arg>$&gt;</arg>
<status status="PASS" start="2024-11-14T17:16:06.819521" elapsed="0.410021"/>
</kw>
<kw name="Send" owner="Keywords">
<kw name="Log To Console" owner="BuiltIn">
<arg>\nSending Command: ${command}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:16:07.229842" elapsed="0.000000"/>
</kw>
<kw name="Send Command" owner="Commands">
<msg time="2024-11-14T17:16:07.642186" level="INFO">${data} = $&gt;\r</msg>
<var>${data}</var>
<arg>${command}</arg>
<status status="PASS" start="2024-11-14T17:16:07.229842" elapsed="0.412344"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Expected-------: ${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:16:07.642186" elapsed="0.001002"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Responded------: ${data}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:16:07.643188" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="$value!=None">
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Compare" owner="Commands">
<arg>\nSending Command: ${command}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<status status="PASS" start="2024-11-14T17:16:07.644185" elapsed="0.000000"/>
</kw>
<msg time="2024-11-14T17:16:07.644185" level="INFO">${data} = True</msg>
<var>${data}</var>
<arg>Compare</arg>
<arg>\nSending Command: ${command}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:16:07.644185" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${data}</arg>
<arg>True</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-11-14T17:16:07.645181" elapsed="0.000000"/>
</kw>
<arg>Should Be Equal</arg>
<arg>${data}</arg>
<arg>True</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:16:07.644185" elapsed="0.000996"/>
</kw>
<status status="PASS" start="2024-11-14T17:16:07.643188" elapsed="0.001993"/>
</branch>
<status status="PASS" start="2024-11-14T17:16:07.643188" elapsed="0.001993"/>
</if>
<return>
<value>${data}</value>
<status status="PASS" start="2024-11-14T17:16:07.645181" elapsed="0.000000"/>
</return>
<arg>$CABEN01</arg>
<arg>$&gt;</arg>
<status status="PASS" start="2024-11-14T17:16:07.229842" elapsed="0.415339"/>
</kw>
<kw name="Send" owner="Keywords">
<kw name="Log To Console" owner="BuiltIn">
<arg>\nSending Command: ${command}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:16:07.646178" elapsed="0.000000"/>
</kw>
<kw name="Send Command" owner="Commands">
<msg time="2024-11-14T17:16:08.063076" level="INFO">${data} = $&gt;\r</msg>
<var>${data}</var>
<arg>${command}</arg>
<status status="PASS" start="2024-11-14T17:16:07.646178" elapsed="0.416898"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Expected-------: ${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:16:08.063076" elapsed="0.000770"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Responded------: ${data}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:16:08.063846" elapsed="0.000966"/>
</kw>
<if>
<branch type="IF" condition="$value!=None">
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Compare" owner="Commands">
<arg>\nSending Command: ${command}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<status status="PASS" start="2024-11-14T17:16:08.064812" elapsed="0.000000"/>
</kw>
<msg time="2024-11-14T17:16:08.065809" level="INFO">${data} = True</msg>
<var>${data}</var>
<arg>Compare</arg>
<arg>\nSending Command: ${command}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:16:08.064812" elapsed="0.000997"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${data}</arg>
<arg>True</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-11-14T17:16:08.065809" elapsed="0.000000"/>
</kw>
<arg>Should Be Equal</arg>
<arg>${data}</arg>
<arg>True</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:16:08.065809" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-11-14T17:16:08.064812" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-11-14T17:16:08.064812" elapsed="0.000997"/>
</if>
<return>
<value>${data}</value>
<status status="PASS" start="2024-11-14T17:16:08.065809" elapsed="0.000000"/>
</return>
<arg>$CEBEN01</arg>
<arg>$&gt;</arg>
<status status="PASS" start="2024-11-14T17:16:07.645181" elapsed="0.420628"/>
</kw>
<kw name="Send" owner="Keywords">
<kw name="Log To Console" owner="BuiltIn">
<arg>\nSending Command: ${command}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:16:08.066849" elapsed="0.000000"/>
</kw>
<kw name="Send Command" owner="Commands">
<msg time="2024-11-14T17:16:08.484789" level="INFO">${data} = $&gt;\r</msg>
<var>${data}</var>
<arg>${command}</arg>
<status status="PASS" start="2024-11-14T17:16:08.067850" elapsed="0.416939"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Expected-------: ${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:16:08.484789" elapsed="0.000996"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Responded------: ${data}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:16:08.485785" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="$value!=None">
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Compare" owner="Commands">
<arg>\nSending Command: ${command}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<status status="PASS" start="2024-11-14T17:16:08.486786" elapsed="0.000000"/>
</kw>
<msg time="2024-11-14T17:16:08.486786" level="INFO">${data} = True</msg>
<var>${data}</var>
<arg>Compare</arg>
<arg>\nSending Command: ${command}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:16:08.486786" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${data}</arg>
<arg>True</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-11-14T17:16:08.486786" elapsed="0.000996"/>
</kw>
<arg>Should Be Equal</arg>
<arg>${data}</arg>
<arg>True</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:16:08.486786" elapsed="0.000996"/>
</kw>
<status status="PASS" start="2024-11-14T17:16:08.485785" elapsed="0.001997"/>
</branch>
<status status="PASS" start="2024-11-14T17:16:08.485785" elapsed="0.001997"/>
</if>
<return>
<value>${data}</value>
<status status="PASS" start="2024-11-14T17:16:08.487782" elapsed="0.000000"/>
</return>
<arg>$C8BEN01</arg>
<arg>$&gt;</arg>
<status status="PASS" start="2024-11-14T17:16:08.066849" elapsed="0.420933"/>
</kw>
<kw name="Send" owner="Keywords">
<kw name="Log To Console" owner="BuiltIn">
<arg>\nSending Command: ${command}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:16:08.488779" elapsed="0.000000"/>
</kw>
<kw name="Send Command" owner="Commands">
<msg time="2024-11-14T17:16:08.907297" level="INFO">${data} = $&gt;\r</msg>
<var>${data}</var>
<arg>${command}</arg>
<status status="PASS" start="2024-11-14T17:16:08.488779" elapsed="0.418518"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Expected-------: ${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:16:08.907297" elapsed="0.001391"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Responded------: ${data}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:16:08.908688" elapsed="0.001043"/>
</kw>
<if>
<branch type="IF" condition="$value!=None">
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Compare" owner="Commands">
<arg>\nSending Command: ${command}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<status status="PASS" start="2024-11-14T17:16:08.911727" elapsed="0.000995"/>
</kw>
<msg time="2024-11-14T17:16:08.912722" level="INFO">${data} = True</msg>
<var>${data}</var>
<arg>Compare</arg>
<arg>\nSending Command: ${command}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:16:08.910727" elapsed="0.001995"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${data}</arg>
<arg>True</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-11-14T17:16:08.913720" elapsed="0.000996"/>
</kw>
<arg>Should Be Equal</arg>
<arg>${data}</arg>
<arg>True</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:16:08.913720" elapsed="0.000996"/>
</kw>
<status status="PASS" start="2024-11-14T17:16:08.910727" elapsed="0.004987"/>
</branch>
<status status="PASS" start="2024-11-14T17:16:08.910727" elapsed="0.004987"/>
</if>
<return>
<value>${data}</value>
<status status="PASS" start="2024-11-14T17:16:08.915714" elapsed="0.000000"/>
</return>
<arg>$C3BEN01</arg>
<arg>$&gt;</arg>
<status status="PASS" start="2024-11-14T17:16:08.487782" elapsed="0.427932"/>
</kw>
<kw name="Send" owner="Keywords">
<kw name="Log To Console" owner="BuiltIn">
<arg>\nSending Command: ${command}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:16:08.918706" elapsed="0.000965"/>
</kw>
<kw name="Send Command" owner="Commands">
<msg time="2024-11-14T17:16:09.325600" level="INFO">${data} = $&gt;\r</msg>
<var>${data}</var>
<arg>${command}</arg>
<status status="PASS" start="2024-11-14T17:16:08.919671" elapsed="0.405929"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Expected-------: ${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:16:09.325600" elapsed="0.000740"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Responded------: ${data}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:16:09.326340" elapsed="0.000997"/>
</kw>
<if>
<branch type="IF" condition="$value!=None">
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Compare" owner="Commands">
<arg>\nSending Command: ${command}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<status status="PASS" start="2024-11-14T17:16:09.327337" elapsed="0.000000"/>
</kw>
<msg time="2024-11-14T17:16:09.328335" level="INFO">${data} = True</msg>
<var>${data}</var>
<arg>Compare</arg>
<arg>\nSending Command: ${command}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:16:09.327337" elapsed="0.000998"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${data}</arg>
<arg>True</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-11-14T17:16:09.328335" elapsed="0.000996"/>
</kw>
<arg>Should Be Equal</arg>
<arg>${data}</arg>
<arg>True</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:16:09.328335" elapsed="0.000996"/>
</kw>
<status status="PASS" start="2024-11-14T17:16:09.327337" elapsed="0.001994"/>
</branch>
<status status="PASS" start="2024-11-14T17:16:09.327337" elapsed="0.001994"/>
</if>
<return>
<value>${data}</value>
<status status="PASS" start="2024-11-14T17:16:09.329331" elapsed="0.000000"/>
</return>
<arg>$C3BIN01</arg>
<arg>$&gt;</arg>
<status status="PASS" start="2024-11-14T17:16:08.917709" elapsed="0.411622"/>
</kw>
<kw name="Send" owner="Keywords">
<kw name="Log To Console" owner="BuiltIn">
<arg>\nSending Command: ${command}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:16:09.330329" elapsed="0.000000"/>
</kw>
<kw name="Send Command" owner="Commands">
<msg time="2024-11-14T17:16:09.743265" level="INFO">${data} = $&gt;\r</msg>
<var>${data}</var>
<arg>${command}</arg>
<status status="PASS" start="2024-11-14T17:16:09.330329" elapsed="0.412936"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Expected-------: ${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:16:09.744259" elapsed="0.000998"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Responded------: ${data}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:16:09.745257" elapsed="0.001035"/>
</kw>
<if>
<branch type="IF" condition="$value!=None">
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Compare" owner="Commands">
<arg>\nSending Command: ${command}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<status status="PASS" start="2024-11-14T17:16:09.747250" elapsed="0.000000"/>
</kw>
<msg time="2024-11-14T17:16:09.747250" level="INFO">${data} = True</msg>
<var>${data}</var>
<arg>Compare</arg>
<arg>\nSending Command: ${command}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:16:09.747250" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${data}</arg>
<arg>True</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-11-14T17:16:09.747250" elapsed="0.000997"/>
</kw>
<arg>Should Be Equal</arg>
<arg>${data}</arg>
<arg>True</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:16:09.747250" elapsed="0.000997"/>
</kw>
<status status="PASS" start="2024-11-14T17:16:09.746292" elapsed="0.001955"/>
</branch>
<status status="PASS" start="2024-11-14T17:16:09.746292" elapsed="0.001955"/>
</if>
<return>
<value>${data}</value>
<status status="PASS" start="2024-11-14T17:16:09.748247" elapsed="0.000000"/>
</return>
<arg>$C3BIS01</arg>
<arg>$&gt;</arg>
<status status="PASS" start="2024-11-14T17:16:09.329331" elapsed="0.418916"/>
</kw>
<kw name="Send" owner="Keywords">
<kw name="Log To Console" owner="BuiltIn">
<arg>\nSending Command: ${command}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:16:09.749244" elapsed="0.000000"/>
</kw>
<kw name="Send Command" owner="Commands">
<msg time="2024-11-14T17:16:10.161247" level="INFO">${data} = $&gt;\r</msg>
<var>${data}</var>
<arg>${command}</arg>
<status status="PASS" start="2024-11-14T17:16:09.749244" elapsed="0.412003"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Expected-------: ${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:16:10.162255" elapsed="0.000996"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Responded------: ${data}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:16:10.164283" elapsed="0.000966"/>
</kw>
<if>
<branch type="IF" condition="$value!=None">
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Compare" owner="Commands">
<arg>\nSending Command: ${command}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<status status="PASS" start="2024-11-14T17:16:10.166246" elapsed="0.000994"/>
</kw>
<msg time="2024-11-14T17:16:10.167240" level="INFO">${data} = True</msg>
<var>${data}</var>
<arg>Compare</arg>
<arg>\nSending Command: ${command}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:16:10.166246" elapsed="0.000994"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${data}</arg>
<arg>True</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-11-14T17:16:10.168235" elapsed="0.000000"/>
</kw>
<arg>Should Be Equal</arg>
<arg>${data}</arg>
<arg>True</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:16:10.167240" elapsed="0.000995"/>
</kw>
<status status="PASS" start="2024-11-14T17:16:10.165249" elapsed="0.002986"/>
</branch>
<status status="PASS" start="2024-11-14T17:16:10.165249" elapsed="0.002986"/>
</if>
<return>
<value>${data}</value>
<status status="PASS" start="2024-11-14T17:16:10.168235" elapsed="0.000000"/>
</return>
<arg>$CADO201</arg>
<arg>$&gt;</arg>
<status status="PASS" start="2024-11-14T17:16:09.748247" elapsed="0.419988"/>
</kw>
<kw name="Send" owner="Keywords">
<kw name="Log To Console" owner="BuiltIn">
<arg>\nSending Command: ${command}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:16:10.168900" elapsed="0.000000"/>
</kw>
<kw name="Send Command" owner="Commands">
<msg time="2024-11-14T17:16:10.582117" level="INFO">${data} = $&gt;\r</msg>
<var>${data}</var>
<arg>${command}</arg>
<status status="PASS" start="2024-11-14T17:16:10.168900" elapsed="0.413217"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Expected-------: ${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:16:10.582117" elapsed="0.001002"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Responded------: ${data}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:16:10.583119" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="$value!=None">
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Compare" owner="Commands">
<arg>\nSending Command: ${command}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<status status="PASS" start="2024-11-14T17:16:10.584116" elapsed="0.000000"/>
</kw>
<msg time="2024-11-14T17:16:10.584116" level="INFO">${data} = True</msg>
<var>${data}</var>
<arg>Compare</arg>
<arg>\nSending Command: ${command}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:16:10.584116" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${data}</arg>
<arg>True</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-11-14T17:16:10.584116" elapsed="0.000996"/>
</kw>
<arg>Should Be Equal</arg>
<arg>${data}</arg>
<arg>True</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:16:10.584116" elapsed="0.000996"/>
</kw>
<status status="PASS" start="2024-11-14T17:16:10.583119" elapsed="0.001993"/>
</branch>
<status status="PASS" start="2024-11-14T17:16:10.583119" elapsed="0.001993"/>
</if>
<return>
<value>${data}</value>
<status status="PASS" start="2024-11-14T17:16:10.585112" elapsed="0.000000"/>
</return>
<arg>$CADO501</arg>
<arg>$&gt;</arg>
<status status="PASS" start="2024-11-14T17:16:10.168900" elapsed="0.416212"/>
</kw>
<kw name="Send" owner="Keywords">
<kw name="Log To Console" owner="BuiltIn">
<arg>\nSending Command: ${command}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:16:10.586109" elapsed="0.000421"/>
</kw>
<kw name="Send Command" owner="Commands">
<msg time="2024-11-14T17:16:11.002297" level="INFO">${data} = $&gt;\r</msg>
<var>${data}</var>
<arg>${command}</arg>
<status status="PASS" start="2024-11-14T17:16:10.586530" elapsed="0.415767"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Expected-------: ${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:16:11.002297" elapsed="0.001001"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Responded------: ${data}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:16:11.003298" elapsed="0.000997"/>
</kw>
<if>
<branch type="IF" condition="$value!=None">
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Compare" owner="Commands">
<arg>\nSending Command: ${command}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<status status="PASS" start="2024-11-14T17:16:11.004295" elapsed="0.000000"/>
</kw>
<msg time="2024-11-14T17:16:11.005292" level="INFO">${data} = True</msg>
<var>${data}</var>
<arg>Compare</arg>
<arg>\nSending Command: ${command}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:16:11.004295" elapsed="0.000997"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${data}</arg>
<arg>True</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-11-14T17:16:11.005292" elapsed="0.000000"/>
</kw>
<arg>Should Be Equal</arg>
<arg>${data}</arg>
<arg>True</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:16:11.005292" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-11-14T17:16:11.004295" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-11-14T17:16:11.004295" elapsed="0.000997"/>
</if>
<return>
<value>${data}</value>
<status status="PASS" start="2024-11-14T17:16:11.005292" elapsed="0.000000"/>
</return>
<arg>$CADOT1E</arg>
<arg>$&gt;</arg>
<status status="PASS" start="2024-11-14T17:16:10.585112" elapsed="0.420180"/>
</kw>
<kw name="Send" owner="Keywords">
<kw name="Log To Console" owner="BuiltIn">
<arg>\nSending Command: ${command}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:16:11.006264" elapsed="0.000000"/>
</kw>
<kw name="Send Command" owner="Commands">
<msg time="2024-11-14T17:16:11.422472" level="INFO">${data} = $&gt;\r</msg>
<var>${data}</var>
<arg>${command}</arg>
<status status="PASS" start="2024-11-14T17:16:11.006264" elapsed="0.416208"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Expected-------: ${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:16:11.422472" elapsed="0.000728"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Responded------: ${data}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:16:11.423200" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="$value!=None">
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Compare" owner="Commands">
<arg>\nSending Command: ${command}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<status status="PASS" start="2024-11-14T17:16:11.424197" elapsed="0.000000"/>
</kw>
<msg time="2024-11-14T17:16:11.424197" level="INFO">${data} = True</msg>
<var>${data}</var>
<arg>Compare</arg>
<arg>\nSending Command: ${command}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:16:11.424197" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${data}</arg>
<arg>True</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-11-14T17:16:11.425223" elapsed="0.000000"/>
</kw>
<arg>Should Be Equal</arg>
<arg>${data}</arg>
<arg>True</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:16:11.424197" elapsed="0.001026"/>
</kw>
<status status="PASS" start="2024-11-14T17:16:11.423200" elapsed="0.002023"/>
</branch>
<status status="PASS" start="2024-11-14T17:16:11.423200" elapsed="0.002023"/>
</if>
<return>
<value>${data}</value>
<status status="PASS" start="2024-11-14T17:16:11.425223" elapsed="0.000000"/>
</return>
<arg>$CSNRM00</arg>
<arg>$&gt;</arg>
<status status="PASS" start="2024-11-14T17:16:11.006264" elapsed="0.418959"/>
</kw>
<kw name="Send" owner="Keywords">
<kw name="Log To Console" owner="BuiltIn">
<arg>\nSending Command: ${command}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:16:11.426220" elapsed="0.000000"/>
</kw>
<kw name="Send Command" owner="Commands">
<msg time="2024-11-14T17:16:25.446534" level="INFO">${data} = $&gt;\r</msg>
<var>${data}</var>
<arg>${command}</arg>
<status status="PASS" start="2024-11-14T17:16:11.426220" elapsed="14.020314"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Expected-------: ${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:16:25.446534" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Responded------: ${data}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:16:25.447533" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="$value!=None">
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Compare" owner="Commands">
<arg>\nSending Command: ${command}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<status status="PASS" start="2024-11-14T17:16:25.447533" elapsed="0.000998"/>
</kw>
<msg time="2024-11-14T17:16:25.448531" level="INFO">${data} = True</msg>
<var>${data}</var>
<arg>Compare</arg>
<arg>\nSending Command: ${command}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:16:25.447533" elapsed="0.000998"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${data}</arg>
<arg>True</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-11-14T17:16:25.448531" elapsed="0.000000"/>
</kw>
<arg>Should Be Equal</arg>
<arg>${data}</arg>
<arg>True</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:16:25.448531" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-11-14T17:16:25.447533" elapsed="0.000998"/>
</branch>
<status status="PASS" start="2024-11-14T17:16:25.447533" elapsed="0.000998"/>
</if>
<return>
<value>${data}</value>
<status status="PASS" start="2024-11-14T17:16:25.448531" elapsed="0.000000"/>
</return>
<arg>$Ar</arg>
<arg>$&gt;</arg>
<status status="PASS" start="2024-11-14T17:16:11.425223" elapsed="14.024328"/>
</kw>
<kw name="SetSoftTrigger" owner="Keywords">
<kw name="Set Trigger" owner="Commands">
<arg>${on_off}</arg>
<status status="PASS" start="2024-11-14T17:16:25.449551" elapsed="0.000000"/>
</kw>
<arg>On</arg>
<doc>Set Soft trigger to On/Off</doc>
<status status="PASS" start="2024-11-14T17:16:25.449551" elapsed="0.000000"/>
</kw>
<kw name="Read" owner="Keywords">
<kw name="Log To Console" owner="BuiltIn">
<arg>\nReading label: ${image_name}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:16:25.450523" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Read Label" owner="Commands">
<arg>${current_directory}</arg>
<arg>${image_name}</arg>
<doc>Load image to Eink and wait HH read the barcode to respond data
- For Label Programing, the system will wait for default 4s to HH can read this label
- For Label programing digit, the system will wait for default 1.2 s to HH can't read this label twice</doc>
<status status="PASS" start="2024-11-14T17:16:25.450523" elapsed="1.367387"/>
</kw>
<msg time="2024-11-14T17:16:26.817910" level="INFO">${data} = 12345678901212\r</msg>
<var>${data}</var>
<arg>Read Label</arg>
<arg>${current_directory}</arg>
<arg>${image_name}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:16:25.450523" elapsed="1.367387"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Expected-----: ${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:16:26.817910" elapsed="0.001160"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Responded----: ${data}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:16:26.819070" elapsed="0.000000"/>
</kw>
<kw name="LogImage" owner="Keywords">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-11-14T17:16:26.820069" level="INFO">${data} = C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\DataSet\UPCA_AddOn2_12345678901212.jpg</msg>
<var>${data}</var>
<arg>${current_directory}\\${image_name}.jpg</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-11-14T17:16:26.820069" elapsed="0.000000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-14T17:16:26.820069" level="INFO" html="true">&lt;img src=C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\DataSet\UPCA_AddOn2_12345678901212.jpg&gt;</msg>
<arg>&lt;img src=${data}&gt;</arg>
<arg>html=true</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-14T17:16:26.820069" elapsed="0.000000"/>
</kw>
<arg>${image_name}</arg>
<status status="PASS" start="2024-11-14T17:16:26.819070" elapsed="0.001998"/>
</kw>
<if>
<branch type="IF" condition="$value!=None">
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Compare" owner="Commands">
<arg>\nReading label: ${image_name}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<status status="PASS" start="2024-11-14T17:16:26.821068" elapsed="0.000000"/>
</kw>
<msg time="2024-11-14T17:16:26.821068" level="INFO">${data} = True</msg>
<var>${data}</var>
<arg>Compare</arg>
<arg>\nReading label: ${image_name}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:16:26.821068" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${data}</arg>
<arg>True</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-11-14T17:16:26.822064" elapsed="0.000000"/>
</kw>
<arg>Should Be Equal</arg>
<arg>${data}</arg>
<arg>True</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:16:26.821068" elapsed="0.000996"/>
</kw>
<status status="PASS" start="2024-11-14T17:16:26.821068" elapsed="0.000996"/>
</branch>
<status status="PASS" start="2024-11-14T17:16:26.821068" elapsed="0.000996"/>
</if>
<return>
<value>${data}</value>
<status status="PASS" start="2024-11-14T17:16:26.822064" elapsed="0.000000"/>
</return>
<arg>UPCA_AddOn2_12345678901212</arg>
<arg>12345678901212</arg>
<status status="PASS" start="2024-11-14T17:16:25.450523" elapsed="1.371541"/>
</kw>
<kw name="Read" owner="Keywords">
<kw name="Log To Console" owner="BuiltIn">
<arg>\nReading label: ${image_name}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:16:26.822758" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Read Label" owner="Commands">
<arg>${current_directory}</arg>
<arg>${image_name}</arg>
<doc>Load image to Eink and wait HH read the barcode to respond data
- For Label Programing, the system will wait for default 4s to HH can read this label
- For Label programing digit, the system will wait for default 1.2 s to HH can't read this label twice</doc>
<status status="PASS" start="2024-11-14T17:16:26.823758" elapsed="1.942817"/>
</kw>
<msg time="2024-11-14T17:16:28.767584" level="INFO">${data} = 12345678901212345\r</msg>
<var>${data}</var>
<arg>Read Label</arg>
<arg>${current_directory}</arg>
<arg>${image_name}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:16:26.822758" elapsed="1.944826"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Expected-----: ${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:16:28.768579" elapsed="0.000996"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Responded----: ${data}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:16:28.769575" elapsed="0.000995"/>
</kw>
<kw name="LogImage" owner="Keywords">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-11-14T17:16:28.771582" level="INFO">${data} = C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\DataSet\UPCA_AddOn5_12345678901212345.jpg</msg>
<var>${data}</var>
<arg>${current_directory}\\${image_name}.jpg</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-11-14T17:16:28.771582" elapsed="0.000000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-14T17:16:28.772563" level="INFO" html="true">&lt;img src=C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\DataSet\UPCA_AddOn5_12345678901212345.jpg&gt;</msg>
<arg>&lt;img src=${data}&gt;</arg>
<arg>html=true</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-14T17:16:28.771582" elapsed="0.000981"/>
</kw>
<arg>${image_name}</arg>
<status status="PASS" start="2024-11-14T17:16:28.771582" elapsed="0.000981"/>
</kw>
<if>
<branch type="IF" condition="$value!=None">
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Compare" owner="Commands">
<arg>\nReading label: ${image_name}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<status status="PASS" start="2024-11-14T17:16:28.772563" elapsed="0.000000"/>
</kw>
<msg time="2024-11-14T17:16:28.772563" level="INFO">${data} = True</msg>
<var>${data}</var>
<arg>Compare</arg>
<arg>\nReading label: ${image_name}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:16:28.772563" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${data}</arg>
<arg>True</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-11-14T17:16:28.773561" elapsed="0.000000"/>
</kw>
<arg>Should Be Equal</arg>
<arg>${data}</arg>
<arg>True</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:16:28.773561" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-11-14T17:16:28.772563" elapsed="0.000998"/>
</branch>
<status status="PASS" start="2024-11-14T17:16:28.772563" elapsed="0.000998"/>
</if>
<return>
<value>${data}</value>
<status status="PASS" start="2024-11-14T17:16:28.773561" elapsed="0.000000"/>
</return>
<arg>UPCA_AddOn5_12345678901212345</arg>
<arg>12345678901212345</arg>
<status status="PASS" start="2024-11-14T17:16:26.822758" elapsed="1.950803"/>
</kw>
<kw name="Read" owner="Keywords">
<kw name="Log To Console" owner="BuiltIn">
<arg>\nReading label: ${image_name}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:16:28.774558" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Read Label" owner="Commands">
<arg>${current_directory}</arg>
<arg>${image_name}</arg>
<doc>Load image to Eink and wait HH read the barcode to respond data
- For Label Programing, the system will wait for default 4s to HH can read this label
- For Label programing digit, the system will wait for default 1.2 s to HH can't read this label twice</doc>
<status status="PASS" start="2024-11-14T17:16:28.774558" elapsed="1.644660"/>
</kw>
<msg time="2024-11-14T17:16:30.419218" level="INFO">${data} = 0234567389\r</msg>
<var>${data}</var>
<arg>Read Label</arg>
<arg>${current_directory}</arg>
<arg>${image_name}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:16:28.774558" elapsed="1.644660"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Expected-----: ${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:16:30.420219" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Responded----: ${data}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:16:30.420219" elapsed="0.000000"/>
</kw>
<kw name="LogImage" owner="Keywords">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-11-14T17:16:30.421215" level="INFO">${data} = C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\DataSet\UPCE_AddOn2_0234567389.jpg</msg>
<var>${data}</var>
<arg>${current_directory}\\${image_name}.jpg</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-11-14T17:16:30.421215" elapsed="0.000000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-14T17:16:30.422212" level="INFO" html="true">&lt;img src=C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\DataSet\UPCE_AddOn2_0234567389.jpg&gt;</msg>
<arg>&lt;img src=${data}&gt;</arg>
<arg>html=true</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-14T17:16:30.421215" elapsed="0.000997"/>
</kw>
<arg>${image_name}</arg>
<status status="PASS" start="2024-11-14T17:16:30.421215" elapsed="0.000997"/>
</kw>
<if>
<branch type="IF" condition="$value!=None">
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Compare" owner="Commands">
<arg>\nReading label: ${image_name}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<status status="PASS" start="2024-11-14T17:16:30.422212" elapsed="0.000000"/>
</kw>
<msg time="2024-11-14T17:16:30.423210" level="INFO">${data} = True</msg>
<var>${data}</var>
<arg>Compare</arg>
<arg>\nReading label: ${image_name}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:16:30.422212" elapsed="0.000998"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${data}</arg>
<arg>True</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-11-14T17:16:30.423210" elapsed="0.000000"/>
</kw>
<arg>Should Be Equal</arg>
<arg>${data}</arg>
<arg>True</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:16:30.423210" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-11-14T17:16:30.422212" elapsed="0.000998"/>
</branch>
<status status="PASS" start="2024-11-14T17:16:30.422212" elapsed="0.000998"/>
</if>
<return>
<value>${data}</value>
<status status="PASS" start="2024-11-14T17:16:30.423210" elapsed="0.000000"/>
</return>
<arg>UPCE_AddOn2_0234567389</arg>
<arg>0234567389</arg>
<status status="PASS" start="2024-11-14T17:16:28.774558" elapsed="1.648652"/>
</kw>
<kw name="Read" owner="Keywords">
<kw name="Log To Console" owner="BuiltIn">
<arg>\nReading label: ${image_name}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:16:30.424207" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Read Label" owner="Commands">
<arg>${current_directory}</arg>
<arg>${image_name}</arg>
<doc>Load image to Eink and wait HH read the barcode to respond data
- For Label Programing, the system will wait for default 4s to HH can read this label
- For Label programing digit, the system will wait for default 1.2 s to HH can't read this label twice</doc>
<status status="PASS" start="2024-11-14T17:16:30.424207" elapsed="1.683638"/>
</kw>
<msg time="2024-11-14T17:16:32.107845" level="INFO">${data} = 0234567389759\r</msg>
<var>${data}</var>
<arg>Read Label</arg>
<arg>${current_directory}</arg>
<arg>${image_name}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:16:30.424207" elapsed="1.683638"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Expected-----: ${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:16:32.107845" elapsed="0.001000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Responded----: ${data}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:16:32.108845" elapsed="0.000000"/>
</kw>
<kw name="LogImage" owner="Keywords">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-11-14T17:16:32.109842" level="INFO">${data} = C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\DataSet\UPCE_AddOn5_0234567389759.jpg</msg>
<var>${data}</var>
<arg>${current_directory}\\${image_name}.jpg</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-11-14T17:16:32.109842" elapsed="0.000000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-14T17:16:32.109842" level="INFO" html="true">&lt;img src=C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\DataSet\UPCE_AddOn5_0234567389759.jpg&gt;</msg>
<arg>&lt;img src=${data}&gt;</arg>
<arg>html=true</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-14T17:16:32.109842" elapsed="0.000000"/>
</kw>
<arg>${image_name}</arg>
<status status="PASS" start="2024-11-14T17:16:32.108845" elapsed="0.000997"/>
</kw>
<if>
<branch type="IF" condition="$value!=None">
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Compare" owner="Commands">
<arg>\nReading label: ${image_name}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<status status="PASS" start="2024-11-14T17:16:32.110840" elapsed="0.000000"/>
</kw>
<msg time="2024-11-14T17:16:32.110840" level="INFO">${data} = True</msg>
<var>${data}</var>
<arg>Compare</arg>
<arg>\nReading label: ${image_name}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:16:32.110840" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${data}</arg>
<arg>True</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-11-14T17:16:32.111836" elapsed="0.000000"/>
</kw>
<arg>Should Be Equal</arg>
<arg>${data}</arg>
<arg>True</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:16:32.110840" elapsed="0.000996"/>
</kw>
<status status="PASS" start="2024-11-14T17:16:32.109842" elapsed="0.001994"/>
</branch>
<status status="PASS" start="2024-11-14T17:16:32.109842" elapsed="0.001994"/>
</if>
<return>
<value>${data}</value>
<status status="PASS" start="2024-11-14T17:16:32.111836" elapsed="0.000000"/>
</return>
<arg>UPCE_AddOn5_0234567389759</arg>
<arg>0234567389759</arg>
<status status="PASS" start="2024-11-14T17:16:30.424207" elapsed="1.687629"/>
</kw>
<kw name="Read" owner="Keywords">
<kw name="Log To Console" owner="BuiltIn">
<arg>\nReading label: ${image_name}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:16:32.112834" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Read Label" owner="Commands">
<arg>${current_directory}</arg>
<arg>${image_name}</arg>
<doc>Load image to Eink and wait HH read the barcode to respond data
- For Label Programing, the system will wait for default 4s to HH can read this label
- For Label programing digit, the system will wait for default 1.2 s to HH can't read this label twice</doc>
<status status="PASS" start="2024-11-14T17:16:32.112834" elapsed="1.660427"/>
</kw>
<msg time="2024-11-14T17:16:33.773261" level="INFO">${data} = 1234567012\r</msg>
<var>${data}</var>
<arg>Read Label</arg>
<arg>${current_directory}</arg>
<arg>${image_name}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:16:32.112834" elapsed="1.661436"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Expected-----: ${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:16:33.774270" elapsed="0.000983"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Responded----: ${data}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:16:33.776254" elapsed="0.000995"/>
</kw>
<kw name="LogImage" owner="Keywords">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-11-14T17:16:33.777249" level="INFO">${data} = C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\DataSet\EAN8_AddOn2_1234567012.jpg</msg>
<var>${data}</var>
<arg>${current_directory}\\${image_name}.jpg</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-11-14T17:16:33.777249" elapsed="0.000995"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-14T17:16:33.778244" level="INFO" html="true">&lt;img src=C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\DataSet\EAN8_AddOn2_1234567012.jpg&gt;</msg>
<arg>&lt;img src=${data}&gt;</arg>
<arg>html=true</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-14T17:16:33.778244" elapsed="0.000000"/>
</kw>
<arg>${image_name}</arg>
<status status="PASS" start="2024-11-14T17:16:33.777249" elapsed="0.000995"/>
</kw>
<if>
<branch type="IF" condition="$value!=None">
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Compare" owner="Commands">
<arg>\nReading label: ${image_name}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<status status="PASS" start="2024-11-14T17:16:33.778244" elapsed="0.001022"/>
</kw>
<msg time="2024-11-14T17:16:33.779266" level="INFO">${data} = True</msg>
<var>${data}</var>
<arg>Compare</arg>
<arg>\nReading label: ${image_name}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:16:33.778244" elapsed="0.001022"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${data}</arg>
<arg>True</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-11-14T17:16:33.779266" elapsed="0.000000"/>
</kw>
<arg>Should Be Equal</arg>
<arg>${data}</arg>
<arg>True</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:16:33.779266" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-11-14T17:16:33.778244" elapsed="0.001022"/>
</branch>
<status status="PASS" start="2024-11-14T17:16:33.778244" elapsed="0.001022"/>
</if>
<return>
<value>${data}</value>
<status status="PASS" start="2024-11-14T17:16:33.779266" elapsed="0.000000"/>
</return>
<arg>EAN8_AddOn2_1234567012</arg>
<arg>1234567012</arg>
<status status="PASS" start="2024-11-14T17:16:32.111836" elapsed="1.668428"/>
</kw>
<kw name="Read" owner="Keywords">
<kw name="Log To Console" owner="BuiltIn">
<arg>\nReading label: ${image_name}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:16:33.780264" elapsed="0.000972"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Read Label" owner="Commands">
<arg>${current_directory}</arg>
<arg>${image_name}</arg>
<doc>Load image to Eink and wait HH read the barcode to respond data
- For Label Programing, the system will wait for default 4s to HH can read this label
- For Label programing digit, the system will wait for default 1.2 s to HH can't read this label twice</doc>
<status status="PASS" start="2024-11-14T17:16:33.781236" elapsed="1.673730"/>
</kw>
<msg time="2024-11-14T17:16:35.454966" level="INFO">${data} = 1234567012345\r</msg>
<var>${data}</var>
<arg>Read Label</arg>
<arg>${current_directory}</arg>
<arg>${image_name}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:16:33.781236" elapsed="1.673730"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Expected-----: ${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:16:35.455958" elapsed="0.000999"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Responded----: ${data}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:16:35.456957" elapsed="0.000996"/>
</kw>
<kw name="LogImage" owner="Keywords">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-11-14T17:16:35.459946" level="INFO">${data} = C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\DataSet\EAN8_AddOn5_1234567012345.jpg</msg>
<var>${data}</var>
<arg>${current_directory}\\${image_name}.jpg</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-11-14T17:16:35.458951" elapsed="0.000995"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-14T17:16:35.459946" level="INFO" html="true">&lt;img src=C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\DataSet\EAN8_AddOn5_1234567012345.jpg&gt;</msg>
<arg>&lt;img src=${data}&gt;</arg>
<arg>html=true</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-14T17:16:35.459946" elapsed="0.000000"/>
</kw>
<arg>${image_name}</arg>
<status status="PASS" start="2024-11-14T17:16:35.458951" elapsed="0.000995"/>
</kw>
<if>
<branch type="IF" condition="$value!=None">
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Compare" owner="Commands">
<arg>\nReading label: ${image_name}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<status status="PASS" start="2024-11-14T17:16:35.460943" elapsed="0.000000"/>
</kw>
<msg time="2024-11-14T17:16:35.460943" level="INFO">${data} = True</msg>
<var>${data}</var>
<arg>Compare</arg>
<arg>\nReading label: ${image_name}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:16:35.459946" elapsed="0.000997"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${data}</arg>
<arg>True</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-11-14T17:16:35.460943" elapsed="0.000000"/>
</kw>
<arg>Should Be Equal</arg>
<arg>${data}</arg>
<arg>True</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:16:35.460943" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-11-14T17:16:35.459946" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-11-14T17:16:35.459946" elapsed="0.000997"/>
</if>
<return>
<value>${data}</value>
<status status="PASS" start="2024-11-14T17:16:35.461941" elapsed="0.000000"/>
</return>
<arg>EAN8_AddOn5_1234567012345</arg>
<arg>1234567012345</arg>
<status status="PASS" start="2024-11-14T17:16:33.780264" elapsed="1.681677"/>
</kw>
<kw name="Read" owner="Keywords">
<kw name="Log To Console" owner="BuiltIn">
<arg>\nReading label: ${image_name}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:16:35.461941" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Read Label" owner="Commands">
<arg>${current_directory}</arg>
<arg>${image_name}</arg>
<doc>Load image to Eink and wait HH read the barcode to respond data
- For Label Programing, the system will wait for default 4s to HH can read this label
- For Label programing digit, the system will wait for default 1.2 s to HH can't read this label twice</doc>
<status status="PASS" start="2024-11-14T17:16:35.462938" elapsed="1.677994"/>
</kw>
<msg time="2024-11-14T17:16:37.141805" level="INFO">${data} = 123456789012812\r</msg>
<var>${data}</var>
<arg>Read Label</arg>
<arg>${current_directory}</arg>
<arg>${image_name}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:16:35.462938" elapsed="1.678867"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Expected-----: ${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:16:37.141805" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Responded----: ${data}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:16:37.141805" elapsed="0.001180"/>
</kw>
<kw name="LogImage" owner="Keywords">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-11-14T17:16:37.143985" level="INFO">${data} = C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\DataSet\EAN13_AddOn2_123456789012812.jpg</msg>
<var>${data}</var>
<arg>${current_directory}\\${image_name}.jpg</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-11-14T17:16:37.142985" elapsed="0.001000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-14T17:16:37.143985" level="INFO" html="true">&lt;img src=C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\DataSet\EAN13_AddOn2_123456789012812.jpg&gt;</msg>
<arg>&lt;img src=${data}&gt;</arg>
<arg>html=true</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-14T17:16:37.143985" elapsed="0.000000"/>
</kw>
<arg>${image_name}</arg>
<status status="PASS" start="2024-11-14T17:16:37.142985" elapsed="0.001000"/>
</kw>
<if>
<branch type="IF" condition="$value!=None">
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Compare" owner="Commands">
<arg>\nReading label: ${image_name}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<status status="PASS" start="2024-11-14T17:16:37.143985" elapsed="0.000998"/>
</kw>
<msg time="2024-11-14T17:16:37.144983" level="INFO">${data} = True</msg>
<var>${data}</var>
<arg>Compare</arg>
<arg>\nReading label: ${image_name}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:16:37.143985" elapsed="0.000998"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${data}</arg>
<arg>True</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-11-14T17:16:37.144983" elapsed="0.000000"/>
</kw>
<arg>Should Be Equal</arg>
<arg>${data}</arg>
<arg>True</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:16:37.144983" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-11-14T17:16:37.143985" elapsed="0.000998"/>
</branch>
<status status="PASS" start="2024-11-14T17:16:37.143985" elapsed="0.000998"/>
</if>
<return>
<value>${data}</value>
<status status="PASS" start="2024-11-14T17:16:37.144983" elapsed="0.000000"/>
</return>
<arg>EAN13_AddOn2_123456789012812</arg>
<arg>123456789012812</arg>
<status status="PASS" start="2024-11-14T17:16:35.461941" elapsed="1.683042"/>
</kw>
<kw name="Read" owner="Keywords">
<kw name="Log To Console" owner="BuiltIn">
<arg>\nReading label: ${image_name}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:16:37.146066" elapsed="0.000698"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Read Label" owner="Commands">
<arg>${current_directory}</arg>
<arg>${image_name}</arg>
<doc>Load image to Eink and wait HH read the barcode to respond data
- For Label Programing, the system will wait for default 4s to HH can read this label
- For Label programing digit, the system will wait for default 1.2 s to HH can't read this label twice</doc>
<status status="PASS" start="2024-11-14T17:16:37.146764" elapsed="1.680489"/>
</kw>
<msg time="2024-11-14T17:16:38.827253" level="INFO">${data} = 123456789012812345\r</msg>
<var>${data}</var>
<arg>Read Label</arg>
<arg>${current_directory}</arg>
<arg>${image_name}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:16:37.146764" elapsed="1.681487"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Expected-----: ${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:16:38.828251" elapsed="0.001032"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Responded----: ${data}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:16:38.830248" elapsed="0.000996"/>
</kw>
<kw name="LogImage" owner="Keywords">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-11-14T17:16:38.832238" level="INFO">${data} = C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\DataSet\EAN13_AddOn5_123456789012812345.jpg</msg>
<var>${data}</var>
<arg>${current_directory}\\${image_name}.jpg</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-11-14T17:16:38.831244" elapsed="0.000994"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-14T17:16:38.832238" level="INFO" html="true">&lt;img src=C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\DataSet\EAN13_AddOn5_123456789012812345.jpg&gt;</msg>
<arg>&lt;img src=${data}&gt;</arg>
<arg>html=true</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-14T17:16:38.832238" elapsed="0.000000"/>
</kw>
<arg>${image_name}</arg>
<status status="PASS" start="2024-11-14T17:16:38.831244" elapsed="0.000994"/>
</kw>
<if>
<branch type="IF" condition="$value!=None">
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Compare" owner="Commands">
<arg>\nReading label: ${image_name}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<status status="PASS" start="2024-11-14T17:16:38.833234" elapsed="0.000000"/>
</kw>
<msg time="2024-11-14T17:16:38.833234" level="INFO">${data} = True</msg>
<var>${data}</var>
<arg>Compare</arg>
<arg>\nReading label: ${image_name}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:16:38.833234" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${data}</arg>
<arg>True</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-11-14T17:16:38.833234" elapsed="0.000000"/>
</kw>
<arg>Should Be Equal</arg>
<arg>${data}</arg>
<arg>True</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:16:38.833234" elapsed="0.000999"/>
</kw>
<status status="PASS" start="2024-11-14T17:16:38.832238" elapsed="0.001995"/>
</branch>
<status status="PASS" start="2024-11-14T17:16:38.832238" elapsed="0.001995"/>
</if>
<return>
<value>${data}</value>
<status status="PASS" start="2024-11-14T17:16:38.834233" elapsed="0.000000"/>
</return>
<arg>EAN13_AddOn5_123456789012812345</arg>
<arg>123456789012812345</arg>
<status status="PASS" start="2024-11-14T17:16:37.146066" elapsed="1.688167"/>
</kw>
<kw name="Read" owner="Keywords">
<kw name="Log To Console" owner="BuiltIn">
<arg>\nReading label: ${image_name}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:16:38.834233" elapsed="0.000997"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Read Label" owner="Commands">
<arg>${current_directory}</arg>
<arg>${image_name}</arg>
<doc>Load image to Eink and wait HH read the barcode to respond data
- For Label Programing, the system will wait for default 4s to HH can read this label
- For Label programing digit, the system will wait for default 1.2 s to HH can't read this label twice</doc>
<status status="PASS" start="2024-11-14T17:16:38.835230" elapsed="1.688853"/>
</kw>
<msg time="2024-11-14T17:16:40.525080" level="INFO">${data} = 817525766012345\r</msg>
<var>${data}</var>
<arg>Read Label</arg>
<arg>${current_directory}</arg>
<arg>${image_name}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:16:38.835230" elapsed="1.689850"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Expected-----: ${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:16:40.525080" elapsed="0.000996"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Responded----: ${data}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:16:40.527079" elapsed="0.000994"/>
</kw>
<kw name="LogImage" owner="Keywords">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-11-14T17:16:40.530097" level="INFO">${data} = C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\DataSet\ISBN13_AddOn5_978817525766512345.jpg</msg>
<var>${data}</var>
<arg>${current_directory}\\${image_name}.jpg</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-11-14T17:16:40.530097" elapsed="0.000000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-14T17:16:40.530097" level="INFO" html="true">&lt;img src=C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\DataSet\ISBN13_AddOn5_978817525766512345.jpg&gt;</msg>
<arg>&lt;img src=${data}&gt;</arg>
<arg>html=true</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-14T17:16:40.530097" elapsed="0.000000"/>
</kw>
<arg>${image_name}</arg>
<status status="PASS" start="2024-11-14T17:16:40.529069" elapsed="0.001028"/>
</kw>
<if>
<branch type="IF" condition="$value!=None">
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Compare" owner="Commands">
<arg>\nReading label: ${image_name}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<status status="PASS" start="2024-11-14T17:16:40.531062" elapsed="0.000000"/>
</kw>
<msg time="2024-11-14T17:16:40.531062" level="INFO">${data} = True</msg>
<var>${data}</var>
<arg>Compare</arg>
<arg>\nReading label: ${image_name}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:16:40.531062" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${data}</arg>
<arg>True</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-11-14T17:16:40.531062" elapsed="0.000000"/>
</kw>
<arg>Should Be Equal</arg>
<arg>${data}</arg>
<arg>True</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:16:40.531062" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-11-14T17:16:40.530097" elapsed="0.001962"/>
</branch>
<status status="PASS" start="2024-11-14T17:16:40.530097" elapsed="0.001962"/>
</if>
<return>
<value>${data}</value>
<status status="PASS" start="2024-11-14T17:16:40.532059" elapsed="0.000000"/>
</return>
<arg>ISBN13_AddOn5_978817525766512345</arg>
<arg>817525766012345</arg>
<status status="PASS" start="2024-11-14T17:16:38.834233" elapsed="1.697826"/>
</kw>
<kw name="Read" owner="Keywords">
<kw name="Log To Console" owner="BuiltIn">
<arg>\nReading label: ${image_name}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:16:40.532329" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Read Label" owner="Commands">
<arg>${current_directory}</arg>
<arg>${image_name}</arg>
<doc>Load image to Eink and wait HH read the barcode to respond data
- For Label Programing, the system will wait for default 4s to HH can read this label
- For Label programing digit, the system will wait for default 1.2 s to HH can't read this label twice</doc>
<status status="PASS" start="2024-11-14T17:16:40.533358" elapsed="1.660299"/>
</kw>
<msg time="2024-11-14T17:16:42.193657" level="INFO">${data} = 1234567912\r</msg>
<var>${data}</var>
<arg>Read Label</arg>
<arg>${current_directory}</arg>
<arg>${image_name}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:16:40.532329" elapsed="1.662323"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Expected-----: ${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:16:42.194652" elapsed="0.000997"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Responded----: ${data}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:16:42.196647" elapsed="0.000997"/>
</kw>
<kw name="LogImage" owner="Keywords">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-11-14T17:16:42.197644" level="INFO">${data} = C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\DataSet\ISSN_AddOn2_977123456789812.jpg</msg>
<var>${data}</var>
<arg>${current_directory}\\${image_name}.jpg</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-11-14T17:16:42.197644" elapsed="0.000000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-14T17:16:42.198640" level="INFO" html="true">&lt;img src=C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\DataSet\ISSN_AddOn2_977123456789812.jpg&gt;</msg>
<arg>&lt;img src=${data}&gt;</arg>
<arg>html=true</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-14T17:16:42.198640" elapsed="0.000000"/>
</kw>
<arg>${image_name}</arg>
<status status="PASS" start="2024-11-14T17:16:42.197644" elapsed="0.000996"/>
</kw>
<if>
<branch type="IF" condition="$value!=None">
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Compare" owner="Commands">
<arg>\nReading label: ${image_name}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<status status="PASS" start="2024-11-14T17:16:42.198640" elapsed="0.000997"/>
</kw>
<msg time="2024-11-14T17:16:42.199637" level="INFO">${data} = True</msg>
<var>${data}</var>
<arg>Compare</arg>
<arg>\nReading label: ${image_name}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:16:42.198640" elapsed="0.000997"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${data}</arg>
<arg>True</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-11-14T17:16:42.199637" elapsed="0.000000"/>
</kw>
<arg>Should Be Equal</arg>
<arg>${data}</arg>
<arg>True</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:16:42.199637" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-11-14T17:16:42.198640" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-11-14T17:16:42.198640" elapsed="0.000997"/>
</if>
<return>
<value>${data}</value>
<status status="PASS" start="2024-11-14T17:16:42.199637" elapsed="0.000000"/>
</return>
<arg>ISSN_AddOn2_977123456789812</arg>
<arg>1234567912</arg>
<status status="PASS" start="2024-11-14T17:16:40.532329" elapsed="1.667308"/>
</kw>
<kw name="SetSoftTrigger" owner="Keywords">
<kw name="Set Trigger" owner="Commands">
<arg>${on_off}</arg>
<status status="PASS" start="2024-11-14T17:16:42.200634" elapsed="0.000000"/>
</kw>
<arg>Off</arg>
<doc>Set Soft trigger to On/Off</doc>
<status status="PASS" start="2024-11-14T17:16:42.200634" elapsed="0.000000"/>
</kw>
<doc>Verify that the HH doesn’t read twice (with and without AddOn) when reading a Add On label</doc>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="PASS" start="2024-11-14T17:16:06.818762" elapsed="35.382870"/>
</test>
<test id="s1-s1-t2" name="ATQ_AddOn_Timer_SNRM05" line="37">
<kw name="EnterSP" owner="Keywords">
<kw name="Log To Console" owner="BuiltIn">
<arg>\nSending Command: $S</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:16:42.202659" elapsed="0.000000"/>
</kw>
<kw name="Enter Service Port" owner="Commands">
<msg time="2024-11-14T17:16:42.613955" level="INFO">${data} = $&gt;\r</msg>
<var>${data}</var>
<status status="PASS" start="2024-11-14T17:16:42.203627" elapsed="0.410328"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Responded-------: ${data}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:16:42.613955" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="$value!=None">
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${data}</arg>
<arg>$&gt;\\r</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-11-14T17:16:42.614952" elapsed="0.000000"/>
</kw>
<arg>Should Be Equal</arg>
<arg>${data}</arg>
<arg>$&gt;\\r</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:16:42.614952" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-11-14T17:16:42.614952" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-11-14T17:16:42.614952" elapsed="0.000000"/>
</if>
<return>
<value>${data}</value>
<status status="PASS" start="2024-11-14T17:16:42.614952" elapsed="0.000000"/>
</return>
<arg>$&gt;</arg>
<status status="PASS" start="2024-11-14T17:16:42.202659" elapsed="0.413289"/>
</kw>
<kw name="Send" owner="Keywords">
<kw name="Log To Console" owner="BuiltIn">
<arg>\nSending Command: ${command}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:16:42.615948" elapsed="0.000000"/>
</kw>
<kw name="Send Command" owner="Commands">
<msg time="2024-11-14T17:16:43.034492" level="INFO">${data} = $&gt;\r</msg>
<var>${data}</var>
<arg>${command}</arg>
<status status="PASS" start="2024-11-14T17:16:42.616947" elapsed="0.417545"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Expected-------: ${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:16:43.034492" elapsed="0.000970"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Responded------: ${data}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:16:43.036459" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="$value!=None">
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Compare" owner="Commands">
<arg>\nSending Command: ${command}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<status status="PASS" start="2024-11-14T17:16:43.037456" elapsed="0.000000"/>
</kw>
<msg time="2024-11-14T17:16:43.037456" level="INFO">${data} = True</msg>
<var>${data}</var>
<arg>Compare</arg>
<arg>\nSending Command: ${command}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:16:43.036459" elapsed="0.000997"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${data}</arg>
<arg>True</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-11-14T17:16:43.037456" elapsed="0.000000"/>
</kw>
<arg>Should Be Equal</arg>
<arg>${data}</arg>
<arg>True</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:16:43.037456" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-11-14T17:16:43.036459" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-11-14T17:16:43.036459" elapsed="0.000997"/>
</if>
<return>
<value>${data}</value>
<status status="PASS" start="2024-11-14T17:16:43.038453" elapsed="0.000000"/>
</return>
<arg>$CABEN01</arg>
<arg>$&gt;</arg>
<status status="PASS" start="2024-11-14T17:16:42.615948" elapsed="0.422505"/>
</kw>
<kw name="Send" owner="Keywords">
<kw name="Log To Console" owner="BuiltIn">
<arg>\nSending Command: ${command}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:16:43.038453" elapsed="0.000997"/>
</kw>
<kw name="Send Command" owner="Commands">
<msg time="2024-11-14T17:16:43.454540" level="INFO">${data} = $&gt;\r</msg>
<var>${data}</var>
<arg>${command}</arg>
<status status="PASS" start="2024-11-14T17:16:43.039450" elapsed="0.415090"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Expected-------: ${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:16:43.454540" elapsed="0.000727"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Responded------: ${data}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:16:43.455267" elapsed="0.000999"/>
</kw>
<if>
<branch type="IF" condition="$value!=None">
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Compare" owner="Commands">
<arg>\nSending Command: ${command}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<status status="PASS" start="2024-11-14T17:16:43.456266" elapsed="0.000000"/>
</kw>
<msg time="2024-11-14T17:16:43.456266" level="INFO">${data} = True</msg>
<var>${data}</var>
<arg>Compare</arg>
<arg>\nSending Command: ${command}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:16:43.456266" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${data}</arg>
<arg>True</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-11-14T17:16:43.457261" elapsed="0.000000"/>
</kw>
<arg>Should Be Equal</arg>
<arg>${data}</arg>
<arg>True</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:16:43.457261" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-11-14T17:16:43.456266" elapsed="0.000995"/>
</branch>
<status status="PASS" start="2024-11-14T17:16:43.456266" elapsed="0.000995"/>
</if>
<return>
<value>${data}</value>
<status status="PASS" start="2024-11-14T17:16:43.457261" elapsed="0.000000"/>
</return>
<arg>$CEBEN01</arg>
<arg>$&gt;</arg>
<status status="PASS" start="2024-11-14T17:16:43.038453" elapsed="0.418808"/>
</kw>
<kw name="Send" owner="Keywords">
<kw name="Log To Console" owner="BuiltIn">
<arg>\nSending Command: ${command}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:16:43.458258" elapsed="0.000000"/>
</kw>
<kw name="Send Command" owner="Commands">
<msg time="2024-11-14T17:16:43.874045" level="INFO">${data} = $&gt;\r</msg>
<var>${data}</var>
<arg>${command}</arg>
<status status="PASS" start="2024-11-14T17:16:43.458258" elapsed="0.415787"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Expected-------: ${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:16:43.874045" elapsed="0.000721"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Responded------: ${data}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:16:43.874766" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="$value!=None">
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Compare" owner="Commands">
<arg>\nSending Command: ${command}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<status status="PASS" start="2024-11-14T17:16:43.875763" elapsed="0.000000"/>
</kw>
<msg time="2024-11-14T17:16:43.875763" level="INFO">${data} = True</msg>
<var>${data}</var>
<arg>Compare</arg>
<arg>\nSending Command: ${command}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:16:43.875763" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${data}</arg>
<arg>True</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-11-14T17:16:43.875763" elapsed="0.000996"/>
</kw>
<arg>Should Be Equal</arg>
<arg>${data}</arg>
<arg>True</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:16:43.875763" elapsed="0.000996"/>
</kw>
<status status="PASS" start="2024-11-14T17:16:43.874766" elapsed="0.001993"/>
</branch>
<status status="PASS" start="2024-11-14T17:16:43.874766" elapsed="0.001993"/>
</if>
<return>
<value>${data}</value>
<status status="PASS" start="2024-11-14T17:16:43.876759" elapsed="0.000000"/>
</return>
<arg>$C8BEN01</arg>
<arg>$&gt;</arg>
<status status="PASS" start="2024-11-14T17:16:43.458258" elapsed="0.418501"/>
</kw>
<kw name="Send" owner="Keywords">
<kw name="Log To Console" owner="BuiltIn">
<arg>\nSending Command: ${command}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:16:43.876759" elapsed="0.000998"/>
</kw>
<kw name="Send Command" owner="Commands">
<msg time="2024-11-14T17:16:44.295713" level="INFO">${data} = $&gt;\r</msg>
<var>${data}</var>
<arg>${command}</arg>
<status status="PASS" start="2024-11-14T17:16:43.877757" elapsed="0.417956"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Expected-------: ${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:16:44.296715" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Responded------: ${data}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:16:44.296715" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="$value!=None">
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Compare" owner="Commands">
<arg>\nSending Command: ${command}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<status status="PASS" start="2024-11-14T17:16:44.297710" elapsed="0.000000"/>
</kw>
<msg time="2024-11-14T17:16:44.297710" level="INFO">${data} = True</msg>
<var>${data}</var>
<arg>Compare</arg>
<arg>\nSending Command: ${command}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:16:44.297710" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${data}</arg>
<arg>True</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-11-14T17:16:44.298708" elapsed="0.000000"/>
</kw>
<arg>Should Be Equal</arg>
<arg>${data}</arg>
<arg>True</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:16:44.297710" elapsed="0.000998"/>
</kw>
<status status="PASS" start="2024-11-14T17:16:44.296715" elapsed="0.001993"/>
</branch>
<status status="PASS" start="2024-11-14T17:16:44.296715" elapsed="0.001993"/>
</if>
<return>
<value>${data}</value>
<status status="PASS" start="2024-11-14T17:16:44.298708" elapsed="0.000000"/>
</return>
<arg>$C3BEN01</arg>
<arg>$&gt;</arg>
<status status="PASS" start="2024-11-14T17:16:43.876759" elapsed="0.421949"/>
</kw>
<kw name="Send" owner="Keywords">
<kw name="Log To Console" owner="BuiltIn">
<arg>\nSending Command: ${command}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:16:44.299705" elapsed="0.000000"/>
</kw>
<kw name="Send Command" owner="Commands">
<msg time="2024-11-14T17:16:44.716260" level="INFO">${data} = $&gt;\r</msg>
<var>${data}</var>
<arg>${command}</arg>
<status status="PASS" start="2024-11-14T17:16:44.299705" elapsed="0.416555"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Expected-------: ${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:16:44.716260" elapsed="0.000959"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Responded------: ${data}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:16:44.717219" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="$value!=None">
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Compare" owner="Commands">
<arg>\nSending Command: ${command}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<status status="PASS" start="2024-11-14T17:16:44.718231" elapsed="0.000000"/>
</kw>
<msg time="2024-11-14T17:16:44.718231" level="INFO">${data} = True</msg>
<var>${data}</var>
<arg>Compare</arg>
<arg>\nSending Command: ${command}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:16:44.718231" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${data}</arg>
<arg>True</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-11-14T17:16:44.719217" elapsed="0.000000"/>
</kw>
<arg>Should Be Equal</arg>
<arg>${data}</arg>
<arg>True</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:16:44.718231" elapsed="0.000986"/>
</kw>
<status status="PASS" start="2024-11-14T17:16:44.717219" elapsed="0.001998"/>
</branch>
<status status="PASS" start="2024-11-14T17:16:44.717219" elapsed="0.001998"/>
</if>
<return>
<value>${data}</value>
<status status="PASS" start="2024-11-14T17:16:44.719217" elapsed="0.000000"/>
</return>
<arg>$C3BIN01</arg>
<arg>$&gt;</arg>
<status status="PASS" start="2024-11-14T17:16:44.298708" elapsed="0.420509"/>
</kw>
<kw name="Send" owner="Keywords">
<kw name="Log To Console" owner="BuiltIn">
<arg>\nSending Command: ${command}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:16:44.720227" elapsed="0.000000"/>
</kw>
<kw name="Send Command" owner="Commands">
<msg time="2024-11-14T17:16:45.137773" level="INFO">${data} = $&gt;\r</msg>
<var>${data}</var>
<arg>${command}</arg>
<status status="PASS" start="2024-11-14T17:16:44.720227" elapsed="0.417546"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Expected-------: ${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:16:45.137773" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Responded------: ${data}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:16:45.138775" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="$value!=None">
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Compare" owner="Commands">
<arg>\nSending Command: ${command}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<status status="PASS" start="2024-11-14T17:16:45.139771" elapsed="0.000000"/>
</kw>
<msg time="2024-11-14T17:16:45.139771" level="INFO">${data} = True</msg>
<var>${data}</var>
<arg>Compare</arg>
<arg>\nSending Command: ${command}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:16:45.138775" elapsed="0.000996"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${data}</arg>
<arg>True</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-11-14T17:16:45.140768" elapsed="0.000000"/>
</kw>
<arg>Should Be Equal</arg>
<arg>${data}</arg>
<arg>True</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:16:45.139771" elapsed="0.000997"/>
</kw>
<status status="PASS" start="2024-11-14T17:16:45.138775" elapsed="0.001993"/>
</branch>
<status status="PASS" start="2024-11-14T17:16:45.138775" elapsed="0.001993"/>
</if>
<return>
<value>${data}</value>
<status status="PASS" start="2024-11-14T17:16:45.140768" elapsed="0.000000"/>
</return>
<arg>$C3BIS01</arg>
<arg>$&gt;</arg>
<status status="PASS" start="2024-11-14T17:16:44.719217" elapsed="0.421551"/>
</kw>
<kw name="Send" owner="Keywords">
<kw name="Log To Console" owner="BuiltIn">
<arg>\nSending Command: ${command}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:16:45.141765" elapsed="0.000000"/>
</kw>
<kw name="Send Command" owner="Commands">
<msg time="2024-11-14T17:16:45.556825" level="INFO">${data} = $&gt;\r</msg>
<var>${data}</var>
<arg>${command}</arg>
<status status="PASS" start="2024-11-14T17:16:45.141765" elapsed="0.415804"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Expected-------: ${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:16:45.557569" elapsed="0.001234"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Responded------: ${data}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:16:45.558803" elapsed="0.001005"/>
</kw>
<if>
<branch type="IF" condition="$value!=None">
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Compare" owner="Commands">
<arg>\nSending Command: ${command}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<status status="PASS" start="2024-11-14T17:16:45.561840" elapsed="0.000000"/>
</kw>
<msg time="2024-11-14T17:16:45.561840" level="INFO">${data} = True</msg>
<var>${data}</var>
<arg>Compare</arg>
<arg>\nSending Command: ${command}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:16:45.560810" elapsed="0.001030"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${data}</arg>
<arg>True</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-11-14T17:16:45.561840" elapsed="0.000000"/>
</kw>
<arg>Should Be Equal</arg>
<arg>${data}</arg>
<arg>True</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:16:45.561840" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-11-14T17:16:45.560810" elapsed="0.002020"/>
</branch>
<status status="PASS" start="2024-11-14T17:16:45.560810" elapsed="0.002020"/>
</if>
<return>
<value>${data}</value>
<status status="PASS" start="2024-11-14T17:16:45.562830" elapsed="0.000000"/>
</return>
<arg>$CADO201</arg>
<arg>$&gt;</arg>
<status status="PASS" start="2024-11-14T17:16:45.140768" elapsed="0.422062"/>
</kw>
<kw name="Send" owner="Keywords">
<kw name="Log To Console" owner="BuiltIn">
<arg>\nSending Command: ${command}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:16:45.563139" elapsed="0.000698"/>
</kw>
<kw name="Send Command" owner="Commands">
<msg time="2024-11-14T17:16:45.977949" level="INFO">${data} = $&gt;\r</msg>
<var>${data}</var>
<arg>${command}</arg>
<status status="PASS" start="2024-11-14T17:16:45.563837" elapsed="0.414112"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Expected-------: ${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:16:45.977949" elapsed="0.001003"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Responded------: ${data}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:16:45.978952" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="$value!=None">
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Compare" owner="Commands">
<arg>\nSending Command: ${command}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<status status="PASS" start="2024-11-14T17:16:45.979948" elapsed="0.000000"/>
</kw>
<msg time="2024-11-14T17:16:45.979948" level="INFO">${data} = True</msg>
<var>${data}</var>
<arg>Compare</arg>
<arg>\nSending Command: ${command}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:16:45.979948" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${data}</arg>
<arg>True</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-11-14T17:16:45.980945" elapsed="0.000000"/>
</kw>
<arg>Should Be Equal</arg>
<arg>${data}</arg>
<arg>True</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:16:45.979948" elapsed="0.000997"/>
</kw>
<status status="PASS" start="2024-11-14T17:16:45.978952" elapsed="0.001993"/>
</branch>
<status status="PASS" start="2024-11-14T17:16:45.978952" elapsed="0.001993"/>
</if>
<return>
<value>${data}</value>
<status status="PASS" start="2024-11-14T17:16:45.980945" elapsed="0.000000"/>
</return>
<arg>$CADO501</arg>
<arg>$&gt;</arg>
<status status="PASS" start="2024-11-14T17:16:45.563139" elapsed="0.417806"/>
</kw>
<kw name="Send" owner="Keywords">
<kw name="Log To Console" owner="BuiltIn">
<arg>\nSending Command: ${command}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:16:45.981611" elapsed="0.000000"/>
</kw>
<kw name="Send Command" owner="Commands">
<msg time="2024-11-14T17:16:46.393721" level="INFO">${data} = $&gt;\r</msg>
<var>${data}</var>
<arg>${command}</arg>
<status status="PASS" start="2024-11-14T17:16:45.982611" elapsed="0.411110"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Expected-------: ${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:16:46.394719" elapsed="0.000993"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Responded------: ${data}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:16:46.395712" elapsed="0.001003"/>
</kw>
<if>
<branch type="IF" condition="$value!=None">
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Compare" owner="Commands">
<arg>\nSending Command: ${command}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<status status="PASS" start="2024-11-14T17:16:46.398704" elapsed="0.000000"/>
</kw>
<msg time="2024-11-14T17:16:46.398704" level="INFO">${data} = True</msg>
<var>${data}</var>
<arg>Compare</arg>
<arg>\nSending Command: ${command}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:16:46.397710" elapsed="0.000994"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${data}</arg>
<arg>True</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-11-14T17:16:46.398704" elapsed="0.000996"/>
</kw>
<arg>Should Be Equal</arg>
<arg>${data}</arg>
<arg>True</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:16:46.398704" elapsed="0.000996"/>
</kw>
<status status="PASS" start="2024-11-14T17:16:46.396715" elapsed="0.002985"/>
</branch>
<status status="PASS" start="2024-11-14T17:16:46.396715" elapsed="0.002985"/>
</if>
<return>
<value>${data}</value>
<status status="PASS" start="2024-11-14T17:16:46.399700" elapsed="0.000000"/>
</return>
<arg>$CADOT1E</arg>
<arg>$&gt;</arg>
<status status="PASS" start="2024-11-14T17:16:45.981611" elapsed="0.418089"/>
</kw>
<kw name="Send" owner="Keywords">
<kw name="Log To Console" owner="BuiltIn">
<arg>\nSending Command: ${command}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:16:46.400218" elapsed="0.001000"/>
</kw>
<kw name="Send Command" owner="Commands">
<msg time="2024-11-14T17:16:46.814404" level="INFO">${data} = $&gt;\r</msg>
<var>${data}</var>
<arg>${command}</arg>
<status status="PASS" start="2024-11-14T17:16:46.401218" elapsed="0.413186"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Expected-------: ${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:16:46.814404" elapsed="0.000730"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Responded------: ${data}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:16:46.815134" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="$value!=None">
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Compare" owner="Commands">
<arg>\nSending Command: ${command}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<status status="PASS" start="2024-11-14T17:16:46.816158" elapsed="0.000000"/>
</kw>
<msg time="2024-11-14T17:16:46.816158" level="INFO">${data} = True</msg>
<var>${data}</var>
<arg>Compare</arg>
<arg>\nSending Command: ${command}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:16:46.816158" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${data}</arg>
<arg>True</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-11-14T17:16:46.816158" elapsed="0.001003"/>
</kw>
<arg>Should Be Equal</arg>
<arg>${data}</arg>
<arg>True</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:16:46.816158" elapsed="0.001003"/>
</kw>
<status status="PASS" start="2024-11-14T17:16:46.815134" elapsed="0.002027"/>
</branch>
<status status="PASS" start="2024-11-14T17:16:46.815134" elapsed="0.002027"/>
</if>
<return>
<value>${data}</value>
<status status="PASS" start="2024-11-14T17:16:46.817161" elapsed="0.000000"/>
</return>
<arg>$CSNRM05</arg>
<arg>$&gt;</arg>
<status status="PASS" start="2024-11-14T17:16:46.400218" elapsed="0.416943"/>
</kw>
<kw name="Send" owner="Keywords">
<kw name="Log To Console" owner="BuiltIn">
<arg>\nSending Command: ${command}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:16:46.818154" elapsed="0.000000"/>
</kw>
<kw name="Send Command" owner="Commands">
<msg time="2024-11-14T17:17:00.833464" level="INFO">${data} = $&gt;\r</msg>
<var>${data}</var>
<arg>${command}</arg>
<status status="PASS" start="2024-11-14T17:16:46.818154" elapsed="14.015310"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Expected-------: ${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:17:00.833464" elapsed="0.000860"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Responded------: ${data}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:17:00.834324" elapsed="0.000448"/>
</kw>
<if>
<branch type="IF" condition="$value!=None">
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Compare" owner="Commands">
<arg>\nSending Command: ${command}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<status status="PASS" start="2024-11-14T17:17:00.834772" elapsed="0.000000"/>
</kw>
<msg time="2024-11-14T17:17:00.834772" level="INFO">${data} = True</msg>
<var>${data}</var>
<arg>Compare</arg>
<arg>\nSending Command: ${command}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:17:00.834772" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${data}</arg>
<arg>True</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-11-14T17:17:00.835772" elapsed="0.000000"/>
</kw>
<arg>Should Be Equal</arg>
<arg>${data}</arg>
<arg>True</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:17:00.835772" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-11-14T17:17:00.834772" elapsed="0.001000"/>
</branch>
<status status="PASS" start="2024-11-14T17:17:00.834772" elapsed="0.001000"/>
</if>
<return>
<value>${data}</value>
<status status="PASS" start="2024-11-14T17:17:00.835772" elapsed="0.000000"/>
</return>
<arg>$Ar</arg>
<arg>$&gt;</arg>
<status status="PASS" start="2024-11-14T17:16:46.817161" elapsed="14.018611"/>
</kw>
<kw name="Read" owner="Keywords">
<kw name="Log To Console" owner="BuiltIn">
<arg>\nReading label: ${image_name}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:17:00.836769" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Read Label" owner="Commands">
<arg>${current_directory}</arg>
<arg>${image_name}</arg>
<doc>Load image to Eink and wait HH read the barcode to respond data
- For Label Programing, the system will wait for default 4s to HH can read this label
- For Label programing digit, the system will wait for default 1.2 s to HH can't read this label twice</doc>
<status status="PASS" start="2024-11-14T17:17:00.836769" elapsed="8.165434"/>
</kw>
<msg time="2024-11-14T17:17:09.002203" level="INFO">${data} = </msg>
<var>${data}</var>
<arg>Read Label</arg>
<arg>${current_directory}</arg>
<arg>${image_name}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:17:00.836769" elapsed="8.165434"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Expected-----: ${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:17:09.002203" elapsed="0.001004"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Responded----: ${data}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:17:09.003207" elapsed="0.000000"/>
</kw>
<kw name="LogImage" owner="Keywords">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-11-14T17:17:09.004197" level="INFO">${data} = C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\DataSet\UPCA_AddOn2_12345678901212.jpg</msg>
<var>${data}</var>
<arg>${current_directory}\\${image_name}.jpg</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-11-14T17:17:09.003207" elapsed="0.000990"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-14T17:17:09.004197" level="INFO" html="true">&lt;img src=C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\DataSet\UPCA_AddOn2_12345678901212.jpg&gt;</msg>
<arg>&lt;img src=${data}&gt;</arg>
<arg>html=true</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-14T17:17:09.004197" elapsed="0.000000"/>
</kw>
<arg>${image_name}</arg>
<status status="PASS" start="2024-11-14T17:17:09.003207" elapsed="0.000990"/>
</kw>
<if>
<branch type="IF" condition="$value!=None">
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Compare" owner="Commands">
<arg>\nReading label: ${image_name}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<status status="PASS" start="2024-11-14T17:17:09.005198" elapsed="0.000000"/>
</kw>
<msg time="2024-11-14T17:17:09.005198" level="INFO">${data} = 
Reading label: UPCA_AddOn2_12345678901212 
Observed:  
Expected: 12345678901212</msg>
<var>${data}</var>
<arg>Compare</arg>
<arg>\nReading label: ${image_name}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:17:09.004197" elapsed="0.001001"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Should Be Equal" owner="BuiltIn">
<msg time="2024-11-14T17:17:09.005198" level="FAIL">
Reading label: UPCA_AddOn2_12345678901212 
Observed:  
Expected: 12345678901212 != True</msg>
<arg>${data}</arg>
<arg>True</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="FAIL" start="2024-11-14T17:17:09.005198" elapsed="0.000994">
Reading label: UPCA_AddOn2_12345678901212 
Observed:  
Expected: 12345678901212 != True</status>
</kw>
<arg>Should Be Equal</arg>
<arg>${data}</arg>
<arg>True</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="FAIL" start="2024-11-14T17:17:09.005198" elapsed="0.000994">
Reading label: UPCA_AddOn2_12345678901212 
Observed:  
Expected: 12345678901212 != True</status>
</kw>
<status status="FAIL" start="2024-11-14T17:17:09.004197" elapsed="0.001995">
Reading label: UPCA_AddOn2_12345678901212 
Observed:  
Expected: 12345678901212 != True</status>
</branch>
<status status="FAIL" start="2024-11-14T17:17:09.004197" elapsed="0.001995">
Reading label: UPCA_AddOn2_12345678901212 
Observed:  
Expected: 12345678901212 != True</status>
</if>
<return>
<value>${data}</value>
<status status="PASS" start="2024-11-14T17:17:09.006192" elapsed="0.000000"/>
</return>
<arg>UPCA_AddOn2_12345678901212</arg>
<arg>12345678901212</arg>
<status status="FAIL" start="2024-11-14T17:17:00.835772" elapsed="8.170420">
Reading label: UPCA_AddOn2_12345678901212 
Observed:  
Expected: 12345678901212 != True</status>
</kw>
<kw name="Read" owner="Keywords">
<kw name="Log To Console" owner="BuiltIn">
<arg>\nReading label: ${image_name}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:17:09.007190" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Read Label" owner="Commands">
<arg>${current_directory}</arg>
<arg>${image_name}</arg>
<doc>Load image to Eink and wait HH read the barcode to respond data
- For Label Programing, the system will wait for default 4s to HH can read this label
- For Label programing digit, the system will wait for default 1.2 s to HH can't read this label twice</doc>
<status status="PASS" start="2024-11-14T17:17:09.007190" elapsed="8.717361"/>
</kw>
<msg time="2024-11-14T17:17:17.725549" level="INFO">${data} = </msg>
<var>${data}</var>
<arg>Read Label</arg>
<arg>${current_directory}</arg>
<arg>${image_name}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:17:09.007190" elapsed="8.718359"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Expected-----: ${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:17:17.725549" elapsed="0.001005"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Responded----: ${data}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:17:17.727543" elapsed="0.000000"/>
</kw>
<kw name="LogImage" owner="Keywords">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-11-14T17:17:17.728535" level="INFO">${data} = C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\DataSet\UPCA_AddOn5_12345678901212345.jpg</msg>
<var>${data}</var>
<arg>${current_directory}\\${image_name}.jpg</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-11-14T17:17:17.728535" elapsed="0.000000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-14T17:17:17.728535" level="INFO" html="true">&lt;img src=C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\DataSet\UPCA_AddOn5_12345678901212345.jpg&gt;</msg>
<arg>&lt;img src=${data}&gt;</arg>
<arg>html=true</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-14T17:17:17.728535" elapsed="0.000000"/>
</kw>
<arg>${image_name}</arg>
<status status="PASS" start="2024-11-14T17:17:17.728535" elapsed="0.000996"/>
</kw>
<if>
<branch type="IF" condition="$value!=None">
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Compare" owner="Commands">
<arg>\nReading label: ${image_name}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<status status="PASS" start="2024-11-14T17:17:17.729531" elapsed="0.000000"/>
</kw>
<msg time="2024-11-14T17:17:17.729531" level="INFO">${data} = 
Reading label: UPCA_AddOn5_12345678901212345 
Observed:  
Expected: 12345678901212345</msg>
<var>${data}</var>
<arg>Compare</arg>
<arg>\nReading label: ${image_name}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:17:17.729531" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Should Be Equal" owner="BuiltIn">
<msg time="2024-11-14T17:17:17.730529" level="FAIL">
Reading label: UPCA_AddOn5_12345678901212345 
Observed:  
Expected: 12345678901212345 != True</msg>
<arg>${data}</arg>
<arg>True</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="FAIL" start="2024-11-14T17:17:17.730529" elapsed="0.000000">
Reading label: UPCA_AddOn5_12345678901212345 
Observed:  
Expected: 12345678901212345 != True</status>
</kw>
<arg>Should Be Equal</arg>
<arg>${data}</arg>
<arg>True</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="FAIL" start="2024-11-14T17:17:17.729531" elapsed="0.000998">
Reading label: UPCA_AddOn5_12345678901212345 
Observed:  
Expected: 12345678901212345 != True</status>
</kw>
<status status="FAIL" start="2024-11-14T17:17:17.729531" elapsed="0.000998">
Reading label: UPCA_AddOn5_12345678901212345 
Observed:  
Expected: 12345678901212345 != True</status>
</branch>
<status status="FAIL" start="2024-11-14T17:17:17.729531" elapsed="0.000998">
Reading label: UPCA_AddOn5_12345678901212345 
Observed:  
Expected: 12345678901212345 != True</status>
</if>
<return>
<value>${data}</value>
<status status="PASS" start="2024-11-14T17:17:17.730529" elapsed="0.000000"/>
</return>
<arg>UPCA_AddOn5_12345678901212345</arg>
<arg>12345678901212345</arg>
<status status="FAIL" start="2024-11-14T17:17:09.006192" elapsed="8.724337">
Reading label: UPCA_AddOn5_12345678901212345 
Observed:  
Expected: 12345678901212345 != True</status>
</kw>
<kw name="Read" owner="Keywords">
<kw name="Log To Console" owner="BuiltIn">
<arg>\nReading label: ${image_name}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:17:17.731526" elapsed="0.000558"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Read Label" owner="Commands">
<arg>${current_directory}</arg>
<arg>${image_name}</arg>
<doc>Load image to Eink and wait HH read the barcode to respond data
- For Label Programing, the system will wait for default 4s to HH can read this label
- For Label programing digit, the system will wait for default 1.2 s to HH can't read this label twice</doc>
<status status="PASS" start="2024-11-14T17:17:17.732084" elapsed="1.105124"/>
</kw>
<msg time="2024-11-14T17:17:18.837208" level="INFO">${data} = 123456789012\r</msg>
<var>${data}</var>
<arg>Read Label</arg>
<arg>${current_directory}</arg>
<arg>${image_name}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:17:17.732084" elapsed="1.105124"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Expected-----: ${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:17:18.837208" elapsed="0.001031"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Responded----: ${data}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:17:18.838239" elapsed="0.000000"/>
</kw>
<kw name="LogImage" owner="Keywords">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-11-14T17:17:18.839202" level="INFO">${data} = C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\DataSet\UPCE_AddOn2_0234567389.jpg</msg>
<var>${data}</var>
<arg>${current_directory}\\${image_name}.jpg</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-11-14T17:17:18.839202" elapsed="0.000000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-14T17:17:18.839202" level="INFO" html="true">&lt;img src=C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\DataSet\UPCE_AddOn2_0234567389.jpg&gt;</msg>
<arg>&lt;img src=${data}&gt;</arg>
<arg>html=true</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-14T17:17:18.839202" elapsed="0.000997"/>
</kw>
<arg>${image_name}</arg>
<status status="PASS" start="2024-11-14T17:17:18.839202" elapsed="0.000997"/>
</kw>
<if>
<branch type="IF" condition="$value!=None">
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Compare" owner="Commands">
<arg>\nReading label: ${image_name}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<status status="PASS" start="2024-11-14T17:17:18.840199" elapsed="0.000000"/>
</kw>
<msg time="2024-11-14T17:17:18.840199" level="INFO">${data} = 
Reading label: UPCE_AddOn2_0234567389 
Observed: 123456789012 
Expected: 0234567389</msg>
<var>${data}</var>
<arg>Compare</arg>
<arg>\nReading label: ${image_name}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:17:18.840199" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Should Be Equal" owner="BuiltIn">
<msg time="2024-11-14T17:17:18.841196" level="FAIL">
Reading label: UPCE_AddOn2_0234567389 
Observed: 123456789012 
Expected: 0234567389 != True</msg>
<arg>${data}</arg>
<arg>True</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="FAIL" start="2024-11-14T17:17:18.841196" elapsed="0.000000">
Reading label: UPCE_AddOn2_0234567389 
Observed: 123456789012 
Expected: 0234567389 != True</status>
</kw>
<arg>Should Be Equal</arg>
<arg>${data}</arg>
<arg>True</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="FAIL" start="2024-11-14T17:17:18.840199" elapsed="0.000997">
Reading label: UPCE_AddOn2_0234567389 
Observed: 123456789012 
Expected: 0234567389 != True</status>
</kw>
<status status="FAIL" start="2024-11-14T17:17:18.840199" elapsed="0.000997">
Reading label: UPCE_AddOn2_0234567389 
Observed: 123456789012 
Expected: 0234567389 != True</status>
</branch>
<status status="FAIL" start="2024-11-14T17:17:18.840199" elapsed="0.000997">
Reading label: UPCE_AddOn2_0234567389 
Observed: 123456789012 
Expected: 0234567389 != True</status>
</if>
<return>
<value>${data}</value>
<status status="PASS" start="2024-11-14T17:17:18.841196" elapsed="0.000000"/>
</return>
<arg>UPCE_AddOn2_0234567389</arg>
<arg>0234567389</arg>
<status status="FAIL" start="2024-11-14T17:17:17.731526" elapsed="1.109670">
Reading label: UPCE_AddOn2_0234567389 
Observed: 123456789012 
Expected: 0234567389 != True</status>
</kw>
<kw name="Read" owner="Keywords">
<kw name="Log To Console" owner="BuiltIn">
<arg>\nReading label: ${image_name}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:17:18.842193" elapsed="0.000681"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Read Label" owner="Commands">
<arg>${current_directory}</arg>
<arg>${image_name}</arg>
<doc>Load image to Eink and wait HH read the barcode to respond data
- For Label Programing, the system will wait for default 4s to HH can read this label
- For Label programing digit, the system will wait for default 1.2 s to HH can't read this label twice</doc>
<status status="PASS" start="2024-11-14T17:17:18.842874" elapsed="1.595518"/>
</kw>
<msg time="2024-11-14T17:17:20.439392" level="INFO">${data} = 0234567389759\r</msg>
<var>${data}</var>
<arg>Read Label</arg>
<arg>${current_directory}</arg>
<arg>${image_name}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:17:18.842874" elapsed="1.596518"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Expected-----: ${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:17:20.439392" elapsed="0.001995"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Responded----: ${data}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:17:20.441387" elapsed="0.000996"/>
</kw>
<kw name="LogImage" owner="Keywords">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-11-14T17:17:20.444372" level="INFO">${data} = C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\DataSet\UPCE_AddOn5_0234567389759.jpg</msg>
<var>${data}</var>
<arg>${current_directory}\\${image_name}.jpg</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-11-14T17:17:20.443387" elapsed="0.000985"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-14T17:17:20.444372" level="INFO" html="true">&lt;img src=C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\DataSet\UPCE_AddOn5_0234567389759.jpg&gt;</msg>
<arg>&lt;img src=${data}&gt;</arg>
<arg>html=true</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-14T17:17:20.444372" elapsed="0.000000"/>
</kw>
<arg>${image_name}</arg>
<status status="PASS" start="2024-11-14T17:17:20.443387" elapsed="0.000985"/>
</kw>
<if>
<branch type="IF" condition="$value!=None">
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Compare" owner="Commands">
<arg>\nReading label: ${image_name}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<status status="PASS" start="2024-11-14T17:17:20.445399" elapsed="0.000000"/>
</kw>
<msg time="2024-11-14T17:17:20.445399" level="INFO">${data} = True</msg>
<var>${data}</var>
<arg>Compare</arg>
<arg>\nReading label: ${image_name}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:17:20.444372" elapsed="0.001027"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${data}</arg>
<arg>True</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-11-14T17:17:20.445399" elapsed="0.000000"/>
</kw>
<arg>Should Be Equal</arg>
<arg>${data}</arg>
<arg>True</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:17:20.445399" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-11-14T17:17:20.444372" elapsed="0.001027"/>
</branch>
<status status="PASS" start="2024-11-14T17:17:20.444372" elapsed="0.001027"/>
</if>
<return>
<value>${data}</value>
<status status="PASS" start="2024-11-14T17:17:20.446396" elapsed="0.000000"/>
</return>
<arg>UPCE_AddOn5_0234567389759</arg>
<arg>0234567389759</arg>
<status status="PASS" start="2024-11-14T17:17:18.842193" elapsed="1.604203"/>
</kw>
<kw name="Read" owner="Keywords">
<kw name="Log To Console" owner="BuiltIn">
<arg>\nReading label: ${image_name}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:17:20.446396" elapsed="0.000968"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Read Label" owner="Commands">
<arg>${current_directory}</arg>
<arg>${image_name}</arg>
<doc>Load image to Eink and wait HH read the barcode to respond data
- For Label Programing, the system will wait for default 4s to HH can read this label
- For Label programing digit, the system will wait for default 1.2 s to HH can't read this label twice</doc>
<status status="PASS" start="2024-11-14T17:17:20.447364" elapsed="3.106334"/>
</kw>
<msg time="2024-11-14T17:17:23.554706" level="INFO">${data} = 1234567012\r</msg>
<var>${data}</var>
<arg>Read Label</arg>
<arg>${current_directory}</arg>
<arg>${image_name}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:17:20.447364" elapsed="3.107342"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Expected-----: ${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:17:23.554706" elapsed="0.001991"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Responded----: ${data}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:17:23.556697" elapsed="0.001004"/>
</kw>
<kw name="LogImage" owner="Keywords">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-11-14T17:17:23.559686" level="INFO">${data} = C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\DataSet\EAN8_AddOn2_1234567012.jpg</msg>
<var>${data}</var>
<arg>${current_directory}\\${image_name}.jpg</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-11-14T17:17:23.559686" elapsed="0.000000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-14T17:17:23.559686" level="INFO" html="true">&lt;img src=C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\DataSet\EAN8_AddOn2_1234567012.jpg&gt;</msg>
<arg>&lt;img src=${data}&gt;</arg>
<arg>html=true</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-14T17:17:23.559686" elapsed="0.000000"/>
</kw>
<arg>${image_name}</arg>
<status status="PASS" start="2024-11-14T17:17:23.558691" elapsed="0.000995"/>
</kw>
<if>
<branch type="IF" condition="$value!=None">
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Compare" owner="Commands">
<arg>\nReading label: ${image_name}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<status status="PASS" start="2024-11-14T17:17:23.560684" elapsed="0.000000"/>
</kw>
<msg time="2024-11-14T17:17:23.560684" level="INFO">${data} = True</msg>
<var>${data}</var>
<arg>Compare</arg>
<arg>\nReading label: ${image_name}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:17:23.560684" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${data}</arg>
<arg>True</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-11-14T17:17:23.560684" elapsed="0.000998"/>
</kw>
<arg>Should Be Equal</arg>
<arg>${data}</arg>
<arg>True</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:17:23.560684" elapsed="0.000998"/>
</kw>
<status status="PASS" start="2024-11-14T17:17:23.559686" elapsed="0.001996"/>
</branch>
<status status="PASS" start="2024-11-14T17:17:23.559686" elapsed="0.001996"/>
</if>
<return>
<value>${data}</value>
<status status="PASS" start="2024-11-14T17:17:23.561682" elapsed="0.000000"/>
</return>
<arg>EAN8_AddOn2_1234567012</arg>
<arg>1234567012</arg>
<status status="PASS" start="2024-11-14T17:17:20.446396" elapsed="3.115286"/>
</kw>
<kw name="Read" owner="Keywords">
<kw name="Log To Console" owner="BuiltIn">
<arg>\nReading label: ${image_name}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:17:23.563675" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Read Label" owner="Commands">
<arg>${current_directory}</arg>
<arg>${image_name}</arg>
<doc>Load image to Eink and wait HH read the barcode to respond data
- For Label Programing, the system will wait for default 4s to HH can read this label
- For Label programing digit, the system will wait for default 1.2 s to HH can't read this label twice</doc>
<status status="PASS" start="2024-11-14T17:17:23.563675" elapsed="2.278629"/>
</kw>
<msg time="2024-11-14T17:17:25.842304" level="INFO">${data} = 1234567012345\r</msg>
<var>${data}</var>
<arg>Read Label</arg>
<arg>${current_directory}</arg>
<arg>${image_name}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:17:23.563675" elapsed="2.278629"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Expected-----: ${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:17:25.842304" elapsed="0.001002"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Responded----: ${data}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:17:25.843306" elapsed="0.000000"/>
</kw>
<kw name="LogImage" owner="Keywords">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-11-14T17:17:25.844302" level="INFO">${data} = C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\DataSet\EAN8_AddOn5_1234567012345.jpg</msg>
<var>${data}</var>
<arg>${current_directory}\\${image_name}.jpg</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-11-14T17:17:25.844302" elapsed="0.000000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-14T17:17:25.845300" level="INFO" html="true">&lt;img src=C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\DataSet\EAN8_AddOn5_1234567012345.jpg&gt;</msg>
<arg>&lt;img src=${data}&gt;</arg>
<arg>html=true</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-14T17:17:25.844302" elapsed="0.000998"/>
</kw>
<arg>${image_name}</arg>
<status status="PASS" start="2024-11-14T17:17:25.843306" elapsed="0.001994"/>
</kw>
<if>
<branch type="IF" condition="$value!=None">
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Compare" owner="Commands">
<arg>\nReading label: ${image_name}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<status status="PASS" start="2024-11-14T17:17:25.845300" elapsed="0.000000"/>
</kw>
<msg time="2024-11-14T17:17:25.846296" level="INFO">${data} = True</msg>
<var>${data}</var>
<arg>Compare</arg>
<arg>\nReading label: ${image_name}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:17:25.845300" elapsed="0.000996"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${data}</arg>
<arg>True</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-11-14T17:17:25.846296" elapsed="0.000000"/>
</kw>
<arg>Should Be Equal</arg>
<arg>${data}</arg>
<arg>True</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:17:25.846296" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-11-14T17:17:25.845300" elapsed="0.000996"/>
</branch>
<status status="PASS" start="2024-11-14T17:17:25.845300" elapsed="0.000996"/>
</if>
<return>
<value>${data}</value>
<status status="PASS" start="2024-11-14T17:17:25.846296" elapsed="0.000000"/>
</return>
<arg>EAN8_AddOn5_1234567012345</arg>
<arg>1234567012345</arg>
<status status="PASS" start="2024-11-14T17:17:23.562678" elapsed="2.283618"/>
</kw>
<kw name="Read" owner="Keywords">
<kw name="Log To Console" owner="BuiltIn">
<arg>\nReading label: ${image_name}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:17:25.847294" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Read Label" owner="Commands">
<arg>${current_directory}</arg>
<arg>${image_name}</arg>
<doc>Load image to Eink and wait HH read the barcode to respond data
- For Label Programing, the system will wait for default 4s to HH can read this label
- For Label programing digit, the system will wait for default 1.2 s to HH can't read this label twice</doc>
<status status="PASS" start="2024-11-14T17:17:25.847294" elapsed="1.993880"/>
</kw>
<msg time="2024-11-14T17:17:27.841174" level="INFO">${data} = 123456789012812\r</msg>
<var>${data}</var>
<arg>Read Label</arg>
<arg>${current_directory}</arg>
<arg>${image_name}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:17:25.847294" elapsed="1.993880"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Expected-----: ${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:17:27.841174" elapsed="0.000994"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Responded----: ${data}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:17:27.842168" elapsed="0.000000"/>
</kw>
<kw name="LogImage" owner="Keywords">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-11-14T17:17:27.843165" level="INFO">${data} = C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\DataSet\EAN13_AddOn2_123456789012812.jpg</msg>
<var>${data}</var>
<arg>${current_directory}\\${image_name}.jpg</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-11-14T17:17:27.843165" elapsed="0.000000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-14T17:17:27.843165" level="INFO" html="true">&lt;img src=C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\DataSet\EAN13_AddOn2_123456789012812.jpg&gt;</msg>
<arg>&lt;img src=${data}&gt;</arg>
<arg>html=true</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-14T17:17:27.843165" elapsed="0.000000"/>
</kw>
<arg>${image_name}</arg>
<status status="PASS" start="2024-11-14T17:17:27.842168" elapsed="0.000997"/>
</kw>
<if>
<branch type="IF" condition="$value!=None">
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Compare" owner="Commands">
<arg>\nReading label: ${image_name}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<status status="PASS" start="2024-11-14T17:17:27.844162" elapsed="0.000000"/>
</kw>
<msg time="2024-11-14T17:17:27.844162" level="INFO">${data} = True</msg>
<var>${data}</var>
<arg>Compare</arg>
<arg>\nReading label: ${image_name}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:17:27.843165" elapsed="0.000997"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${data}</arg>
<arg>True</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-11-14T17:17:27.844162" elapsed="0.000000"/>
</kw>
<arg>Should Be Equal</arg>
<arg>${data}</arg>
<arg>True</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:17:27.844162" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-11-14T17:17:27.843165" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-11-14T17:17:27.843165" elapsed="0.001994"/>
</if>
<return>
<value>${data}</value>
<status status="PASS" start="2024-11-14T17:17:27.845159" elapsed="0.000000"/>
</return>
<arg>EAN13_AddOn2_123456789012812</arg>
<arg>123456789012812</arg>
<status status="PASS" start="2024-11-14T17:17:25.847294" elapsed="1.997865"/>
</kw>
<kw name="Read" owner="Keywords">
<kw name="Log To Console" owner="BuiltIn">
<arg>\nReading label: ${image_name}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:17:27.845159" elapsed="0.000998"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Read Label" owner="Commands">
<arg>${current_directory}</arg>
<arg>${image_name}</arg>
<doc>Load image to Eink and wait HH read the barcode to respond data
- For Label Programing, the system will wait for default 4s to HH can read this label
- For Label programing digit, the system will wait for default 1.2 s to HH can't read this label twice</doc>
<status status="PASS" start="2024-11-14T17:17:27.846157" elapsed="2.079914"/>
</kw>
<msg time="2024-11-14T17:17:29.926071" level="INFO">${data} = 123456789012812345\r</msg>
<var>${data}</var>
<arg>Read Label</arg>
<arg>${current_directory}</arg>
<arg>${image_name}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:17:27.846157" elapsed="2.079914"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Expected-----: ${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:17:29.926720" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Responded----: ${data}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:17:29.926720" elapsed="0.000853"/>
</kw>
<kw name="LogImage" owner="Keywords">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-11-14T17:17:29.927573" level="INFO">${data} = C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\DataSet\EAN13_AddOn5_123456789012812345.jpg</msg>
<var>${data}</var>
<arg>${current_directory}\\${image_name}.jpg</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-11-14T17:17:29.927573" elapsed="0.000000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-14T17:17:29.928574" level="INFO" html="true">&lt;img src=C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\DataSet\EAN13_AddOn5_123456789012812345.jpg&gt;</msg>
<arg>&lt;img src=${data}&gt;</arg>
<arg>html=true</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-14T17:17:29.928574" elapsed="0.000000"/>
</kw>
<arg>${image_name}</arg>
<status status="PASS" start="2024-11-14T17:17:29.927573" elapsed="0.001001"/>
</kw>
<if>
<branch type="IF" condition="$value!=None">
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Compare" owner="Commands">
<arg>\nReading label: ${image_name}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<status status="PASS" start="2024-11-14T17:17:29.928574" elapsed="0.000997"/>
</kw>
<msg time="2024-11-14T17:17:29.929571" level="INFO">${data} = True</msg>
<var>${data}</var>
<arg>Compare</arg>
<arg>\nReading label: ${image_name}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:17:29.928574" elapsed="0.000997"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${data}</arg>
<arg>True</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-11-14T17:17:29.929571" elapsed="0.000000"/>
</kw>
<arg>Should Be Equal</arg>
<arg>${data}</arg>
<arg>True</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:17:29.929571" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-11-14T17:17:29.928574" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-11-14T17:17:29.928574" elapsed="0.000997"/>
</if>
<return>
<value>${data}</value>
<status status="PASS" start="2024-11-14T17:17:29.929571" elapsed="0.000000"/>
</return>
<arg>EAN13_AddOn5_123456789012812345</arg>
<arg>123456789012812345</arg>
<status status="PASS" start="2024-11-14T17:17:27.845159" elapsed="2.084412"/>
</kw>
<kw name="Read" owner="Keywords">
<kw name="Log To Console" owner="BuiltIn">
<arg>\nReading label: ${image_name}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:17:29.930568" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Read Label" owner="Commands">
<arg>${current_directory}</arg>
<arg>${image_name}</arg>
<doc>Load image to Eink and wait HH read the barcode to respond data
- For Label Programing, the system will wait for default 4s to HH can read this label
- For Label programing digit, the system will wait for default 1.2 s to HH can't read this label twice</doc>
<status status="PASS" start="2024-11-14T17:17:29.931592" elapsed="3.071082"/>
</kw>
<msg time="2024-11-14T17:17:33.002674" level="INFO">${data} = 817525766012345\r</msg>
<var>${data}</var>
<arg>Read Label</arg>
<arg>${current_directory}</arg>
<arg>${image_name}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:17:29.930568" elapsed="3.072106"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Expected-----: ${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:17:33.002674" elapsed="0.001003"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Responded----: ${data}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:17:33.003677" elapsed="0.000000"/>
</kw>
<kw name="LogImage" owner="Keywords">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-11-14T17:17:33.004672" level="INFO">${data} = C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\DataSet\ISBN13_AddOn5_978817525766512345.jpg</msg>
<var>${data}</var>
<arg>${current_directory}\\${image_name}.jpg</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-11-14T17:17:33.004672" elapsed="0.000000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-14T17:17:33.004672" level="INFO" html="true">&lt;img src=C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\DataSet\ISBN13_AddOn5_978817525766512345.jpg&gt;</msg>
<arg>&lt;img src=${data}&gt;</arg>
<arg>html=true</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-14T17:17:33.004672" elapsed="0.000997"/>
</kw>
<arg>${image_name}</arg>
<status status="PASS" start="2024-11-14T17:17:33.004672" elapsed="0.000997"/>
</kw>
<if>
<branch type="IF" condition="$value!=None">
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Compare" owner="Commands">
<arg>\nReading label: ${image_name}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<status status="PASS" start="2024-11-14T17:17:33.005669" elapsed="0.000000"/>
</kw>
<msg time="2024-11-14T17:17:33.005669" level="INFO">${data} = True</msg>
<var>${data}</var>
<arg>Compare</arg>
<arg>\nReading label: ${image_name}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:17:33.005669" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${data}</arg>
<arg>True</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-11-14T17:17:33.006667" elapsed="0.000000"/>
</kw>
<arg>Should Be Equal</arg>
<arg>${data}</arg>
<arg>True</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:17:33.005669" elapsed="0.000998"/>
</kw>
<status status="PASS" start="2024-11-14T17:17:33.005669" elapsed="0.000998"/>
</branch>
<status status="PASS" start="2024-11-14T17:17:33.005669" elapsed="0.000998"/>
</if>
<return>
<value>${data}</value>
<status status="PASS" start="2024-11-14T17:17:33.006667" elapsed="0.000000"/>
</return>
<arg>ISBN13_AddOn5_978817525766512345</arg>
<arg>817525766012345</arg>
<status status="PASS" start="2024-11-14T17:17:29.930568" elapsed="3.076099"/>
</kw>
<kw name="Read" owner="Keywords">
<kw name="Log To Console" owner="BuiltIn">
<arg>\nReading label: ${image_name}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:17:33.007664" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Read Label" owner="Commands">
<arg>${current_directory}</arg>
<arg>${image_name}</arg>
<doc>Load image to Eink and wait HH read the barcode to respond data
- For Label Programing, the system will wait for default 4s to HH can read this label
- For Label programing digit, the system will wait for default 1.2 s to HH can't read this label twice</doc>
<status status="PASS" start="2024-11-14T17:17:33.007664" elapsed="5.562498"/>
</kw>
<msg time="2024-11-14T17:17:38.570162" level="INFO">${data} = 1234567912\r</msg>
<var>${data}</var>
<arg>Read Label</arg>
<arg>${current_directory}</arg>
<arg>${image_name}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:17:33.007664" elapsed="5.562498"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Expected-----: ${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:17:38.570162" elapsed="0.000971"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Responded----: ${data}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:17:38.571133" elapsed="0.000000"/>
</kw>
<kw name="LogImage" owner="Keywords">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-11-14T17:17:38.572131" level="INFO">${data} = C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\DataSet\ISSN_AddOn2_977123456789812.jpg</msg>
<var>${data}</var>
<arg>${current_directory}\\${image_name}.jpg</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-11-14T17:17:38.572131" elapsed="0.000000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-14T17:17:38.573128" level="INFO" html="true">&lt;img src=C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\DataSet\ISSN_AddOn2_977123456789812.jpg&gt;</msg>
<arg>&lt;img src=${data}&gt;</arg>
<arg>html=true</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-14T17:17:38.572131" elapsed="0.000997"/>
</kw>
<arg>${image_name}</arg>
<status status="PASS" start="2024-11-14T17:17:38.572131" elapsed="0.000997"/>
</kw>
<if>
<branch type="IF" condition="$value!=None">
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Compare" owner="Commands">
<arg>\nReading label: ${image_name}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<status status="PASS" start="2024-11-14T17:17:38.573128" elapsed="0.000000"/>
</kw>
<msg time="2024-11-14T17:17:38.573128" level="INFO">${data} = True</msg>
<var>${data}</var>
<arg>Compare</arg>
<arg>\nReading label: ${image_name}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:17:38.573128" elapsed="0.000997"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${data}</arg>
<arg>True</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-11-14T17:17:38.574125" elapsed="0.000000"/>
</kw>
<arg>Should Be Equal</arg>
<arg>${data}</arg>
<arg>True</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:17:38.574125" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-11-14T17:17:38.573128" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-11-14T17:17:38.573128" elapsed="0.000997"/>
</if>
<return>
<value>${data}</value>
<status status="PASS" start="2024-11-14T17:17:38.574125" elapsed="0.000000"/>
</return>
<arg>ISSN_AddOn2_977123456789812</arg>
<arg>1234567912</arg>
<status status="PASS" start="2024-11-14T17:17:33.006667" elapsed="5.567458"/>
</kw>
<doc>Verify that the HH doesn’t read twice (with and without AddOn) when reading a Add On label</doc>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:16:42.201632" elapsed="56.373490">Several failures occurred:

1) 
Reading label: UPCA_AddOn2_12345678901212 
Observed:  
Expected: 12345678901212 != True

2) 
Reading label: UPCA_AddOn5_12345678901212345 
Observed:  
Expected: 12345678901212345 != True

3) 
Reading label: UPCE_AddOn2_0234567389 
Observed: 123456789012 
Expected: 0234567389 != True</status>
</test>
<test id="s1-s1-t3" name="ATQ_AddOn_Timer_SNRM03" line="63">
<kw name="EnterSP" owner="Keywords">
<kw name="Log To Console" owner="BuiltIn">
<arg>\nSending Command: $S</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:17:38.577117" elapsed="0.000000"/>
</kw>
<kw name="Enter Service Port" owner="Commands">
<msg time="2024-11-14T17:17:38.992760" level="INFO">${data} = $&gt;\r</msg>
<var>${data}</var>
<status status="PASS" start="2024-11-14T17:17:38.577117" elapsed="0.416640"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Responded-------: ${data}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:17:38.993757" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="$value!=None">
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${data}</arg>
<arg>$&gt;\\r</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-11-14T17:17:38.994754" elapsed="0.000000"/>
</kw>
<arg>Should Be Equal</arg>
<arg>${data}</arg>
<arg>$&gt;\\r</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:17:38.993757" elapsed="0.000997"/>
</kw>
<status status="PASS" start="2024-11-14T17:17:38.993757" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-11-14T17:17:38.993757" elapsed="0.000997"/>
</if>
<return>
<value>${data}</value>
<status status="PASS" start="2024-11-14T17:17:38.994754" elapsed="0.000000"/>
</return>
<arg>$&gt;</arg>
<status status="PASS" start="2024-11-14T17:17:38.576119" elapsed="0.418635"/>
</kw>
<kw name="Send" owner="Keywords">
<kw name="Log To Console" owner="BuiltIn">
<arg>\nSending Command: ${command}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:17:38.995751" elapsed="0.000000"/>
</kw>
<kw name="Send Command" owner="Commands">
<msg time="2024-11-14T17:17:39.415536" level="INFO">${data} = $&gt;\r</msg>
<var>${data}</var>
<arg>${command}</arg>
<status status="PASS" start="2024-11-14T17:17:38.995751" elapsed="0.420748"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Expected-------: ${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:17:39.416499" elapsed="0.001166"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Responded------: ${data}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:17:39.417665" elapsed="0.001004"/>
</kw>
<if>
<branch type="IF" condition="$value!=None">
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Compare" owner="Commands">
<arg>\nSending Command: ${command}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<status status="PASS" start="2024-11-14T17:17:39.419667" elapsed="0.000995"/>
</kw>
<msg time="2024-11-14T17:17:39.420662" level="INFO">${data} = True</msg>
<var>${data}</var>
<arg>Compare</arg>
<arg>\nSending Command: ${command}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:17:39.419667" elapsed="0.000995"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${data}</arg>
<arg>True</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-11-14T17:17:39.420662" elapsed="0.000000"/>
</kw>
<arg>Should Be Equal</arg>
<arg>${data}</arg>
<arg>True</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:17:39.420662" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-11-14T17:17:39.419667" elapsed="0.000995"/>
</branch>
<status status="PASS" start="2024-11-14T17:17:39.418669" elapsed="0.001993"/>
</if>
<return>
<value>${data}</value>
<status status="PASS" start="2024-11-14T17:17:39.420662" elapsed="0.000000"/>
</return>
<arg>$CABEN01</arg>
<arg>$&gt;</arg>
<status status="PASS" start="2024-11-14T17:17:38.994754" elapsed="0.425908"/>
</kw>
<kw name="Send" owner="Keywords">
<kw name="Log To Console" owner="BuiltIn">
<arg>\nSending Command: ${command}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:17:39.421660" elapsed="0.000000"/>
</kw>
<kw name="Send Command" owner="Commands">
<msg time="2024-11-14T17:17:39.835434" level="INFO">${data} = $&gt;\r</msg>
<var>${data}</var>
<arg>${command}</arg>
<status status="PASS" start="2024-11-14T17:17:39.421660" elapsed="0.413774"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Expected-------: ${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:17:39.835434" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Responded------: ${data}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:17:39.836432" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="$value!=None">
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Compare" owner="Commands">
<arg>\nSending Command: ${command}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<status status="PASS" start="2024-11-14T17:17:39.836432" elapsed="0.000997"/>
</kw>
<msg time="2024-11-14T17:17:39.837429" level="INFO">${data} = True</msg>
<var>${data}</var>
<arg>Compare</arg>
<arg>\nSending Command: ${command}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:17:39.836432" elapsed="0.000997"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${data}</arg>
<arg>True</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-11-14T17:17:39.837429" elapsed="0.000000"/>
</kw>
<arg>Should Be Equal</arg>
<arg>${data}</arg>
<arg>True</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:17:39.837429" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-11-14T17:17:39.836432" elapsed="0.001995"/>
</branch>
<status status="PASS" start="2024-11-14T17:17:39.836432" elapsed="0.001995"/>
</if>
<return>
<value>${data}</value>
<status status="PASS" start="2024-11-14T17:17:39.838427" elapsed="0.000000"/>
</return>
<arg>$CEBEN01</arg>
<arg>$&gt;</arg>
<status status="PASS" start="2024-11-14T17:17:39.421660" elapsed="0.416767"/>
</kw>
<kw name="Send" owner="Keywords">
<kw name="Log To Console" owner="BuiltIn">
<arg>\nSending Command: ${command}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:17:39.838427" elapsed="0.000997"/>
</kw>
<kw name="Send Command" owner="Commands">
<msg time="2024-11-14T17:17:40.241196" level="INFO">${data} = $&gt;\r</msg>
<var>${data}</var>
<arg>${command}</arg>
<status status="PASS" start="2024-11-14T17:17:39.839424" elapsed="0.402572"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Expected-------: ${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:17:40.241996" elapsed="0.001024"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Responded------: ${data}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:17:40.243020" elapsed="0.000964"/>
</kw>
<if>
<branch type="IF" condition="$value!=None">
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Compare" owner="Commands">
<arg>\nSending Command: ${command}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<status status="PASS" start="2024-11-14T17:17:40.246978" elapsed="0.000000"/>
</kw>
<msg time="2024-11-14T17:17:40.246978" level="INFO">${data} = True</msg>
<var>${data}</var>
<arg>Compare</arg>
<arg>\nSending Command: ${command}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:17:40.244983" elapsed="0.001995"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${data}</arg>
<arg>True</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-11-14T17:17:40.247972" elapsed="0.000000"/>
</kw>
<arg>Should Be Equal</arg>
<arg>${data}</arg>
<arg>True</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:17:40.247972" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-11-14T17:17:40.244983" elapsed="0.002989"/>
</branch>
<status status="PASS" start="2024-11-14T17:17:40.244983" elapsed="0.002989"/>
</if>
<return>
<value>${data}</value>
<status status="PASS" start="2024-11-14T17:17:40.247972" elapsed="0.000000"/>
</return>
<arg>$C8BEN01</arg>
<arg>$&gt;</arg>
<status status="PASS" start="2024-11-14T17:17:39.838427" elapsed="0.409545"/>
</kw>
<kw name="Send" owner="Keywords">
<kw name="Log To Console" owner="BuiltIn">
<arg>\nSending Command: ${command}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:17:40.248969" elapsed="0.000000"/>
</kw>
<kw name="Send Command" owner="Commands">
<msg time="2024-11-14T17:17:40.660536" level="INFO">${data} = $&gt;\r</msg>
<var>${data}</var>
<arg>${command}</arg>
<status status="PASS" start="2024-11-14T17:17:40.248969" elapsed="0.411567"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Expected-------: ${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:17:40.661276" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Responded------: ${data}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:17:40.661276" elapsed="0.001151"/>
</kw>
<if>
<branch type="IF" condition="$value!=None">
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Compare" owner="Commands">
<arg>\nSending Command: ${command}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<status status="PASS" start="2024-11-14T17:17:40.662427" elapsed="0.000000"/>
</kw>
<msg time="2024-11-14T17:17:40.662427" level="INFO">${data} = True</msg>
<var>${data}</var>
<arg>Compare</arg>
<arg>\nSending Command: ${command}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:17:40.662427" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${data}</arg>
<arg>True</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-11-14T17:17:40.663427" elapsed="0.000000"/>
</kw>
<arg>Should Be Equal</arg>
<arg>${data}</arg>
<arg>True</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:17:40.663427" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-11-14T17:17:40.662427" elapsed="0.001000"/>
</branch>
<status status="PASS" start="2024-11-14T17:17:40.662427" elapsed="0.001000"/>
</if>
<return>
<value>${data}</value>
<status status="PASS" start="2024-11-14T17:17:40.663427" elapsed="0.000000"/>
</return>
<arg>$C3BEN01</arg>
<arg>$&gt;</arg>
<status status="PASS" start="2024-11-14T17:17:40.247972" elapsed="0.415455"/>
</kw>
<kw name="Send" owner="Keywords">
<kw name="Log To Console" owner="BuiltIn">
<arg>\nSending Command: ${command}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:17:40.664451" elapsed="0.000000"/>
</kw>
<kw name="Send Command" owner="Commands">
<msg time="2024-11-14T17:17:41.072681" level="INFO">${data} = $&gt;\r</msg>
<var>${data}</var>
<arg>${command}</arg>
<status status="PASS" start="2024-11-14T17:17:40.664451" elapsed="0.408973"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Expected-------: ${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:17:41.073424" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Responded------: ${data}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:17:41.073424" elapsed="0.000996"/>
</kw>
<if>
<branch type="IF" condition="$value!=None">
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Compare" owner="Commands">
<arg>\nSending Command: ${command}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<status status="PASS" start="2024-11-14T17:17:41.074420" elapsed="0.000000"/>
</kw>
<msg time="2024-11-14T17:17:41.074420" level="INFO">${data} = True</msg>
<var>${data}</var>
<arg>Compare</arg>
<arg>\nSending Command: ${command}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:17:41.074420" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${data}</arg>
<arg>True</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-11-14T17:17:41.075418" elapsed="0.000000"/>
</kw>
<arg>Should Be Equal</arg>
<arg>${data}</arg>
<arg>True</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:17:41.074420" elapsed="0.000998"/>
</kw>
<status status="PASS" start="2024-11-14T17:17:41.074420" elapsed="0.000998"/>
</branch>
<status status="PASS" start="2024-11-14T17:17:41.074420" elapsed="0.000998"/>
</if>
<return>
<value>${data}</value>
<status status="PASS" start="2024-11-14T17:17:41.075418" elapsed="0.000000"/>
</return>
<arg>$C3BIN01</arg>
<arg>$&gt;</arg>
<status status="PASS" start="2024-11-14T17:17:40.663427" elapsed="0.411991"/>
</kw>
<kw name="Send" owner="Keywords">
<kw name="Log To Console" owner="BuiltIn">
<arg>\nSending Command: ${command}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:17:41.076414" elapsed="0.000000"/>
</kw>
<kw name="Send Command" owner="Commands">
<msg time="2024-11-14T17:17:41.492685" level="INFO">${data} = $&gt;\r</msg>
<var>${data}</var>
<arg>${command}</arg>
<status status="PASS" start="2024-11-14T17:17:41.076414" elapsed="0.416271"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Expected-------: ${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:17:41.492685" elapsed="0.000998"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Responded------: ${data}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:17:41.493683" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="$value!=None">
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Compare" owner="Commands">
<arg>\nSending Command: ${command}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<status status="PASS" start="2024-11-14T17:17:41.494710" elapsed="0.000000"/>
</kw>
<msg time="2024-11-14T17:17:41.494710" level="INFO">${data} = True</msg>
<var>${data}</var>
<arg>Compare</arg>
<arg>\nSending Command: ${command}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:17:41.494710" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${data}</arg>
<arg>True</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-11-14T17:17:41.494710" elapsed="0.000967"/>
</kw>
<arg>Should Be Equal</arg>
<arg>${data}</arg>
<arg>True</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:17:41.494710" elapsed="0.000967"/>
</kw>
<status status="PASS" start="2024-11-14T17:17:41.493683" elapsed="0.001994"/>
</branch>
<status status="PASS" start="2024-11-14T17:17:41.493683" elapsed="0.001994"/>
</if>
<return>
<value>${data}</value>
<status status="PASS" start="2024-11-14T17:17:41.495677" elapsed="0.000000"/>
</return>
<arg>$C3BIS01</arg>
<arg>$&gt;</arg>
<status status="PASS" start="2024-11-14T17:17:41.075418" elapsed="0.420259"/>
</kw>
<kw name="Send" owner="Keywords">
<kw name="Log To Console" owner="BuiltIn">
<arg>\nSending Command: ${command}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:17:41.495677" elapsed="0.000997"/>
</kw>
<kw name="Send Command" owner="Commands">
<msg time="2024-11-14T17:17:41.914050" level="INFO">${data} = $&gt;\r</msg>
<var>${data}</var>
<arg>${command}</arg>
<status status="PASS" start="2024-11-14T17:17:41.496674" elapsed="0.417376"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Expected-------: ${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:17:41.914050" elapsed="0.001002"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Responded------: ${data}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:17:41.915052" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="$value!=None">
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Compare" owner="Commands">
<arg>\nSending Command: ${command}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<status status="PASS" start="2024-11-14T17:17:41.916047" elapsed="0.000000"/>
</kw>
<msg time="2024-11-14T17:17:41.916047" level="INFO">${data} = True</msg>
<var>${data}</var>
<arg>Compare</arg>
<arg>\nSending Command: ${command}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:17:41.916047" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${data}</arg>
<arg>True</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-11-14T17:17:41.916047" elapsed="0.000997"/>
</kw>
<arg>Should Be Equal</arg>
<arg>${data}</arg>
<arg>True</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:17:41.916047" elapsed="0.000997"/>
</kw>
<status status="PASS" start="2024-11-14T17:17:41.915052" elapsed="0.001992"/>
</branch>
<status status="PASS" start="2024-11-14T17:17:41.915052" elapsed="0.001992"/>
</if>
<return>
<value>${data}</value>
<status status="PASS" start="2024-11-14T17:17:41.917044" elapsed="0.000000"/>
</return>
<arg>$CADO201</arg>
<arg>$&gt;</arg>
<status status="PASS" start="2024-11-14T17:17:41.495677" elapsed="0.421367"/>
</kw>
<kw name="Send" owner="Keywords">
<kw name="Log To Console" owner="BuiltIn">
<arg>\nSending Command: ${command}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:17:41.918041" elapsed="0.000000"/>
</kw>
<kw name="Send Command" owner="Commands">
<msg time="2024-11-14T17:17:42.345561" level="INFO">${data} = $&gt;\r</msg>
<var>${data}</var>
<arg>${command}</arg>
<status status="PASS" start="2024-11-14T17:17:41.918041" elapsed="0.427520"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Expected-------: ${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:17:42.345561" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Responded------: ${data}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:17:42.345561" elapsed="0.000998"/>
</kw>
<if>
<branch type="IF" condition="$value!=None">
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Compare" owner="Commands">
<arg>\nSending Command: ${command}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<status status="PASS" start="2024-11-14T17:17:42.346559" elapsed="0.000000"/>
</kw>
<msg time="2024-11-14T17:17:42.347556" level="INFO">${data} = True</msg>
<var>${data}</var>
<arg>Compare</arg>
<arg>\nSending Command: ${command}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:17:42.346559" elapsed="0.000997"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${data}</arg>
<arg>True</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-11-14T17:17:42.347556" elapsed="0.000000"/>
</kw>
<arg>Should Be Equal</arg>
<arg>${data}</arg>
<arg>True</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:17:42.347556" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-11-14T17:17:42.346559" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-11-14T17:17:42.346559" elapsed="0.000997"/>
</if>
<return>
<value>${data}</value>
<status status="PASS" start="2024-11-14T17:17:42.347556" elapsed="0.000000"/>
</return>
<arg>$CADO501</arg>
<arg>$&gt;</arg>
<status status="PASS" start="2024-11-14T17:17:41.917044" elapsed="0.430512"/>
</kw>
<kw name="Send" owner="Keywords">
<kw name="Log To Console" owner="BuiltIn">
<arg>\nSending Command: ${command}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:17:42.348553" elapsed="0.000000"/>
</kw>
<kw name="Send Command" owner="Commands">
<msg time="2024-11-14T17:17:42.776214" level="INFO">${data} = $&gt;\r</msg>
<var>${data}</var>
<arg>${command}</arg>
<status status="PASS" start="2024-11-14T17:17:42.349551" elapsed="0.426663"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Expected-------: ${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:17:42.776214" elapsed="0.000831"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Responded------: ${data}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:17:42.777045" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="$value!=None">
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Compare" owner="Commands">
<arg>\nSending Command: ${command}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<status status="PASS" start="2024-11-14T17:17:42.778046" elapsed="0.000000"/>
</kw>
<msg time="2024-11-14T17:17:42.778046" level="INFO">${data} = True</msg>
<var>${data}</var>
<arg>Compare</arg>
<arg>\nSending Command: ${command}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:17:42.778046" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${data}</arg>
<arg>True</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-11-14T17:17:42.778046" elapsed="0.000996"/>
</kw>
<arg>Should Be Equal</arg>
<arg>${data}</arg>
<arg>True</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:17:42.778046" elapsed="0.000996"/>
</kw>
<status status="PASS" start="2024-11-14T17:17:42.777045" elapsed="0.001997"/>
</branch>
<status status="PASS" start="2024-11-14T17:17:42.777045" elapsed="0.001997"/>
</if>
<return>
<value>${data}</value>
<status status="PASS" start="2024-11-14T17:17:42.779042" elapsed="0.000000"/>
</return>
<arg>$CADOT1E</arg>
<arg>$&gt;</arg>
<status status="PASS" start="2024-11-14T17:17:42.348553" elapsed="0.430489"/>
</kw>
<kw name="Send" owner="Keywords">
<kw name="Log To Console" owner="BuiltIn">
<arg>\nSending Command: ${command}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:17:42.780040" elapsed="0.000282"/>
</kw>
<kw name="Send Command" owner="Commands">
<msg time="2024-11-14T17:17:43.207325" level="INFO">${data} = $&gt;\r</msg>
<var>${data}</var>
<arg>${command}</arg>
<status status="PASS" start="2024-11-14T17:17:42.780322" elapsed="0.427003"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Expected-------: ${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:17:43.207325" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Responded------: ${data}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:17:43.208324" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="$value!=None">
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Compare" owner="Commands">
<arg>\nSending Command: ${command}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<status status="PASS" start="2024-11-14T17:17:43.208324" elapsed="0.000997"/>
</kw>
<msg time="2024-11-14T17:17:43.209321" level="INFO">${data} = True</msg>
<var>${data}</var>
<arg>Compare</arg>
<arg>\nSending Command: ${command}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:17:43.208324" elapsed="0.000997"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${data}</arg>
<arg>True</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-11-14T17:17:43.209321" elapsed="0.000000"/>
</kw>
<arg>Should Be Equal</arg>
<arg>${data}</arg>
<arg>True</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:17:43.209321" elapsed="0.000998"/>
</kw>
<status status="PASS" start="2024-11-14T17:17:43.208324" elapsed="0.001995"/>
</branch>
<status status="PASS" start="2024-11-14T17:17:43.208324" elapsed="0.001995"/>
</if>
<return>
<value>${data}</value>
<status status="PASS" start="2024-11-14T17:17:43.210319" elapsed="0.000000"/>
</return>
<arg>$CSNRM03</arg>
<arg>$&gt;</arg>
<status status="PASS" start="2024-11-14T17:17:42.779042" elapsed="0.431277"/>
</kw>
<kw name="Send" owner="Keywords">
<kw name="Log To Console" owner="BuiltIn">
<arg>\nSending Command: ${command}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:17:43.210319" elapsed="0.000997"/>
</kw>
<kw name="Send Command" owner="Commands">
<msg time="2024-11-14T17:17:57.219790" level="INFO">${data} = $&gt;\r</msg>
<var>${data}</var>
<arg>${command}</arg>
<status status="PASS" start="2024-11-14T17:17:43.211316" elapsed="14.008474"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Expected-------: ${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:17:57.219790" elapsed="0.001003"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Responded------: ${data}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:17:57.220793" elapsed="0.000728"/>
</kw>
<if>
<branch type="IF" condition="$value!=None">
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Compare" owner="Commands">
<arg>\nSending Command: ${command}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<status status="PASS" start="2024-11-14T17:17:57.221521" elapsed="0.000000"/>
</kw>
<msg time="2024-11-14T17:17:57.221521" level="INFO">${data} = True</msg>
<var>${data}</var>
<arg>Compare</arg>
<arg>\nSending Command: ${command}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:17:57.221521" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${data}</arg>
<arg>True</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-11-14T17:17:57.222521" elapsed="0.000000"/>
</kw>
<arg>Should Be Equal</arg>
<arg>${data}</arg>
<arg>True</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:17:57.222521" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-11-14T17:17:57.221521" elapsed="0.001000"/>
</branch>
<status status="PASS" start="2024-11-14T17:17:57.221521" elapsed="0.001000"/>
</if>
<return>
<value>${data}</value>
<status status="PASS" start="2024-11-14T17:17:57.222521" elapsed="0.000000"/>
</return>
<arg>$Ar</arg>
<arg>$&gt;</arg>
<status status="PASS" start="2024-11-14T17:17:43.210319" elapsed="14.012202"/>
</kw>
<kw name="Read" owner="Keywords">
<kw name="Log To Console" owner="BuiltIn">
<arg>\nReading label: ${image_name}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:17:57.223517" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Read Label" owner="Commands">
<arg>${current_directory}</arg>
<arg>${image_name}</arg>
<doc>Load image to Eink and wait HH read the barcode to respond data
- For Label Programing, the system will wait for default 4s to HH can read this label
- For Label programing digit, the system will wait for default 1.2 s to HH can't read this label twice</doc>
<status status="PASS" start="2024-11-14T17:17:57.223517" elapsed="1.084743"/>
</kw>
<msg time="2024-11-14T17:17:58.308260" level="INFO">${data} = 12345678901212\r123456789012\r</msg>
<var>${data}</var>
<arg>Read Label</arg>
<arg>${current_directory}</arg>
<arg>${image_name}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:17:57.223517" elapsed="1.084743"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Expected-----: ${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:17:58.309029" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Responded----: ${data}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:17:58.309029" elapsed="0.000998"/>
</kw>
<kw name="LogImage" owner="Keywords">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-11-14T17:17:58.310027" level="INFO">${data} = C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\DataSet\UPCA_AddOn2_12345678901212.jpg</msg>
<var>${data}</var>
<arg>${current_directory}\\${image_name}.jpg</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-11-14T17:17:58.310027" elapsed="0.000000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-14T17:17:58.311022" level="INFO" html="true">&lt;img src=C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\DataSet\UPCA_AddOn2_12345678901212.jpg&gt;</msg>
<arg>&lt;img src=${data}&gt;</arg>
<arg>html=true</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-14T17:17:58.311022" elapsed="0.000000"/>
</kw>
<arg>${image_name}</arg>
<status status="PASS" start="2024-11-14T17:17:58.310027" elapsed="0.000995"/>
</kw>
<if>
<branch type="IF" condition="$value!=None">
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Compare" owner="Commands">
<arg>\nReading label: ${image_name}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<status status="PASS" start="2024-11-14T17:17:58.311022" elapsed="0.000000"/>
</kw>
<msg time="2024-11-14T17:17:58.312020" level="INFO">${data} = True</msg>
<var>${data}</var>
<arg>Compare</arg>
<arg>\nReading label: ${image_name}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:17:58.311022" elapsed="0.000998"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${data}</arg>
<arg>True</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-11-14T17:17:58.312020" elapsed="0.000000"/>
</kw>
<arg>Should Be Equal</arg>
<arg>${data}</arg>
<arg>True</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:17:58.312020" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-11-14T17:17:58.311022" elapsed="0.000998"/>
</branch>
<status status="PASS" start="2024-11-14T17:17:58.311022" elapsed="0.000998"/>
</if>
<return>
<value>${data}</value>
<status status="PASS" start="2024-11-14T17:17:58.312020" elapsed="0.000000"/>
</return>
<arg>UPCA_AddOn2_12345678901212</arg>
<arg>12345678901212</arg>
<status status="PASS" start="2024-11-14T17:17:57.222521" elapsed="1.089499"/>
</kw>
<kw name="Read" owner="Keywords">
<kw name="Log To Console" owner="BuiltIn">
<arg>\nReading label: ${image_name}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:17:58.313017" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Read Label" owner="Commands">
<arg>${current_directory}</arg>
<arg>${image_name}</arg>
<doc>Load image to Eink and wait HH read the barcode to respond data
- For Label Programing, the system will wait for default 4s to HH can read this label
- For Label programing digit, the system will wait for default 1.2 s to HH can't read this label twice</doc>
<status status="PASS" start="2024-11-14T17:17:58.313017" elapsed="1.589761"/>
</kw>
<msg time="2024-11-14T17:17:59.902778" level="INFO">${data} = 123456789012\r</msg>
<var>${data}</var>
<arg>Read Label</arg>
<arg>${current_directory}</arg>
<arg>${image_name}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:17:58.313017" elapsed="1.589761"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Expected-----: ${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:17:59.902778" elapsed="0.000992"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Responded----: ${data}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:17:59.903770" elapsed="0.000000"/>
</kw>
<kw name="LogImage" owner="Keywords">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-11-14T17:17:59.904772" level="INFO">${data} = C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\DataSet\UPCA_AddOn5_12345678901212345.jpg</msg>
<var>${data}</var>
<arg>${current_directory}\\${image_name}.jpg</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-11-14T17:17:59.904772" elapsed="0.000000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-14T17:17:59.904772" level="INFO" html="true">&lt;img src=C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\DataSet\UPCA_AddOn5_12345678901212345.jpg&gt;</msg>
<arg>&lt;img src=${data}&gt;</arg>
<arg>html=true</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-14T17:17:59.904772" elapsed="0.000000"/>
</kw>
<arg>${image_name}</arg>
<status status="PASS" start="2024-11-14T17:17:59.903770" elapsed="0.001998"/>
</kw>
<if>
<branch type="IF" condition="$value!=None">
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Compare" owner="Commands">
<arg>\nReading label: ${image_name}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<status status="PASS" start="2024-11-14T17:17:59.905768" elapsed="0.000000"/>
</kw>
<msg time="2024-11-14T17:17:59.905768" level="INFO">${data} = 
Reading label: UPCA_AddOn5_12345678901212345 
Observed: 123456789012 
Expected: 12345678901212345</msg>
<var>${data}</var>
<arg>Compare</arg>
<arg>\nReading label: ${image_name}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:17:59.905768" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Should Be Equal" owner="BuiltIn">
<msg time="2024-11-14T17:17:59.906765" level="FAIL">
Reading label: UPCA_AddOn5_12345678901212345 
Observed: 123456789012 
Expected: 12345678901212345 != True</msg>
<arg>${data}</arg>
<arg>True</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="FAIL" start="2024-11-14T17:17:59.906765" elapsed="0.000000">
Reading label: UPCA_AddOn5_12345678901212345 
Observed: 123456789012 
Expected: 12345678901212345 != True</status>
</kw>
<arg>Should Be Equal</arg>
<arg>${data}</arg>
<arg>True</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="FAIL" start="2024-11-14T17:17:59.905768" elapsed="0.000997">
Reading label: UPCA_AddOn5_12345678901212345 
Observed: 123456789012 
Expected: 12345678901212345 != True</status>
</kw>
<status status="FAIL" start="2024-11-14T17:17:59.905768" elapsed="0.000997">
Reading label: UPCA_AddOn5_12345678901212345 
Observed: 123456789012 
Expected: 12345678901212345 != True</status>
</branch>
<status status="FAIL" start="2024-11-14T17:17:59.905768" elapsed="0.000997">
Reading label: UPCA_AddOn5_12345678901212345 
Observed: 123456789012 
Expected: 12345678901212345 != True</status>
</if>
<return>
<value>${data}</value>
<status status="PASS" start="2024-11-14T17:17:59.906765" elapsed="0.000000"/>
</return>
<arg>UPCA_AddOn5_12345678901212345</arg>
<arg>12345678901212345</arg>
<status status="FAIL" start="2024-11-14T17:17:58.313017" elapsed="1.593748">
Reading label: UPCA_AddOn5_12345678901212345 
Observed: 123456789012 
Expected: 12345678901212345 != True</status>
</kw>
<kw name="Read" owner="Keywords">
<kw name="Log To Console" owner="BuiltIn">
<arg>\nReading label: ${image_name}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:17:59.907763" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Read Label" owner="Commands">
<arg>${current_directory}</arg>
<arg>${image_name}</arg>
<doc>Load image to Eink and wait HH read the barcode to respond data
- For Label Programing, the system will wait for default 4s to HH can read this label
- For Label programing digit, the system will wait for default 1.2 s to HH can't read this label twice</doc>
<status status="PASS" start="2024-11-14T17:17:59.907763" elapsed="1.164397"/>
</kw>
<msg time="2024-11-14T17:18:01.072160" level="INFO">${data} = 0234567389\r</msg>
<var>${data}</var>
<arg>Read Label</arg>
<arg>${current_directory}</arg>
<arg>${image_name}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:17:59.907763" elapsed="1.164397"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Expected-----: ${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:18:01.072160" elapsed="0.000998"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Responded----: ${data}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:18:01.073158" elapsed="0.000000"/>
</kw>
<kw name="LogImage" owner="Keywords">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-11-14T17:18:01.074155" level="INFO">${data} = C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\DataSet\UPCE_AddOn2_0234567389.jpg</msg>
<var>${data}</var>
<arg>${current_directory}\\${image_name}.jpg</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-11-14T17:18:01.074155" elapsed="0.000000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-14T17:18:01.074155" level="INFO" html="true">&lt;img src=C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\DataSet\UPCE_AddOn2_0234567389.jpg&gt;</msg>
<arg>&lt;img src=${data}&gt;</arg>
<arg>html=true</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-14T17:18:01.074155" elapsed="0.000000"/>
</kw>
<arg>${image_name}</arg>
<status status="PASS" start="2024-11-14T17:18:01.073158" elapsed="0.000997"/>
</kw>
<if>
<branch type="IF" condition="$value!=None">
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Compare" owner="Commands">
<arg>\nReading label: ${image_name}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<status status="PASS" start="2024-11-14T17:18:01.075153" elapsed="0.000000"/>
</kw>
<msg time="2024-11-14T17:18:01.075153" level="INFO">${data} = True</msg>
<var>${data}</var>
<arg>Compare</arg>
<arg>\nReading label: ${image_name}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:18:01.075153" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${data}</arg>
<arg>True</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-11-14T17:18:01.075153" elapsed="0.000997"/>
</kw>
<arg>Should Be Equal</arg>
<arg>${data}</arg>
<arg>True</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:18:01.075153" elapsed="0.000997"/>
</kw>
<status status="PASS" start="2024-11-14T17:18:01.074155" elapsed="0.001995"/>
</branch>
<status status="PASS" start="2024-11-14T17:18:01.074155" elapsed="0.001995"/>
</if>
<return>
<value>${data}</value>
<status status="PASS" start="2024-11-14T17:18:01.076150" elapsed="0.000000"/>
</return>
<arg>UPCE_AddOn2_0234567389</arg>
<arg>0234567389</arg>
<status status="PASS" start="2024-11-14T17:17:59.907763" elapsed="1.168387"/>
</kw>
<kw name="Read" owner="Keywords">
<kw name="Log To Console" owner="BuiltIn">
<arg>\nReading label: ${image_name}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:18:01.077147" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Read Label" owner="Commands">
<arg>${current_directory}</arg>
<arg>${image_name}</arg>
<doc>Load image to Eink and wait HH read the barcode to respond data
- For Label Programing, the system will wait for default 4s to HH can read this label
- For Label programing digit, the system will wait for default 1.2 s to HH can't read this label twice</doc>
<status status="PASS" start="2024-11-14T17:18:01.077147" elapsed="1.534841"/>
</kw>
<msg time="2024-11-14T17:18:02.611988" level="INFO">${data} = 0234567389759\r</msg>
<var>${data}</var>
<arg>Read Label</arg>
<arg>${current_directory}</arg>
<arg>${image_name}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:18:01.077147" elapsed="1.534841"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Expected-----: ${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:18:02.611988" elapsed="0.001032"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Responded----: ${data}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:18:02.613020" elapsed="0.000000"/>
</kw>
<kw name="LogImage" owner="Keywords">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-11-14T17:18:02.614016" level="INFO">${data} = C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\DataSet\UPCE_AddOn5_0234567389759.jpg</msg>
<var>${data}</var>
<arg>${current_directory}\\${image_name}.jpg</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-11-14T17:18:02.614016" elapsed="0.000000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-14T17:18:02.614016" level="INFO" html="true">&lt;img src=C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\DataSet\UPCE_AddOn5_0234567389759.jpg&gt;</msg>
<arg>&lt;img src=${data}&gt;</arg>
<arg>html=true</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-14T17:18:02.614016" elapsed="0.000000"/>
</kw>
<arg>${image_name}</arg>
<status status="PASS" start="2024-11-14T17:18:02.613020" elapsed="0.001992"/>
</kw>
<if>
<branch type="IF" condition="$value!=None">
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Compare" owner="Commands">
<arg>\nReading label: ${image_name}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<status status="PASS" start="2024-11-14T17:18:02.615012" elapsed="0.000000"/>
</kw>
<msg time="2024-11-14T17:18:02.616010" level="INFO">${data} = True</msg>
<var>${data}</var>
<arg>Compare</arg>
<arg>\nReading label: ${image_name}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:18:02.615012" elapsed="0.000998"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${data}</arg>
<arg>True</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-11-14T17:18:02.616010" elapsed="0.000000"/>
</kw>
<arg>Should Be Equal</arg>
<arg>${data}</arg>
<arg>True</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:18:02.616010" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-11-14T17:18:02.615012" elapsed="0.000998"/>
</branch>
<status status="PASS" start="2024-11-14T17:18:02.615012" elapsed="0.000998"/>
</if>
<return>
<value>${data}</value>
<status status="PASS" start="2024-11-14T17:18:02.616010" elapsed="0.000000"/>
</return>
<arg>UPCE_AddOn5_0234567389759</arg>
<arg>0234567389759</arg>
<status status="PASS" start="2024-11-14T17:18:01.076150" elapsed="1.540857"/>
</kw>
<kw name="Read" owner="Keywords">
<kw name="Log To Console" owner="BuiltIn">
<arg>\nReading label: ${image_name}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:18:02.617007" elapsed="0.000917"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Read Label" owner="Commands">
<arg>${current_directory}</arg>
<arg>${image_name}</arg>
<doc>Load image to Eink and wait HH read the barcode to respond data
- For Label Programing, the system will wait for default 4s to HH can read this label
- For Label programing digit, the system will wait for default 1.2 s to HH can't read this label twice</doc>
<status status="PASS" start="2024-11-14T17:18:02.617924" elapsed="1.609651"/>
</kw>
<msg time="2024-11-14T17:18:04.227575" level="INFO">${data} = 1234567012\r</msg>
<var>${data}</var>
<arg>Read Label</arg>
<arg>${current_directory}</arg>
<arg>${image_name}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:18:02.617924" elapsed="1.609651"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Expected-----: ${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:18:04.228316" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Responded----: ${data}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:18:04.228316" elapsed="0.000999"/>
</kw>
<kw name="LogImage" owner="Keywords">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-11-14T17:18:04.229315" level="INFO">${data} = C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\DataSet\EAN8_AddOn2_1234567012.jpg</msg>
<var>${data}</var>
<arg>${current_directory}\\${image_name}.jpg</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-11-14T17:18:04.229315" elapsed="0.000000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-14T17:18:04.230311" level="INFO" html="true">&lt;img src=C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\DataSet\EAN8_AddOn2_1234567012.jpg&gt;</msg>
<arg>&lt;img src=${data}&gt;</arg>
<arg>html=true</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-14T17:18:04.229315" elapsed="0.000996"/>
</kw>
<arg>${image_name}</arg>
<status status="PASS" start="2024-11-14T17:18:04.229315" elapsed="0.000996"/>
</kw>
<if>
<branch type="IF" condition="$value!=None">
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Compare" owner="Commands">
<arg>\nReading label: ${image_name}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<status status="PASS" start="2024-11-14T17:18:04.230311" elapsed="0.000000"/>
</kw>
<msg time="2024-11-14T17:18:04.231308" level="INFO">${data} = True</msg>
<var>${data}</var>
<arg>Compare</arg>
<arg>\nReading label: ${image_name}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:18:04.230311" elapsed="0.000997"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${data}</arg>
<arg>True</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-11-14T17:18:04.231308" elapsed="0.000000"/>
</kw>
<arg>Should Be Equal</arg>
<arg>${data}</arg>
<arg>True</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:18:04.231308" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-11-14T17:18:04.230311" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-11-14T17:18:04.230311" elapsed="0.000997"/>
</if>
<return>
<value>${data}</value>
<status status="PASS" start="2024-11-14T17:18:04.231308" elapsed="0.000000"/>
</return>
<arg>EAN8_AddOn2_1234567012</arg>
<arg>1234567012</arg>
<status status="PASS" start="2024-11-14T17:18:02.617007" elapsed="1.614301"/>
</kw>
<kw name="Read" owner="Keywords">
<kw name="Log To Console" owner="BuiltIn">
<arg>\nReading label: ${image_name}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:18:04.232305" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Read Label" owner="Commands">
<arg>${current_directory}</arg>
<arg>${image_name}</arg>
<doc>Load image to Eink and wait HH read the barcode to respond data
- For Label Programing, the system will wait for default 4s to HH can read this label
- For Label programing digit, the system will wait for default 1.2 s to HH can't read this label twice</doc>
<status status="PASS" start="2024-11-14T17:18:04.233302" elapsed="1.577089"/>
</kw>
<msg time="2024-11-14T17:18:05.810391" level="INFO">${data} = 1234567012345\r</msg>
<var>${data}</var>
<arg>Read Label</arg>
<arg>${current_directory}</arg>
<arg>${image_name}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:18:04.232305" elapsed="1.578086"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Expected-----: ${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:18:05.810391" elapsed="0.000889"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Responded----: ${data}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:18:05.811280" elapsed="0.000505"/>
</kw>
<kw name="LogImage" owner="Keywords">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-11-14T17:18:05.811785" level="INFO">${data} = C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\DataSet\EAN8_AddOn5_1234567012345.jpg</msg>
<var>${data}</var>
<arg>${current_directory}\\${image_name}.jpg</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-11-14T17:18:05.811785" elapsed="0.000000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-14T17:18:05.812787" level="INFO" html="true">&lt;img src=C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\DataSet\EAN8_AddOn5_1234567012345.jpg&gt;</msg>
<arg>&lt;img src=${data}&gt;</arg>
<arg>html=true</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-14T17:18:05.811785" elapsed="0.001002"/>
</kw>
<arg>${image_name}</arg>
<status status="PASS" start="2024-11-14T17:18:05.811785" elapsed="0.001002"/>
</kw>
<if>
<branch type="IF" condition="$value!=None">
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Compare" owner="Commands">
<arg>\nReading label: ${image_name}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<status status="PASS" start="2024-11-14T17:18:05.812787" elapsed="0.000000"/>
</kw>
<msg time="2024-11-14T17:18:05.812787" level="INFO">${data} = True</msg>
<var>${data}</var>
<arg>Compare</arg>
<arg>\nReading label: ${image_name}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:18:05.812787" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${data}</arg>
<arg>True</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-11-14T17:18:05.813783" elapsed="0.000000"/>
</kw>
<arg>Should Be Equal</arg>
<arg>${data}</arg>
<arg>True</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:18:05.813783" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-11-14T17:18:05.812787" elapsed="0.000996"/>
</branch>
<status status="PASS" start="2024-11-14T17:18:05.812787" elapsed="0.000996"/>
</if>
<return>
<value>${data}</value>
<status status="PASS" start="2024-11-14T17:18:05.813783" elapsed="0.000000"/>
</return>
<arg>EAN8_AddOn5_1234567012345</arg>
<arg>1234567012345</arg>
<status status="PASS" start="2024-11-14T17:18:04.232305" elapsed="1.581478"/>
</kw>
<kw name="Read" owner="Keywords">
<kw name="Log To Console" owner="BuiltIn">
<arg>\nReading label: ${image_name}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:18:05.814780" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Read Label" owner="Commands">
<arg>${current_directory}</arg>
<arg>${image_name}</arg>
<doc>Load image to Eink and wait HH read the barcode to respond data
- For Label Programing, the system will wait for default 4s to HH can read this label
- For Label programing digit, the system will wait for default 1.2 s to HH can't read this label twice</doc>
<status status="PASS" start="2024-11-14T17:18:05.815777" elapsed="1.592993"/>
</kw>
<msg time="2024-11-14T17:18:07.408770" level="INFO">${data} = 123456789012812\r</msg>
<var>${data}</var>
<arg>Read Label</arg>
<arg>${current_directory}</arg>
<arg>${image_name}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:18:05.814780" elapsed="1.593990"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Expected-----: ${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:18:07.408770" elapsed="0.000998"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Responded----: ${data}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:18:07.409768" elapsed="0.000594"/>
</kw>
<kw name="LogImage" owner="Keywords">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-11-14T17:18:07.410362" level="INFO">${data} = C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\DataSet\EAN13_AddOn2_123456789012812.jpg</msg>
<var>${data}</var>
<arg>${current_directory}\\${image_name}.jpg</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-11-14T17:18:07.410362" elapsed="0.000000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-14T17:18:07.411362" level="INFO" html="true">&lt;img src=C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\DataSet\EAN13_AddOn2_123456789012812.jpg&gt;</msg>
<arg>&lt;img src=${data}&gt;</arg>
<arg>html=true</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-14T17:18:07.410362" elapsed="0.001000"/>
</kw>
<arg>${image_name}</arg>
<status status="PASS" start="2024-11-14T17:18:07.410362" elapsed="0.001000"/>
</kw>
<if>
<branch type="IF" condition="$value!=None">
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Compare" owner="Commands">
<arg>\nReading label: ${image_name}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<status status="PASS" start="2024-11-14T17:18:07.411362" elapsed="0.000000"/>
</kw>
<msg time="2024-11-14T17:18:07.411362" level="INFO">${data} = True</msg>
<var>${data}</var>
<arg>Compare</arg>
<arg>\nReading label: ${image_name}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:18:07.411362" elapsed="0.000998"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${data}</arg>
<arg>True</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-11-14T17:18:07.412360" elapsed="0.000000"/>
</kw>
<arg>Should Be Equal</arg>
<arg>${data}</arg>
<arg>True</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:18:07.412360" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-11-14T17:18:07.411362" elapsed="0.000998"/>
</branch>
<status status="PASS" start="2024-11-14T17:18:07.411362" elapsed="0.000998"/>
</if>
<return>
<value>${data}</value>
<status status="PASS" start="2024-11-14T17:18:07.412360" elapsed="0.000000"/>
</return>
<arg>EAN13_AddOn2_123456789012812</arg>
<arg>123456789012812</arg>
<status status="PASS" start="2024-11-14T17:18:05.814780" elapsed="1.597580"/>
</kw>
<kw name="Read" owner="Keywords">
<kw name="Log To Console" owner="BuiltIn">
<arg>\nReading label: ${image_name}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:18:07.413357" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Read Label" owner="Commands">
<arg>${current_directory}</arg>
<arg>${image_name}</arg>
<doc>Load image to Eink and wait HH read the barcode to respond data
- For Label Programing, the system will wait for default 4s to HH can read this label
- For Label programing digit, the system will wait for default 1.2 s to HH can't read this label twice</doc>
<status status="PASS" start="2024-11-14T17:18:07.414354" elapsed="1.597129"/>
</kw>
<msg time="2024-11-14T17:18:09.012200" level="INFO">${data} = 123456789012812345\r</msg>
<var>${data}</var>
<arg>Read Label</arg>
<arg>${current_directory}</arg>
<arg>${image_name}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:18:07.413357" elapsed="1.598843"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Expected-----: ${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:18:09.012200" elapsed="0.000472"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Responded----: ${data}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:18:09.012672" elapsed="0.000000"/>
</kw>
<kw name="LogImage" owner="Keywords">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-11-14T17:18:09.013673" level="INFO">${data} = C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\DataSet\EAN13_AddOn5_123456789012812345.jpg</msg>
<var>${data}</var>
<arg>${current_directory}\\${image_name}.jpg</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-11-14T17:18:09.013673" elapsed="0.000000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-14T17:18:09.013673" level="INFO" html="true">&lt;img src=C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\DataSet\EAN13_AddOn5_123456789012812345.jpg&gt;</msg>
<arg>&lt;img src=${data}&gt;</arg>
<arg>html=true</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-14T17:18:09.013673" elapsed="0.000000"/>
</kw>
<arg>${image_name}</arg>
<status status="PASS" start="2024-11-14T17:18:09.012672" elapsed="0.001001"/>
</kw>
<if>
<branch type="IF" condition="$value!=None">
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Compare" owner="Commands">
<arg>\nReading label: ${image_name}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<status status="PASS" start="2024-11-14T17:18:09.014670" elapsed="0.000000"/>
</kw>
<msg time="2024-11-14T17:18:09.014670" level="INFO">${data} = True</msg>
<var>${data}</var>
<arg>Compare</arg>
<arg>\nReading label: ${image_name}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:18:09.013673" elapsed="0.000997"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${data}</arg>
<arg>True</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-11-14T17:18:09.014670" elapsed="0.000000"/>
</kw>
<arg>Should Be Equal</arg>
<arg>${data}</arg>
<arg>True</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:18:09.014670" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-11-14T17:18:09.013673" elapsed="0.001995"/>
</branch>
<status status="PASS" start="2024-11-14T17:18:09.013673" elapsed="0.001995"/>
</if>
<return>
<value>${data}</value>
<status status="PASS" start="2024-11-14T17:18:09.015668" elapsed="0.000000"/>
</return>
<arg>EAN13_AddOn5_123456789012812345</arg>
<arg>123456789012812345</arg>
<status status="PASS" start="2024-11-14T17:18:07.413357" elapsed="1.602311"/>
</kw>
<kw name="Read" owner="Keywords">
<kw name="Log To Console" owner="BuiltIn">
<arg>\nReading label: ${image_name}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:18:09.015668" elapsed="0.000997"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Read Label" owner="Commands">
<arg>${current_directory}</arg>
<arg>${image_name}</arg>
<doc>Load image to Eink and wait HH read the barcode to respond data
- For Label Programing, the system will wait for default 4s to HH can read this label
- For Label programing digit, the system will wait for default 1.2 s to HH can't read this label twice</doc>
<status status="PASS" start="2024-11-14T17:18:09.016665" elapsed="1.611011"/>
</kw>
<msg time="2024-11-14T17:18:10.627676" level="INFO">${data} = 817525766012345\r</msg>
<var>${data}</var>
<arg>Read Label</arg>
<arg>${current_directory}</arg>
<arg>${image_name}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:18:09.016665" elapsed="1.611011"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Expected-----: ${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:18:10.628679" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Responded----: ${data}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:18:10.628679" elapsed="0.001006"/>
</kw>
<kw name="LogImage" owner="Keywords">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-11-14T17:18:10.630672" level="INFO">${data} = C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\DataSet\ISBN13_AddOn5_978817525766512345.jpg</msg>
<var>${data}</var>
<arg>${current_directory}\\${image_name}.jpg</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-11-14T17:18:10.629685" elapsed="0.000987"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-14T17:18:10.630672" level="INFO" html="true">&lt;img src=C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\DataSet\ISBN13_AddOn5_978817525766512345.jpg&gt;</msg>
<arg>&lt;img src=${data}&gt;</arg>
<arg>html=true</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-14T17:18:10.630672" elapsed="0.000000"/>
</kw>
<arg>${image_name}</arg>
<status status="PASS" start="2024-11-14T17:18:10.629685" elapsed="0.000987"/>
</kw>
<if>
<branch type="IF" condition="$value!=None">
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Compare" owner="Commands">
<arg>\nReading label: ${image_name}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<status status="PASS" start="2024-11-14T17:18:10.631668" elapsed="0.000000"/>
</kw>
<msg time="2024-11-14T17:18:10.631668" level="INFO">${data} = True</msg>
<var>${data}</var>
<arg>Compare</arg>
<arg>\nReading label: ${image_name}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:18:10.631668" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${data}</arg>
<arg>True</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-11-14T17:18:10.631668" elapsed="0.000000"/>
</kw>
<arg>Should Be Equal</arg>
<arg>${data}</arg>
<arg>True</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:18:10.631668" elapsed="0.000998"/>
</kw>
<status status="PASS" start="2024-11-14T17:18:10.630672" elapsed="0.001994"/>
</branch>
<status status="PASS" start="2024-11-14T17:18:10.630672" elapsed="0.001994"/>
</if>
<return>
<value>${data}</value>
<status status="PASS" start="2024-11-14T17:18:10.632666" elapsed="0.000000"/>
</return>
<arg>ISBN13_AddOn5_978817525766512345</arg>
<arg>817525766012345</arg>
<status status="PASS" start="2024-11-14T17:18:09.015668" elapsed="1.616998"/>
</kw>
<kw name="Read" owner="Keywords">
<kw name="Log To Console" owner="BuiltIn">
<arg>\nReading label: ${image_name}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:18:10.632666" elapsed="0.000997"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Read Label" owner="Commands">
<arg>${current_directory}</arg>
<arg>${image_name}</arg>
<doc>Load image to Eink and wait HH read the barcode to respond data
- For Label Programing, the system will wait for default 4s to HH can read this label
- For Label programing digit, the system will wait for default 1.2 s to HH can't read this label twice</doc>
<status status="PASS" start="2024-11-14T17:18:10.633663" elapsed="1.718229"/>
</kw>
<msg time="2024-11-14T17:18:12.351892" level="INFO">${data} = 1234567912\r12345679\r</msg>
<var>${data}</var>
<arg>Read Label</arg>
<arg>${current_directory}</arg>
<arg>${image_name}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:18:10.633663" elapsed="1.718229"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Expected-----: ${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:18:12.351892" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Responded----: ${data}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:18:12.352888" elapsed="0.000341"/>
</kw>
<kw name="LogImage" owner="Keywords">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-11-14T17:18:12.353229" level="INFO">${data} = C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\DataSet\ISSN_AddOn2_977123456789812.jpg</msg>
<var>${data}</var>
<arg>${current_directory}\\${image_name}.jpg</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-11-14T17:18:12.353229" elapsed="0.000000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-14T17:18:12.354229" level="INFO" html="true">&lt;img src=C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\DataSet\ISSN_AddOn2_977123456789812.jpg&gt;</msg>
<arg>&lt;img src=${data}&gt;</arg>
<arg>html=true</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-14T17:18:12.353229" elapsed="0.001000"/>
</kw>
<arg>${image_name}</arg>
<status status="PASS" start="2024-11-14T17:18:12.353229" elapsed="0.001000"/>
</kw>
<if>
<branch type="IF" condition="$value!=None">
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Compare" owner="Commands">
<arg>\nReading label: ${image_name}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<status status="PASS" start="2024-11-14T17:18:12.354229" elapsed="0.000000"/>
</kw>
<msg time="2024-11-14T17:18:12.354229" level="INFO">${data} = True</msg>
<var>${data}</var>
<arg>Compare</arg>
<arg>\nReading label: ${image_name}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:18:12.354229" elapsed="0.001026"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${data}</arg>
<arg>True</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-11-14T17:18:12.355255" elapsed="0.000000"/>
</kw>
<arg>Should Be Equal</arg>
<arg>${data}</arg>
<arg>True</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:18:12.355255" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-11-14T17:18:12.354229" elapsed="0.001026"/>
</branch>
<status status="PASS" start="2024-11-14T17:18:12.354229" elapsed="0.001026"/>
</if>
<return>
<value>${data}</value>
<status status="PASS" start="2024-11-14T17:18:12.355255" elapsed="0.000000"/>
</return>
<arg>ISSN_AddOn2_977123456789812</arg>
<arg>1234567912</arg>
<status status="PASS" start="2024-11-14T17:18:10.632666" elapsed="1.722589"/>
</kw>
<doc>Verify that the HH doesn’t read twice (with and without AddOn) when reading a Add On label</doc>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:17:38.575122" elapsed="33.781102">
Reading label: UPCA_AddOn5_12345678901212345 
Observed: 123456789012 
Expected: 12345678901212345 != True</status>
</test>
<status status="FAIL" start="2024-11-14T17:15:36.928225" elapsed="155.427999"/>
</suite>
<suite id="s1-s2" name="ATQ AdvancedBox" source="C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\ATQ_AdvancedBox.robot">
<kw name="Open Com port and set Interface" owner="Keywords" type="SETUP">
<kw name="Set Interface Name" owner="Commands">
<arg>${interface_name}</arg>
<status status="PASS" start="2024-11-14T17:18:12.362822" elapsed="0.001000"/>
</kw>
<kw name="Connect With COM port" owner="Keywords">
<kw name="Open Com Port" owner="Commands">
<msg time="2024-11-14T17:18:12.399924" level="INFO">${data} = OK</msg>
<var>${data}</var>
<arg>${COMPORT}</arg>
<status status="PASS" start="2024-11-14T17:18:12.363822" elapsed="0.036102"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Open Com Port ${COMPORT}: ${data}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:18:12.400924" elapsed="0.000000"/>
</kw>
<arg>${COMPORT}</arg>
<status status="PASS" start="2024-11-14T17:18:12.363822" elapsed="0.037102"/>
</kw>
<kw name="Set Interface For HH" owner="Keywords">
<kw name="Set Interface" owner="Commands">
<msg time="2024-11-14T17:18:26.435917" level="INFO">${data} = $S,AE,HA05,CSNRM03,Ar:$&gt;,&gt;,&gt;,&gt;,&gt;\r</msg>
<var>${data}</var>
<arg>${interface_name}</arg>
<arg>${reading_mode}</arg>
<status status="PASS" start="2024-11-14T17:18:12.400924" elapsed="14.034993"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Set Interface ${interface_name} For HH successful: ${data}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:18:26.435917" elapsed="0.001147"/>
</kw>
<arg>${interface_name}</arg>
<arg>${reading_mode}</arg>
<status status="PASS" start="2024-11-14T17:18:12.400924" elapsed="14.036140"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-11-14T17:18:26.437064" level="INFO">${init_interface_name} = RS232_STD</msg>
<var>${init_interface_name}</var>
<arg>${interface_name}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-11-14T17:18:26.437064" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-11-14T17:18:26.437064" level="INFO">${init_interface_name} = RS232_STD</msg>
<arg>${init_interface_name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-11-14T17:18:26.437064" elapsed="0.000000"/>
</kw>
<kw name="SetSoftTrigger" owner="Keywords">
<kw name="Set Trigger" owner="Commands">
<arg>${on_off}</arg>
<status status="PASS" start="2024-11-14T17:18:26.438064" elapsed="0.000000"/>
</kw>
<arg>${soft_trigger}</arg>
<doc>Set Soft trigger to On/Off</doc>
<status status="PASS" start="2024-11-14T17:18:26.438064" elapsed="0.000000"/>
</kw>
<kw name="Read" owner="Keywords">
<kw name="Log To Console" owner="BuiltIn">
<arg>\nReading label: ${image_name}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:18:26.438064" elapsed="0.000997"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Read Label" owner="Commands">
<arg>${current_directory}</arg>
<arg>${image_name}</arg>
<doc>Load image to Eink and wait HH read the barcode to respond data
- For Label Programing, the system will wait for default 4s to HH can read this label
- For Label programing digit, the system will wait for default 1.2 s to HH can't read this label twice</doc>
<status status="PASS" start="2024-11-14T17:18:26.439061" elapsed="14.174480"/>
</kw>
<msg time="2024-11-14T17:18:40.613541" level="INFO">${data} = </msg>
<var>${data}</var>
<arg>Read Label</arg>
<arg>${current_directory}</arg>
<arg>${image_name}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:18:26.439061" elapsed="14.175490"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Expected-----: ${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:18:40.614551" elapsed="0.000997"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Responded----: ${data}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:18:40.616545" elapsed="0.000000"/>
</kw>
<kw name="LogImage" owner="Keywords">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-11-14T17:18:40.619570" level="INFO">${data} = C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\DataSet\$P,AE,Interface,CSNRM03,P.jpg</msg>
<var>${data}</var>
<arg>${current_directory}\\${image_name}.jpg</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-11-14T17:18:40.618540" elapsed="0.001030"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-14T17:18:40.619570" level="INFO" html="true">&lt;img src=C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\DataSet\$P,AE,Interface,CSNRM03,P.jpg&gt;</msg>
<arg>&lt;img src=${data}&gt;</arg>
<arg>html=true</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-14T17:18:40.619570" elapsed="0.000000"/>
</kw>
<arg>${image_name}</arg>
<status status="PASS" start="2024-11-14T17:18:40.617539" elapsed="0.002031"/>
</kw>
<if>
<branch type="IF" condition="$value!=None">
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<var>${data}</var>
<arg>Compare</arg>
<arg>\nReading label: ${image_name}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="NOT RUN" start="2024-11-14T17:18:40.620530" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<arg>Should Be Equal</arg>
<arg>${data}</arg>
<arg>True</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="NOT RUN" start="2024-11-14T17:18:40.620530" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-11-14T17:18:40.619570" elapsed="0.000960"/>
</branch>
<status status="PASS" start="2024-11-14T17:18:40.619570" elapsed="0.000960"/>
</if>
<return>
<value>${data}</value>
<status status="PASS" start="2024-11-14T17:18:40.620530" elapsed="0.000000"/>
</return>
<arg>$P,AE,Interface,${reading_mode},P</arg>
<status status="PASS" start="2024-11-14T17:18:26.438064" elapsed="14.182466"/>
</kw>
<kw name="Send Command" owner="Commands">
<msg time="2024-11-14T17:18:41.036266" level="INFO">${RevA_Version_Base} = Gryphon GD4600 SOFTWARE RELEASE 0.10 Nov  5 2024\r</msg>
<var>${RevA_Version_Base}</var>
<arg>$!</arg>
<status status="PASS" start="2024-11-14T17:18:40.620530" elapsed="0.415736"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-11-14T17:18:41.038264" level="INFO">${RevA_Version_Base} = Gryphon GD4600 SOFTWARE RELEASE 0.10 Nov  5 2024\r</msg>
<arg>${RevA_Version_Base}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-11-14T17:18:41.037271" elapsed="0.000993"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-14T17:18:41.039257" level="INFO">RS232_STD + COM2 + CSNRM03 + Gryphon GD4600 SOFTWARE RELEASE 0.10 Nov  5 2024\r</msg>
<arg>${interface_name} + ${COMPORT} + ${reading_mode} + ${RevA_Version_Base}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-14T17:18:41.038264" elapsed="0.001991"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Running On ${COMPORT}: ${interface_name}: ${reading_mode}: ${RevA_Version_Base}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:18:41.040255" elapsed="0.000000"/>
</kw>
<arg>${interface_name}</arg>
<arg>${COMPORT}</arg>
<arg>${reading_mode}</arg>
<status status="PASS" start="2024-11-14T17:18:12.362822" elapsed="28.677433"/>
</kw>
<test id="s1-s2-t1" name="ATQ_AdvancedBox" line="9">
<kw name="Read" owner="Keywords">
<kw name="Log To Console" owner="BuiltIn">
<arg>\nReading label: ${image_name}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:18:41.041260" elapsed="0.000987"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Read Label" owner="Commands">
<arg>${current_directory}</arg>
<arg>${image_name}</arg>
<doc>Load image to Eink and wait HH read the barcode to respond data
- For Label Programing, the system will wait for default 4s to HH can read this label
- For Label programing digit, the system will wait for default 1.2 s to HH can't read this label twice</doc>
<status status="PASS" start="2024-11-14T17:18:41.042247" elapsed="7.135062"/>
</kw>
<msg time="2024-11-14T17:18:48.177309" level="INFO">${data} = </msg>
<var>${data}</var>
<arg>Read Label</arg>
<arg>${current_directory}</arg>
<arg>${image_name}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:18:41.042247" elapsed="7.135062"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Expected-----: ${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:18:48.177309" elapsed="0.000839"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Responded----: ${data}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:18:48.178148" elapsed="0.000000"/>
</kw>
<kw name="LogImage" owner="Keywords">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-11-14T17:18:48.179147" level="INFO">${data} = C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\DataSet\$P,CSNPM01,P.jpg</msg>
<var>${data}</var>
<arg>${current_directory}\\${image_name}.jpg</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-11-14T17:18:48.179147" elapsed="0.000000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-14T17:18:48.179147" level="INFO" html="true">&lt;img src=C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\DataSet\$P,CSNPM01,P.jpg&gt;</msg>
<arg>&lt;img src=${data}&gt;</arg>
<arg>html=true</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-14T17:18:48.179147" elapsed="0.000000"/>
</kw>
<arg>${image_name}</arg>
<status status="PASS" start="2024-11-14T17:18:48.178148" elapsed="0.000999"/>
</kw>
<if>
<branch type="IF" condition="$value!=None">
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<var>${data}</var>
<arg>Compare</arg>
<arg>\nReading label: ${image_name}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="NOT RUN" start="2024-11-14T17:18:48.180145" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<arg>Should Be Equal</arg>
<arg>${data}</arg>
<arg>True</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="NOT RUN" start="2024-11-14T17:18:48.180145" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-11-14T17:18:48.179147" elapsed="0.000998"/>
</branch>
<status status="PASS" start="2024-11-14T17:18:48.179147" elapsed="0.000998"/>
</if>
<return>
<value>${data}</value>
<status status="PASS" start="2024-11-14T17:18:48.180145" elapsed="0.000000"/>
</return>
<arg>$P,CSNPM01,P</arg>
<status status="PASS" start="2024-11-14T17:18:41.041260" elapsed="7.138885"/>
</kw>
<kw name="Read" owner="Keywords">
<kw name="Log To Console" owner="BuiltIn">
<arg>\nReading label: ${image_name}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:18:48.181143" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Read Label" owner="Commands">
<arg>${current_directory}</arg>
<arg>${image_name}</arg>
<doc>Load image to Eink and wait HH read the barcode to respond data
- For Label Programing, the system will wait for default 4s to HH can read this label
- For Label programing digit, the system will wait for default 1.2 s to HH can't read this label twice</doc>
<status status="PASS" start="2024-11-14T17:18:48.181143" elapsed="7.664667"/>
</kw>
<msg time="2024-11-14T17:18:55.845810" level="INFO">${data} = </msg>
<var>${data}</var>
<arg>Read Label</arg>
<arg>${current_directory}</arg>
<arg>${image_name}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:18:48.181143" elapsed="7.664667"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Expected-----: ${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:18:55.845810" elapsed="0.000969"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Responded----: ${data}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:18:55.846779" elapsed="0.000000"/>
</kw>
<kw name="LogImage" owner="Keywords">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-11-14T17:18:55.847804" level="INFO">${data} = C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\DataSet\$P,CIPAB01,P.jpg</msg>
<var>${data}</var>
<arg>${current_directory}\\${image_name}.jpg</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-11-14T17:18:55.847804" elapsed="0.000000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-14T17:18:55.847804" level="INFO" html="true">&lt;img src=C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\DataSet\$P,CIPAB01,P.jpg&gt;</msg>
<arg>&lt;img src=${data}&gt;</arg>
<arg>html=true</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-14T17:18:55.847804" elapsed="0.000000"/>
</kw>
<arg>${image_name}</arg>
<status status="PASS" start="2024-11-14T17:18:55.846779" elapsed="0.001025"/>
</kw>
<if>
<branch type="IF" condition="$value!=None">
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<var>${data}</var>
<arg>Compare</arg>
<arg>\nReading label: ${image_name}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="NOT RUN" start="2024-11-14T17:18:55.848803" elapsed="0.000967"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<arg>Should Be Equal</arg>
<arg>${data}</arg>
<arg>True</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="NOT RUN" start="2024-11-14T17:18:55.849770" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-11-14T17:18:55.847804" elapsed="0.001966"/>
</branch>
<status status="PASS" start="2024-11-14T17:18:55.847804" elapsed="0.001966"/>
</if>
<return>
<value>${data}</value>
<status status="PASS" start="2024-11-14T17:18:55.849770" elapsed="0.000000"/>
</return>
<arg>$P,CIPAB01,P</arg>
<status status="PASS" start="2024-11-14T17:18:48.180145" elapsed="7.669625"/>
</kw>
<kw name="Read" owner="Keywords">
<kw name="Log To Console" owner="BuiltIn">
<arg>\nReading label: ${image_name}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:18:55.850767" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Read Label" owner="Commands">
<arg>${current_directory}</arg>
<arg>${image_name}</arg>
<doc>Load image to Eink and wait HH read the barcode to respond data
- For Label Programing, the system will wait for default 4s to HH can read this label
- For Label programing digit, the system will wait for default 1.2 s to HH can't read this label twice</doc>
<status status="PASS" start="2024-11-14T17:18:55.851766" elapsed="12.100541"/>
</kw>
<msg time="2024-11-14T17:19:07.952307" level="INFO">${data} = 5415098011978\r</msg>
<var>${data}</var>
<arg>Read Label</arg>
<arg>${current_directory}</arg>
<arg>${image_name}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:18:55.851766" elapsed="12.101538"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Expected-----: ${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:19:07.953304" elapsed="0.001036"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Responded----: ${data}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:19:07.955300" elapsed="0.000999"/>
</kw>
<kw name="LogImage" owner="Keywords">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-11-14T17:19:07.958289" level="INFO">${data} = C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\DataSet\AdvancedBoxBC.jpg</msg>
<var>${data}</var>
<arg>${current_directory}\\${image_name}.jpg</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-11-14T17:19:07.957329" elapsed="0.000960"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-14T17:19:07.959285" level="INFO" html="true">&lt;img src=C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\DataSet\AdvancedBoxBC.jpg&gt;</msg>
<arg>&lt;img src=${data}&gt;</arg>
<arg>html=true</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-14T17:19:07.959285" elapsed="0.000000"/>
</kw>
<arg>${image_name}</arg>
<status status="PASS" start="2024-11-14T17:19:07.956299" elapsed="0.002986"/>
</kw>
<if>
<branch type="IF" condition="$value!=None">
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Compare" owner="Commands">
<arg>\nReading label: ${image_name}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<status status="PASS" start="2024-11-14T17:19:07.959285" elapsed="0.001026"/>
</kw>
<msg time="2024-11-14T17:19:07.960311" level="INFO">${data} = 
Reading label: AdvancedBoxBC 
Observed: 5415098011978 
Expected: 0105415098011978216PT9QUXNQHBS{GS}240FA074824.09</msg>
<var>${data}</var>
<arg>Compare</arg>
<arg>\nReading label: ${image_name}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:19:07.959285" elapsed="0.001026"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Should Be Equal" owner="BuiltIn">
<msg time="2024-11-14T17:19:07.960311" level="FAIL">
Reading label: AdvancedBoxBC 
Observed: 5415098011978 
Expected: 0105415098011978216PT9QUXNQHBS{GS}240FA074824.09 != True</msg>
<arg>${data}</arg>
<arg>True</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="FAIL" start="2024-11-14T17:19:07.960311" elapsed="0.000000">
Reading label: AdvancedBoxBC 
Observed: 5415098011978 
Expected: 0105415098011978216PT9QUXNQHBS{GS}240FA074824.09 != True</status>
</kw>
<arg>Should Be Equal</arg>
<arg>${data}</arg>
<arg>True</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="FAIL" start="2024-11-14T17:19:07.960311" elapsed="0.000000">
Reading label: AdvancedBoxBC 
Observed: 5415098011978 
Expected: 0105415098011978216PT9QUXNQHBS{GS}240FA074824.09 != True</status>
</kw>
<status status="FAIL" start="2024-11-14T17:19:07.959285" elapsed="0.001026">
Reading label: AdvancedBoxBC 
Observed: 5415098011978 
Expected: 0105415098011978216PT9QUXNQHBS{GS}240FA074824.09 != True</status>
</branch>
<status status="FAIL" start="2024-11-14T17:19:07.959285" elapsed="0.001026">
Reading label: AdvancedBoxBC 
Observed: 5415098011978 
Expected: 0105415098011978216PT9QUXNQHBS{GS}240FA074824.09 != True</status>
</if>
<return>
<value>${data}</value>
<status status="PASS" start="2024-11-14T17:19:07.960311" elapsed="0.000000"/>
</return>
<arg>AdvancedBoxBC</arg>
<arg>0105415098011978216PT9QUXNQHBS{GS}240FA074824.09</arg>
<status status="FAIL" start="2024-11-14T17:18:55.850767" elapsed="12.110542">
Reading label: AdvancedBoxBC 
Observed: 5415098011978 
Expected: 0105415098011978216PT9QUXNQHBS{GS}240FA074824.09 != True</status>
</kw>
<kw name="Read" owner="Keywords">
<kw name="Log To Console" owner="BuiltIn">
<arg>\nReading label: ${image_name}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:19:07.962277" elapsed="0.000780"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Read Label" owner="Commands">
<arg>${current_directory}</arg>
<arg>${image_name}</arg>
<doc>Load image to Eink and wait HH read the barcode to respond data
- For Label Programing, the system will wait for default 4s to HH can read this label
- For Label programing digit, the system will wait for default 1.2 s to HH can't read this label twice</doc>
<status status="PASS" start="2024-11-14T17:19:07.963057" elapsed="12.057027"/>
</kw>
<msg time="2024-11-14T17:19:20.020084" level="INFO">${data} = </msg>
<var>${data}</var>
<arg>Read Label</arg>
<arg>${current_directory}</arg>
<arg>${image_name}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:19:07.963057" elapsed="12.057027"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Expected-----: ${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:19:20.020084" elapsed="0.001001"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Responded----: ${data}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:19:20.021085" elapsed="0.000000"/>
</kw>
<kw name="LogImage" owner="Keywords">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-11-14T17:19:20.022108" level="INFO">${data} = C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\DataSet\AdvancedBoxField.jpg</msg>
<var>${data}</var>
<arg>${current_directory}\\${image_name}.jpg</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-11-14T17:19:20.022108" elapsed="0.000000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-14T17:19:20.022108" level="INFO" html="true">&lt;img src=C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\DataSet\AdvancedBoxField.jpg&gt;</msg>
<arg>&lt;img src=${data}&gt;</arg>
<arg>html=true</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-14T17:19:20.022108" elapsed="0.000971"/>
</kw>
<arg>${image_name}</arg>
<status status="PASS" start="2024-11-14T17:19:20.021085" elapsed="0.001994"/>
</kw>
<if>
<branch type="IF" condition="$value!=None">
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Compare" owner="Commands">
<arg>\nReading label: ${image_name}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<status status="PASS" start="2024-11-14T17:19:20.023079" elapsed="0.000000"/>
</kw>
<msg time="2024-11-14T17:19:20.023079" level="INFO">${data} = 
Reading label: AdvancedBoxField 
Observed:  
Expected: 0105415098011978216PT9QUXNQHBS{GS}240FA074824.09</msg>
<var>${data}</var>
<arg>Compare</arg>
<arg>\nReading label: ${image_name}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:19:20.023079" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Should Be Equal" owner="BuiltIn">
<msg time="2024-11-14T17:19:20.024076" level="FAIL">
Reading label: AdvancedBoxField 
Observed:  
Expected: 0105415098011978216PT9QUXNQHBS{GS}240FA074824.09 != True</msg>
<arg>${data}</arg>
<arg>True</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="FAIL" start="2024-11-14T17:19:20.024076" elapsed="0.000000">
Reading label: AdvancedBoxField 
Observed:  
Expected: 0105415098011978216PT9QUXNQHBS{GS}240FA074824.09 != True</status>
</kw>
<arg>Should Be Equal</arg>
<arg>${data}</arg>
<arg>True</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="FAIL" start="2024-11-14T17:19:20.024076" elapsed="0.000000">
Reading label: AdvancedBoxField 
Observed:  
Expected: 0105415098011978216PT9QUXNQHBS{GS}240FA074824.09 != True</status>
</kw>
<status status="FAIL" start="2024-11-14T17:19:20.023079" elapsed="0.000997">
Reading label: AdvancedBoxField 
Observed:  
Expected: 0105415098011978216PT9QUXNQHBS{GS}240FA074824.09 != True</status>
</branch>
<status status="FAIL" start="2024-11-14T17:19:20.023079" elapsed="0.000997">
Reading label: AdvancedBoxField 
Observed:  
Expected: 0105415098011978216PT9QUXNQHBS{GS}240FA074824.09 != True</status>
</if>
<return>
<value>${data}</value>
<status status="PASS" start="2024-11-14T17:19:20.024076" elapsed="0.000000"/>
</return>
<arg>AdvancedBoxField</arg>
<arg>0105415098011978216PT9QUXNQHBS{GS}240FA074824.09</arg>
<status status="FAIL" start="2024-11-14T17:19:07.961309" elapsed="12.062767">
Reading label: AdvancedBoxField 
Observed:  
Expected: 0105415098011978216PT9QUXNQHBS{GS}240FA074824.09 != True</status>
</kw>
<doc>This test verifies the rules for ISO compatible transmission for UCC composites and EAN128 Emulation</doc>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:18:41.040255" elapsed="38.984818">Several failures occurred:

1) 
Reading label: AdvancedBoxBC 
Observed: 5415098011978 
Expected: 0105415098011978216PT9QUXNQHBS{GS}240FA074824.09 != True

2) 
Reading label: AdvancedBoxField 
Observed:  
Expected: 0105415098011978216PT9QUXNQHBS{GS}240FA074824.09 != True</status>
</test>
<status status="FAIL" start="2024-11-14T17:18:12.357221" elapsed="67.667852"/>
</suite>
<suite id="s1-s3" name="ATQ CERNER DataFormatting" source="C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\ATQ_CERNER_DataFormatting.robot">
<kw name="Open Com port and set Interface" owner="Keywords" type="SETUP">
<kw name="Set Interface Name" owner="Commands">
<arg>${interface_name}</arg>
<status status="PASS" start="2024-11-14T17:19:20.031061" elapsed="0.001031"/>
</kw>
<kw name="Connect With COM port" owner="Keywords">
<kw name="Open Com Port" owner="Commands">
<msg time="2024-11-14T17:19:20.069618" level="INFO">${data} = OK</msg>
<var>${data}</var>
<arg>${COMPORT}</arg>
<status status="PASS" start="2024-11-14T17:19:20.032092" elapsed="0.037526"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Open Com Port ${COMPORT}: ${data}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:19:20.069618" elapsed="0.000000"/>
</kw>
<arg>${COMPORT}</arg>
<status status="PASS" start="2024-11-14T17:19:20.032092" elapsed="0.037526"/>
</kw>
<kw name="Set Interface For HH" owner="Keywords">
<kw name="Set Interface" owner="Commands">
<msg time="2024-11-14T17:19:34.100884" level="INFO">${data} = $S,AE,HA05,CSNRM03,Ar:$&gt;,&gt;,&gt;,&gt;,&gt;\r</msg>
<var>${data}</var>
<arg>${interface_name}</arg>
<arg>${reading_mode}</arg>
<status status="PASS" start="2024-11-14T17:19:20.070617" elapsed="14.030267"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Set Interface ${interface_name} For HH successful: ${data}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:19:34.100884" elapsed="0.000965"/>
</kw>
<arg>${interface_name}</arg>
<arg>${reading_mode}</arg>
<status status="PASS" start="2024-11-14T17:19:20.070617" elapsed="14.031232"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-11-14T17:19:34.101849" level="INFO">${init_interface_name} = RS232_STD</msg>
<var>${init_interface_name}</var>
<arg>${interface_name}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-11-14T17:19:34.101849" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-11-14T17:19:34.102846" level="INFO">${init_interface_name} = RS232_STD</msg>
<arg>${init_interface_name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-11-14T17:19:34.101849" elapsed="0.000997"/>
</kw>
<kw name="SetSoftTrigger" owner="Keywords">
<kw name="Set Trigger" owner="Commands">
<arg>${on_off}</arg>
<status status="PASS" start="2024-11-14T17:19:34.102846" elapsed="0.000000"/>
</kw>
<arg>${soft_trigger}</arg>
<doc>Set Soft trigger to On/Off</doc>
<status status="PASS" start="2024-11-14T17:19:34.102846" elapsed="0.000000"/>
</kw>
<kw name="Read" owner="Keywords">
<kw name="Log To Console" owner="BuiltIn">
<arg>\nReading label: ${image_name}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:19:34.103843" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Read Label" owner="Commands">
<arg>${current_directory}</arg>
<arg>${image_name}</arg>
<doc>Load image to Eink and wait HH read the barcode to respond data
- For Label Programing, the system will wait for default 4s to HH can read this label
- For Label programing digit, the system will wait for default 1.2 s to HH can't read this label twice</doc>
<status status="PASS" start="2024-11-14T17:19:34.103843" elapsed="14.183372"/>
</kw>
<msg time="2024-11-14T17:19:48.287215" level="INFO">${data} = </msg>
<var>${data}</var>
<arg>Read Label</arg>
<arg>${current_directory}</arg>
<arg>${image_name}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:19:34.103843" elapsed="14.183372"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Expected-----: ${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:19:48.287215" elapsed="0.000918"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Responded----: ${data}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:19:48.288133" elapsed="0.000597"/>
</kw>
<kw name="LogImage" owner="Keywords">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-11-14T17:19:48.288730" level="INFO">${data} = C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\DataSet\$P,AE,Interface,CSNRM03,P.jpg</msg>
<var>${data}</var>
<arg>${current_directory}\\${image_name}.jpg</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-11-14T17:19:48.288730" elapsed="0.000000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-14T17:19:48.289731" level="INFO" html="true">&lt;img src=C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\DataSet\$P,AE,Interface,CSNRM03,P.jpg&gt;</msg>
<arg>&lt;img src=${data}&gt;</arg>
<arg>html=true</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-14T17:19:48.288730" elapsed="0.001001"/>
</kw>
<arg>${image_name}</arg>
<status status="PASS" start="2024-11-14T17:19:48.288730" elapsed="0.001001"/>
</kw>
<if>
<branch type="IF" condition="$value!=None">
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<var>${data}</var>
<arg>Compare</arg>
<arg>\nReading label: ${image_name}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="NOT RUN" start="2024-11-14T17:19:48.289731" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<arg>Should Be Equal</arg>
<arg>${data}</arg>
<arg>True</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="NOT RUN" start="2024-11-14T17:19:48.289731" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-11-14T17:19:48.289731" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-11-14T17:19:48.289731" elapsed="0.000000"/>
</if>
<return>
<value>${data}</value>
<status status="PASS" start="2024-11-14T17:19:48.289731" elapsed="0.000996"/>
</return>
<arg>$P,AE,Interface,${reading_mode},P</arg>
<status status="PASS" start="2024-11-14T17:19:34.102846" elapsed="14.187881"/>
</kw>
<kw name="Send Command" owner="Commands">
<msg time="2024-11-14T17:19:48.705999" level="INFO">${RevA_Version_Base} = Gryphon GD4600 SOFTWARE RELEASE 0.10 Nov  5 2024\r</msg>
<var>${RevA_Version_Base}</var>
<arg>$!</arg>
<status status="PASS" start="2024-11-14T17:19:48.290727" elapsed="0.415272"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-11-14T17:19:48.706721" level="INFO">${RevA_Version_Base} = Gryphon GD4600 SOFTWARE RELEASE 0.10 Nov  5 2024\r</msg>
<arg>${RevA_Version_Base}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-11-14T17:19:48.705999" elapsed="0.000722"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-14T17:19:48.706721" level="INFO">RS232_STD + COM2 + CSNRM03 + Gryphon GD4600 SOFTWARE RELEASE 0.10 Nov  5 2024\r</msg>
<arg>${interface_name} + ${COMPORT} + ${reading_mode} + ${RevA_Version_Base}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-14T17:19:48.706721" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Running On ${COMPORT}: ${interface_name}: ${reading_mode}: ${RevA_Version_Base}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:19:48.706721" elapsed="0.001098"/>
</kw>
<arg>${interface_name}</arg>
<arg>${COMPORT}</arg>
<arg>${reading_mode}</arg>
<status status="PASS" start="2024-11-14T17:19:20.031061" elapsed="28.676758"/>
</kw>
<test id="s1-s3-t1" name="ATQ_CERNER_DataFormatting" line="9">
<kw name="Read" owner="Keywords">
<kw name="Log To Console" owner="BuiltIn">
<arg>\nReading label: ${image_name}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:19:48.708501" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Read Label" owner="Commands">
<arg>${current_directory}</arg>
<arg>${image_name}</arg>
<doc>Load image to Eink and wait HH read the barcode to respond data
- For Label Programing, the system will wait for default 4s to HH can read this label
- For Label programing digit, the system will wait for default 1.2 s to HH can't read this label twice</doc>
<status status="PASS" start="2024-11-14T17:19:48.709501" elapsed="7.100464"/>
</kw>
<msg time="2024-11-14T17:19:55.809965" level="INFO">${data} = </msg>
<var>${data}</var>
<arg>Read Label</arg>
<arg>${current_directory}</arg>
<arg>${image_name}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:19:48.709501" elapsed="7.100464"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Expected-----: ${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:19:55.809965" elapsed="0.000999"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Responded----: ${data}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:19:55.810964" elapsed="0.000573"/>
</kw>
<kw name="LogImage" owner="Keywords">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-11-14T17:19:55.811537" level="INFO">${data} = C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\DataSet\$P,CC8TF01,CLFCH1D7CFFFFFFFFFFFF,P_Datamatrix.jpg</msg>
<var>${data}</var>
<arg>${current_directory}\\${image_name}.jpg</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-11-14T17:19:55.811537" elapsed="0.000000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-14T17:19:55.812537" level="INFO" html="true">&lt;img src=C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\DataSet\$P,CC8TF01,CLFCH1D7CFFFFFFFFFFFF,P_Datamatrix.jpg&gt;</msg>
<arg>&lt;img src=${data}&gt;</arg>
<arg>html=true</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-14T17:19:55.811537" elapsed="0.001000"/>
</kw>
<arg>${image_name}</arg>
<status status="PASS" start="2024-11-14T17:19:55.811537" elapsed="0.001000"/>
</kw>
<if>
<branch type="IF" condition="$value!=None">
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<var>${data}</var>
<arg>Compare</arg>
<arg>\nReading label: ${image_name}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="NOT RUN" start="2024-11-14T17:19:55.812537" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<arg>Should Be Equal</arg>
<arg>${data}</arg>
<arg>True</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="NOT RUN" start="2024-11-14T17:19:55.812537" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-11-14T17:19:55.812537" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-11-14T17:19:55.812537" elapsed="0.000000"/>
</if>
<return>
<value>${data}</value>
<status status="PASS" start="2024-11-14T17:19:55.812537" elapsed="0.000000"/>
</return>
<arg>$P,CC8TF01,CLFCH1D7CFFFFFFFFFFFF,P_Datamatrix</arg>
<status status="PASS" start="2024-11-14T17:19:48.708501" elapsed="7.104036"/>
</kw>
<kw name="Read" owner="Keywords">
<kw name="Log To Console" owner="BuiltIn">
<arg>\nReading label: ${image_name}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:19:55.813533" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Read Label" owner="Commands">
<arg>${current_directory}</arg>
<arg>${image_name}</arg>
<doc>Load image to Eink and wait HH read the barcode to respond data
- For Label Programing, the system will wait for default 4s to HH can read this label
- For Label programing digit, the system will wait for default 1.2 s to HH can't read this label twice</doc>
<status status="PASS" start="2024-11-14T17:19:55.814559" elapsed="1.892019"/>
</kw>
<msg time="2024-11-14T17:19:57.706578" level="INFO">${data} = ]C1A\x1dBCabc\r</msg>
<var>${data}</var>
<arg>Read Label</arg>
<arg>${current_directory}</arg>
<arg>${image_name}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:19:55.813533" elapsed="1.893045"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Expected-----: ${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:19:57.707581" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Responded----: ${data}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:19:57.707581" elapsed="0.000000"/>
</kw>
<kw name="LogImage" owner="Keywords">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-11-14T17:19:57.708577" level="INFO">${data} = C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\DataSet\EAN128_A_BCabc.jpg</msg>
<var>${data}</var>
<arg>${current_directory}\\${image_name}.jpg</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-11-14T17:19:57.708577" elapsed="0.000000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-14T17:19:57.708577" level="INFO" html="true">&lt;img src=C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\DataSet\EAN128_A_BCabc.jpg&gt;</msg>
<arg>&lt;img src=${data}&gt;</arg>
<arg>html=true</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-14T17:19:57.708577" elapsed="0.000000"/>
</kw>
<arg>${image_name}</arg>
<status status="PASS" start="2024-11-14T17:19:57.708577" elapsed="0.000996"/>
</kw>
<if>
<branch type="IF" condition="$value!=None">
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Compare" owner="Commands">
<arg>\nReading label: ${image_name}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<status status="PASS" start="2024-11-14T17:19:57.709573" elapsed="0.000000"/>
</kw>
<msg time="2024-11-14T17:19:57.709573" level="INFO">${data} = 
Reading label: EAN128_A_BCabc 
Observed: ]C1A\x1dBCabc 
Expected: ]C1A|BCabc</msg>
<var>${data}</var>
<arg>Compare</arg>
<arg>\nReading label: ${image_name}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:19:57.709573" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Should Be Equal" owner="BuiltIn">
<msg time="2024-11-14T17:19:57.710571" level="FAIL">
Reading label: EAN128_A_BCabc 
Observed: ]C1A\x1dBCabc 
Expected: ]C1A|BCabc != True</msg>
<arg>${data}</arg>
<arg>True</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="FAIL" start="2024-11-14T17:19:57.710571" elapsed="0.000000">
Reading label: EAN128_A_BCabc 
Observed: ]C1A\x1dBCabc 
Expected: ]C1A|BCabc != True</status>
</kw>
<arg>Should Be Equal</arg>
<arg>${data}</arg>
<arg>True</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="FAIL" start="2024-11-14T17:19:57.709573" elapsed="0.000998">
Reading label: EAN128_A_BCabc 
Observed: ]C1A\x1dBCabc 
Expected: ]C1A|BCabc != True</status>
</kw>
<status status="FAIL" start="2024-11-14T17:19:57.709573" elapsed="0.000998">
Reading label: EAN128_A_BCabc 
Observed: ]C1A\x1dBCabc 
Expected: ]C1A|BCabc != True</status>
</branch>
<status status="FAIL" start="2024-11-14T17:19:57.709573" elapsed="0.000998">
Reading label: EAN128_A_BCabc 
Observed: ]C1A\x1dBCabc 
Expected: ]C1A|BCabc != True</status>
</if>
<return>
<value>${data}</value>
<status status="PASS" start="2024-11-14T17:19:57.710571" elapsed="0.000000"/>
</return>
<arg>EAN128_A_BCabc</arg>
<arg>]C1A|BCabc</arg>
<status status="FAIL" start="2024-11-14T17:19:55.813533" elapsed="1.897038">
Reading label: EAN128_A_BCabc 
Observed: ]C1A\x1dBCabc 
Expected: ]C1A|BCabc != True</status>
</kw>
<kw name="Read" owner="Keywords">
<kw name="Log To Console" owner="BuiltIn">
<arg>\nReading label: ${image_name}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:19:57.711569" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Read Label" owner="Commands">
<arg>${current_directory}</arg>
<arg>${image_name}</arg>
<doc>Load image to Eink and wait HH read the barcode to respond data
- For Label Programing, the system will wait for default 4s to HH can read this label
- For Label programing digit, the system will wait for default 1.2 s to HH can't read this label twice</doc>
<status status="PASS" start="2024-11-14T17:19:57.711569" elapsed="1.684556"/>
</kw>
<msg time="2024-11-14T17:19:59.396125" level="INFO">${data} = ]C1ABC\x1dabc\r</msg>
<var>${data}</var>
<arg>Read Label</arg>
<arg>${current_directory}</arg>
<arg>${image_name}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:19:57.711569" elapsed="1.684556"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Expected-----: ${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:19:59.396858" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Responded----: ${data}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:19:59.396858" elapsed="0.000781"/>
</kw>
<kw name="LogImage" owner="Keywords">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-11-14T17:19:59.397639" level="INFO">${data} = C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\DataSet\EAN128_ABC_abc.jpg</msg>
<var>${data}</var>
<arg>${current_directory}\\${image_name}.jpg</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-11-14T17:19:59.397639" elapsed="0.000000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-14T17:19:59.398640" level="INFO" html="true">&lt;img src=C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\DataSet\EAN128_ABC_abc.jpg&gt;</msg>
<arg>&lt;img src=${data}&gt;</arg>
<arg>html=true</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-14T17:19:59.397639" elapsed="0.001001"/>
</kw>
<arg>${image_name}</arg>
<status status="PASS" start="2024-11-14T17:19:59.397639" elapsed="0.001001"/>
</kw>
<if>
<branch type="IF" condition="$value!=None">
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Compare" owner="Commands">
<arg>\nReading label: ${image_name}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<status status="PASS" start="2024-11-14T17:19:59.398640" elapsed="0.000000"/>
</kw>
<msg time="2024-11-14T17:19:59.398640" level="INFO">${data} = 
Reading label: EAN128_ABC_abc 
Observed: ]C1ABC\x1dabc 
Expected: ]C1ABC|abc</msg>
<var>${data}</var>
<arg>Compare</arg>
<arg>\nReading label: ${image_name}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:19:59.398640" elapsed="0.000997"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Should Be Equal" owner="BuiltIn">
<msg time="2024-11-14T17:19:59.399637" level="FAIL">
Reading label: EAN128_ABC_abc 
Observed: ]C1ABC\x1dabc 
Expected: ]C1ABC|abc != True</msg>
<arg>${data}</arg>
<arg>True</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="FAIL" start="2024-11-14T17:19:59.399637" elapsed="0.000000">
Reading label: EAN128_ABC_abc 
Observed: ]C1ABC\x1dabc 
Expected: ]C1ABC|abc != True</status>
</kw>
<arg>Should Be Equal</arg>
<arg>${data}</arg>
<arg>True</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="FAIL" start="2024-11-14T17:19:59.399637" elapsed="0.000000">
Reading label: EAN128_ABC_abc 
Observed: ]C1ABC\x1dabc 
Expected: ]C1ABC|abc != True</status>
</kw>
<status status="FAIL" start="2024-11-14T17:19:59.398640" elapsed="0.000997">
Reading label: EAN128_ABC_abc 
Observed: ]C1ABC\x1dabc 
Expected: ]C1ABC|abc != True</status>
</branch>
<status status="FAIL" start="2024-11-14T17:19:59.398640" elapsed="0.000997">
Reading label: EAN128_ABC_abc 
Observed: ]C1ABC\x1dabc 
Expected: ]C1ABC|abc != True</status>
</if>
<return>
<value>${data}</value>
<status status="PASS" start="2024-11-14T17:19:59.399637" elapsed="0.000000"/>
</return>
<arg>EAN128_ABC_abc</arg>
<arg>]C1ABC|abc</arg>
<status status="FAIL" start="2024-11-14T17:19:57.711569" elapsed="1.688068">
Reading label: EAN128_ABC_abc 
Observed: ]C1ABC\x1dabc 
Expected: ]C1ABC|abc != True</status>
</kw>
<kw name="Read" owner="Keywords">
<kw name="Log To Console" owner="BuiltIn">
<arg>\nReading label: ${image_name}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:19:59.400634" elapsed="0.000997"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Read Label" owner="Commands">
<arg>${current_directory}</arg>
<arg>${image_name}</arg>
<doc>Load image to Eink and wait HH read the barcode to respond data
- For Label Programing, the system will wait for default 4s to HH can read this label
- For Label programing digit, the system will wait for default 1.2 s to HH can't read this label twice</doc>
<status status="PASS" start="2024-11-14T17:19:59.401631" elapsed="1.671137"/>
</kw>
<msg time="2024-11-14T17:20:01.073586" level="INFO">${data} = ]C1ABCab\x1dc\r</msg>
<var>${data}</var>
<arg>Read Label</arg>
<arg>${current_directory}</arg>
<arg>${image_name}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:19:59.401631" elapsed="1.671955"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Expected-----: ${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:20:01.073586" elapsed="0.000614"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Responded----: ${data}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:20:01.074200" elapsed="0.000000"/>
</kw>
<kw name="LogImage" owner="Keywords">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-11-14T17:20:01.075201" level="INFO">${data} = C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\DataSet\EAN128_ABCab_c.jpg</msg>
<var>${data}</var>
<arg>${current_directory}\\${image_name}.jpg</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-11-14T17:20:01.075201" elapsed="0.000000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-14T17:20:01.075201" level="INFO" html="true">&lt;img src=C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\DataSet\EAN128_ABCab_c.jpg&gt;</msg>
<arg>&lt;img src=${data}&gt;</arg>
<arg>html=true</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-14T17:20:01.075201" elapsed="0.000000"/>
</kw>
<arg>${image_name}</arg>
<status status="PASS" start="2024-11-14T17:20:01.074200" elapsed="0.001001"/>
</kw>
<if>
<branch type="IF" condition="$value!=None">
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Compare" owner="Commands">
<arg>\nReading label: ${image_name}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<status status="PASS" start="2024-11-14T17:20:01.076197" elapsed="0.000000"/>
</kw>
<msg time="2024-11-14T17:20:01.076197" level="INFO">${data} = 
Reading label: EAN128_ABCab_c 
Observed: ]C1ABCab\x1dc 
Expected: ]C1ABCab|c</msg>
<var>${data}</var>
<arg>Compare</arg>
<arg>\nReading label: ${image_name}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:20:01.076197" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Should Be Equal" owner="BuiltIn">
<msg time="2024-11-14T17:20:01.077195" level="FAIL">
Reading label: EAN128_ABCab_c 
Observed: ]C1ABCab\x1dc 
Expected: ]C1ABCab|c != True</msg>
<arg>${data}</arg>
<arg>True</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="FAIL" start="2024-11-14T17:20:01.076197" elapsed="0.000998">
Reading label: EAN128_ABCab_c 
Observed: ]C1ABCab\x1dc 
Expected: ]C1ABCab|c != True</status>
</kw>
<arg>Should Be Equal</arg>
<arg>${data}</arg>
<arg>True</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="FAIL" start="2024-11-14T17:20:01.076197" elapsed="0.000998">
Reading label: EAN128_ABCab_c 
Observed: ]C1ABCab\x1dc 
Expected: ]C1ABCab|c != True</status>
</kw>
<status status="FAIL" start="2024-11-14T17:20:01.076197" elapsed="0.000998">
Reading label: EAN128_ABCab_c 
Observed: ]C1ABCab\x1dc 
Expected: ]C1ABCab|c != True</status>
</branch>
<status status="FAIL" start="2024-11-14T17:20:01.076197" elapsed="0.000998">
Reading label: EAN128_ABCab_c 
Observed: ]C1ABCab\x1dc 
Expected: ]C1ABCab|c != True</status>
</if>
<return>
<value>${data}</value>
<status status="PASS" start="2024-11-14T17:20:01.077195" elapsed="0.000000"/>
</return>
<arg>EAN128_ABCab_c</arg>
<arg>]C1ABCab|c</arg>
<status status="FAIL" start="2024-11-14T17:19:59.400634" elapsed="1.676561">
Reading label: EAN128_ABCab_c 
Observed: ]C1ABCab\x1dc 
Expected: ]C1ABCab|c != True</status>
</kw>
<kw name="Read" owner="Keywords">
<kw name="Log To Console" owner="BuiltIn">
<arg>\nReading label: ${image_name}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:20:01.078192" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Read Label" owner="Commands">
<arg>${current_directory}</arg>
<arg>${image_name}</arg>
<doc>Load image to Eink and wait HH read the barcode to respond data
- For Label Programing, the system will wait for default 4s to HH can read this label
- For Label programing digit, the system will wait for default 1.2 s to HH can't read this label twice</doc>
<status status="PASS" start="2024-11-14T17:20:01.078192" elapsed="1.679749"/>
</kw>
<msg time="2024-11-14T17:20:02.757941" level="INFO">${data} = ABC\x1dabc\r</msg>
<var>${data}</var>
<arg>Read Label</arg>
<arg>${current_directory}</arg>
<arg>${image_name}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:20:01.078192" elapsed="1.679749"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Expected-----: ${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:20:02.758941" elapsed="0.000995"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Responded----: ${data}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:20:02.760933" elapsed="0.000997"/>
</kw>
<kw name="LogImage" owner="Keywords">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-11-14T17:20:02.762926" level="INFO">${data} = C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\DataSet\Code128_ABC_x1dabc.jpg</msg>
<var>${data}</var>
<arg>${current_directory}\\${image_name}.jpg</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-11-14T17:20:02.761930" elapsed="0.000996"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-14T17:20:02.762926" level="INFO" html="true">&lt;img src=C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\DataSet\Code128_ABC_x1dabc.jpg&gt;</msg>
<arg>&lt;img src=${data}&gt;</arg>
<arg>html=true</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-14T17:20:02.762926" elapsed="0.000000"/>
</kw>
<arg>${image_name}</arg>
<status status="PASS" start="2024-11-14T17:20:02.761930" elapsed="0.000996"/>
</kw>
<if>
<branch type="IF" condition="$value!=None">
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Compare" owner="Commands">
<arg>\nReading label: ${image_name}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<status status="PASS" start="2024-11-14T17:20:02.762926" elapsed="0.001042"/>
</kw>
<msg time="2024-11-14T17:20:02.763968" level="INFO">${data} = 
Reading label: Code128_ABC_x1dabc 
Observed: ABC\x1dabc 
Expected: ABC|abc</msg>
<var>${data}</var>
<arg>Compare</arg>
<arg>\nReading label: ${image_name}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:20:02.762926" elapsed="0.001042"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Should Be Equal" owner="BuiltIn">
<msg time="2024-11-14T17:20:02.764949" level="FAIL">
Reading label: Code128_ABC_x1dabc 
Observed: ABC\x1dabc 
Expected: ABC|abc != True</msg>
<arg>${data}</arg>
<arg>True</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="FAIL" start="2024-11-14T17:20:02.763968" elapsed="0.000981">
Reading label: Code128_ABC_x1dabc 
Observed: ABC\x1dabc 
Expected: ABC|abc != True</status>
</kw>
<arg>Should Be Equal</arg>
<arg>${data}</arg>
<arg>True</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="FAIL" start="2024-11-14T17:20:02.763968" elapsed="0.000981">
Reading label: Code128_ABC_x1dabc 
Observed: ABC\x1dabc 
Expected: ABC|abc != True</status>
</kw>
<status status="FAIL" start="2024-11-14T17:20:02.762926" elapsed="0.002023">
Reading label: Code128_ABC_x1dabc 
Observed: ABC\x1dabc 
Expected: ABC|abc != True</status>
</branch>
<status status="FAIL" start="2024-11-14T17:20:02.762926" elapsed="0.002023">
Reading label: Code128_ABC_x1dabc 
Observed: ABC\x1dabc 
Expected: ABC|abc != True</status>
</if>
<return>
<value>${data}</value>
<status status="PASS" start="2024-11-14T17:20:02.764949" elapsed="0.000000"/>
</return>
<arg>Code128_ABC_x1dabc</arg>
<arg>ABC|abc</arg>
<status status="FAIL" start="2024-11-14T17:20:01.077195" elapsed="1.687754">
Reading label: Code128_ABC_x1dabc 
Observed: ABC\x1dabc 
Expected: ABC|abc != True</status>
</kw>
<doc>Verify if scanner can replace &lt;GS&gt; group separator by &lt;|&gt;</doc>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:19:48.707819" elapsed="14.057130">Several failures occurred:

1) 
Reading label: EAN128_A_BCabc 
Observed: ]C1A\x1dBCabc 
Expected: ]C1A|BCabc != True

2) 
Reading label: EAN128_ABC_abc 
Observed: ]C1ABC\x1dabc 
Expected: ]C1ABC|abc != True

3) 
Reading label: EAN128_ABCab_c 
Observed: ]C1ABCab\x1dc 
Expected: ]C1ABCab|c != True

4) 
Reading label: Code128_ABC_x1dabc 
Observed: ABC\x1dabc 
Expected: ABC|abc != True</status>
</test>
<status status="FAIL" start="2024-11-14T17:19:20.026071" elapsed="42.739846"/>
</suite>
<suite id="s1-s4" name="ATQ CERNER ISBT128 Concaternation" source="C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\ATQ_CERNER_ISBT128_Concaternation.robot">
<kw name="Open Com port and set Interface" owner="Keywords" type="SETUP">
<kw name="Set Interface Name" owner="Commands">
<arg>${interface_name}</arg>
<status status="PASS" start="2024-11-14T17:20:02.772380" elapsed="0.001026"/>
</kw>
<kw name="Connect With COM port" owner="Keywords">
<kw name="Open Com Port" owner="Commands">
<msg time="2024-11-14T17:20:02.804295" level="INFO">${data} = OK</msg>
<var>${data}</var>
<arg>${COMPORT}</arg>
<status status="PASS" start="2024-11-14T17:20:02.774375" elapsed="0.029920"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Open Com Port ${COMPORT}: ${data}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:20:02.804295" elapsed="0.000998"/>
</kw>
<arg>${COMPORT}</arg>
<status status="PASS" start="2024-11-14T17:20:02.773406" elapsed="0.031887"/>
</kw>
<kw name="Set Interface For HH" owner="Keywords">
<kw name="Set Interface" owner="Commands">
<msg time="2024-11-14T17:20:16.832035" level="INFO">${data} = $S,AE,HA05,CSNRM03,Ar:$&gt;,&gt;,&gt;,&gt;,&gt;\r</msg>
<var>${data}</var>
<arg>${interface_name}</arg>
<arg>${reading_mode}</arg>
<status status="PASS" start="2024-11-14T17:20:02.805293" elapsed="14.026742"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Set Interface ${interface_name} For HH successful: ${data}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:20:16.832035" elapsed="0.001002"/>
</kw>
<arg>${interface_name}</arg>
<arg>${reading_mode}</arg>
<status status="PASS" start="2024-11-14T17:20:02.805293" elapsed="14.027744"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-11-14T17:20:16.833037" level="INFO">${init_interface_name} = RS232_STD</msg>
<var>${init_interface_name}</var>
<arg>${interface_name}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-11-14T17:20:16.833037" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-11-14T17:20:16.834033" level="INFO">${init_interface_name} = RS232_STD</msg>
<arg>${init_interface_name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-11-14T17:20:16.834033" elapsed="0.000000"/>
</kw>
<kw name="SetSoftTrigger" owner="Keywords">
<kw name="Set Trigger" owner="Commands">
<arg>${on_off}</arg>
<status status="PASS" start="2024-11-14T17:20:16.834033" elapsed="0.000000"/>
</kw>
<arg>${soft_trigger}</arg>
<doc>Set Soft trigger to On/Off</doc>
<status status="PASS" start="2024-11-14T17:20:16.834033" elapsed="0.000000"/>
</kw>
<kw name="Read" owner="Keywords">
<kw name="Log To Console" owner="BuiltIn">
<arg>\nReading label: ${image_name}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:20:16.835030" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Read Label" owner="Commands">
<arg>${current_directory}</arg>
<arg>${image_name}</arg>
<doc>Load image to Eink and wait HH read the barcode to respond data
- For Label Programing, the system will wait for default 4s to HH can read this label
- For Label programing digit, the system will wait for default 1.2 s to HH can't read this label twice</doc>
<status status="PASS" start="2024-11-14T17:20:16.835030" elapsed="14.190466"/>
</kw>
<msg time="2024-11-14T17:20:31.025496" level="INFO">${data} = </msg>
<var>${data}</var>
<arg>Read Label</arg>
<arg>${current_directory}</arg>
<arg>${image_name}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:20:16.835030" elapsed="14.190466"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Expected-----: ${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:20:31.026494" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Responded----: ${data}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:20:31.026494" elapsed="0.000996"/>
</kw>
<kw name="LogImage" owner="Keywords">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-11-14T17:20:31.027490" level="INFO">${data} = C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\DataSet\$P,AE,Interface,CSNRM03,P.jpg</msg>
<var>${data}</var>
<arg>${current_directory}\\${image_name}.jpg</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-11-14T17:20:31.027490" elapsed="0.000000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-14T17:20:31.028488" level="INFO" html="true">&lt;img src=C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\DataSet\$P,AE,Interface,CSNRM03,P.jpg&gt;</msg>
<arg>&lt;img src=${data}&gt;</arg>
<arg>html=true</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-14T17:20:31.027490" elapsed="0.000998"/>
</kw>
<arg>${image_name}</arg>
<status status="PASS" start="2024-11-14T17:20:31.027490" elapsed="0.000998"/>
</kw>
<if>
<branch type="IF" condition="$value!=None">
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<var>${data}</var>
<arg>Compare</arg>
<arg>\nReading label: ${image_name}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="NOT RUN" start="2024-11-14T17:20:31.028488" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<arg>Should Be Equal</arg>
<arg>${data}</arg>
<arg>True</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="NOT RUN" start="2024-11-14T17:20:31.028488" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-11-14T17:20:31.028488" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-11-14T17:20:31.028488" elapsed="0.000997"/>
</if>
<return>
<value>${data}</value>
<status status="PASS" start="2024-11-14T17:20:31.029485" elapsed="0.000000"/>
</return>
<arg>$P,AE,Interface,${reading_mode},P</arg>
<status status="PASS" start="2024-11-14T17:20:16.835030" elapsed="14.194455"/>
</kw>
<kw name="Send Command" owner="Commands">
<msg time="2024-11-14T17:20:31.443539" level="INFO">${RevA_Version_Base} = Gryphon GD4600 SOFTWARE RELEASE 0.10 Nov  5 2024\r</msg>
<var>${RevA_Version_Base}</var>
<arg>$!</arg>
<status status="PASS" start="2024-11-14T17:20:31.029485" elapsed="0.414054"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-11-14T17:20:31.443539" level="INFO">${RevA_Version_Base} = Gryphon GD4600 SOFTWARE RELEASE 0.10 Nov  5 2024\r</msg>
<arg>${RevA_Version_Base}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-11-14T17:20:31.443539" elapsed="0.000000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-14T17:20:31.444539" level="INFO">RS232_STD + COM2 + CSNRM03 + Gryphon GD4600 SOFTWARE RELEASE 0.10 Nov  5 2024\r</msg>
<arg>${interface_name} + ${COMPORT} + ${reading_mode} + ${RevA_Version_Base}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-14T17:20:31.444539" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Running On ${COMPORT}: ${interface_name}: ${reading_mode}: ${RevA_Version_Base}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:20:31.444539" elapsed="0.000000"/>
</kw>
<arg>${interface_name}</arg>
<arg>${COMPORT}</arg>
<arg>${reading_mode}</arg>
<status status="PASS" start="2024-11-14T17:20:02.772380" elapsed="28.673157"/>
</kw>
<test id="s1-s4-t1" name="ATQ_CERNER_ISBT128_Concaternation" line="9">
<kw name="Read" owner="Keywords">
<kw name="Log To Console" owner="BuiltIn">
<arg>\nReading label: ${image_name}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:20:31.446534" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Read Label" owner="Commands">
<arg>${current_directory}</arg>
<arg>${image_name}</arg>
<doc>Load image to Eink and wait HH read the barcode to respond data
- For Label Programing, the system will wait for default 4s to HH can read this label
- For Label programing digit, the system will wait for default 1.2 s to HH can't read this label twice</doc>
<status status="PASS" start="2024-11-14T17:20:31.447531" elapsed="7.104068"/>
</kw>
<msg time="2024-11-14T17:20:38.551599" level="INFO">${data} = </msg>
<var>${data}</var>
<arg>Read Label</arg>
<arg>${current_directory}</arg>
<arg>${image_name}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:20:31.446534" elapsed="7.105065"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Expected-----: ${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:20:38.551599" elapsed="0.001061"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Responded----: ${data}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:20:38.552660" elapsed="0.000570"/>
</kw>
<kw name="LogImage" owner="Keywords">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-11-14T17:20:38.553230" level="INFO">${data} = C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\DataSet\$P,CI8CE01,CI8L00102,CI8L10304,CI8L20103,CI8L30113,CI8L41112,CI8L51516,CI8L61819,CI8L70207,P.jpg</msg>
<var>${data}</var>
<arg>${current_directory}\\${image_name}.jpg</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-11-14T17:20:38.553230" elapsed="0.000000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-14T17:20:38.554230" level="INFO" html="true">&lt;img src=C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\DataSet\$P,CI8CE01,CI8L00102,CI8L10304,CI8L20103,CI8L30113,CI8L41112,CI8L51516,CI8L61819,CI8L70207,P.jpg&gt;</msg>
<arg>&lt;img src=${data}&gt;</arg>
<arg>html=true</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-14T17:20:38.553230" elapsed="0.001000"/>
</kw>
<arg>${image_name}</arg>
<status status="PASS" start="2024-11-14T17:20:38.553230" elapsed="0.001000"/>
</kw>
<if>
<branch type="IF" condition="$value!=None">
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<var>${data}</var>
<arg>Compare</arg>
<arg>\nReading label: ${image_name}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="NOT RUN" start="2024-11-14T17:20:38.554230" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<arg>Should Be Equal</arg>
<arg>${data}</arg>
<arg>True</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="NOT RUN" start="2024-11-14T17:20:38.554230" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-11-14T17:20:38.554230" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-11-14T17:20:38.554230" elapsed="0.000000"/>
</if>
<return>
<value>${data}</value>
<status status="PASS" start="2024-11-14T17:20:38.554230" elapsed="0.000000"/>
</return>
<arg>$P,CI8CE01,CI8L00102,CI8L10304,CI8L20103,CI8L30113,CI8L41112,CI8L51516,CI8L61819,CI8L70207,P</arg>
<status status="PASS" start="2024-11-14T17:20:31.446534" elapsed="7.107696"/>
</kw>
<kw name="Read" owner="Keywords">
<kw name="Log To Console" owner="BuiltIn">
<arg>\nReading label: ${image_name}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:20:38.555227" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Read Label" owner="Commands">
<arg>${current_directory}</arg>
<arg>${image_name}</arg>
<doc>Load image to Eink and wait HH read the barcode to respond data
- For Label Programing, the system will wait for default 4s to HH can read this label
- For Label programing digit, the system will wait for default 1.2 s to HH can't read this label twice</doc>
<status status="PASS" start="2024-11-14T17:20:38.556225" elapsed="2.558580"/>
</kw>
<msg time="2024-11-14T17:20:41.115803" level="INFO">${data} = =K98765432112345\r=%3344\r</msg>
<var>${data}</var>
<arg>Read Label</arg>
<arg>${current_directory}</arg>
<arg>${image_name}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:20:38.555227" elapsed="2.560576"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Expected-----: ${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:20:41.116799" elapsed="0.000660"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Responded----: ${data}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:20:41.117459" elapsed="0.001007"/>
</kw>
<kw name="LogImage" owner="Keywords">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-11-14T17:20:41.122453" level="INFO">${data} = C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\DataSet\ISBT128_label1.jpg</msg>
<var>${data}</var>
<arg>${current_directory}\\${image_name}.jpg</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-11-14T17:20:41.121457" elapsed="0.001993"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-14T17:20:41.124445" level="INFO" html="true">&lt;img src=C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\DataSet\ISBT128_label1.jpg&gt;</msg>
<arg>&lt;img src=${data}&gt;</arg>
<arg>html=true</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-14T17:20:41.123450" elapsed="0.000995"/>
</kw>
<arg>${image_name}</arg>
<status status="PASS" start="2024-11-14T17:20:41.120460" elapsed="0.003985"/>
</kw>
<if>
<branch type="IF" condition="$value!=None">
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Compare" owner="Commands">
<arg>\nReading label: ${image_name}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<status status="PASS" start="2024-11-14T17:20:41.124445" elapsed="0.000000"/>
</kw>
<msg time="2024-11-14T17:20:41.124445" level="INFO">${data} = True</msg>
<var>${data}</var>
<arg>Compare</arg>
<arg>\nReading label: ${image_name}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:20:41.124445" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${data}</arg>
<arg>True</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-11-14T17:20:41.125443" elapsed="0.000000"/>
</kw>
<arg>Should Be Equal</arg>
<arg>${data}</arg>
<arg>True</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:20:41.125443" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-11-14T17:20:41.124445" elapsed="0.000998"/>
</branch>
<status status="PASS" start="2024-11-14T17:20:41.124445" elapsed="0.000998"/>
</if>
<return>
<value>${data}</value>
<status status="PASS" start="2024-11-14T17:20:41.125443" elapsed="0.000000"/>
</return>
<arg>ISBT128_label1</arg>
<arg>=K98765432112345=%3344</arg>
<status status="PASS" start="2024-11-14T17:20:38.555227" elapsed="2.570216"/>
</kw>
<kw name="Read" owner="Keywords">
<kw name="Log To Console" owner="BuiltIn">
<arg>\nReading label: ${image_name}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:20:41.145390" elapsed="0.000997"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Read Label" owner="Commands">
<arg>${current_directory}</arg>
<arg>${image_name}</arg>
<doc>Load image to Eink and wait HH read the barcode to respond data
- For Label Programing, the system will wait for default 4s to HH can read this label
- For Label programing digit, the system will wait for default 1.2 s to HH can't read this label twice</doc>
<status status="PASS" start="2024-11-14T17:20:41.146387" elapsed="1.642651"/>
</kw>
<msg time="2024-11-14T17:20:42.789038" level="INFO">${data} = =&lt;O8765Y22\r</msg>
<var>${data}</var>
<arg>Read Label</arg>
<arg>${current_directory}</arg>
<arg>${image_name}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:20:41.146387" elapsed="1.642651"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Expected-----: ${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:20:42.789038" elapsed="0.000998"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Responded----: ${data}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:20:42.790036" elapsed="0.000000"/>
</kw>
<kw name="LogImage" owner="Keywords">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-11-14T17:20:42.791056" level="INFO">${data} = C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\DataSet\ISBT128_label2.jpg</msg>
<var>${data}</var>
<arg>${current_directory}\\${image_name}.jpg</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-11-14T17:20:42.791056" elapsed="0.000000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-14T17:20:42.791056" level="INFO" html="true">&lt;img src=C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\DataSet\ISBT128_label2.jpg&gt;</msg>
<arg>&lt;img src=${data}&gt;</arg>
<arg>html=true</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-14T17:20:42.791056" elapsed="0.000972"/>
</kw>
<arg>${image_name}</arg>
<status status="PASS" start="2024-11-14T17:20:42.791056" elapsed="0.000972"/>
</kw>
<if>
<branch type="IF" condition="$value!=None">
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Compare" owner="Commands">
<arg>\nReading label: ${image_name}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<status status="PASS" start="2024-11-14T17:20:42.792028" elapsed="0.000000"/>
</kw>
<msg time="2024-11-14T17:20:42.792028" level="INFO">${data} = 
Reading label: ISBT128_label2 
Observed: =&lt;O8765Y22 
Expected: =&lt;O8765Y22=&gt;015059</msg>
<var>${data}</var>
<arg>Compare</arg>
<arg>\nReading label: ${image_name}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:20:42.792028" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Should Be Equal" owner="BuiltIn">
<msg time="2024-11-14T17:20:42.793026" level="FAIL">
Reading label: ISBT128_label2 
Observed: =&lt;O8765Y22 
Expected: =&lt;O8765Y22=&gt;015059 != True</msg>
<arg>${data}</arg>
<arg>True</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="FAIL" start="2024-11-14T17:20:42.793026" elapsed="0.000000">
Reading label: ISBT128_label2 
Observed: =&lt;O8765Y22 
Expected: =&lt;O8765Y22=&gt;015059 != True</status>
</kw>
<arg>Should Be Equal</arg>
<arg>${data}</arg>
<arg>True</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="FAIL" start="2024-11-14T17:20:42.792028" elapsed="0.000998">
Reading label: ISBT128_label2 
Observed: =&lt;O8765Y22 
Expected: =&lt;O8765Y22=&gt;015059 != True</status>
</kw>
<status status="FAIL" start="2024-11-14T17:20:42.792028" elapsed="0.000998">
Reading label: ISBT128_label2 
Observed: =&lt;O8765Y22 
Expected: =&lt;O8765Y22=&gt;015059 != True</status>
</branch>
<status status="FAIL" start="2024-11-14T17:20:42.792028" elapsed="0.000998">
Reading label: ISBT128_label2 
Observed: =&lt;O8765Y22 
Expected: =&lt;O8765Y22=&gt;015059 != True</status>
</if>
<return>
<value>${data}</value>
<status status="PASS" start="2024-11-14T17:20:42.793026" elapsed="0.000000"/>
</return>
<arg>ISBT128_label2</arg>
<arg>=&lt;O8765Y22=&gt;015059</arg>
<status status="FAIL" start="2024-11-14T17:20:41.144392" elapsed="1.648634">
Reading label: ISBT128_label2 
Observed: =&lt;O8765Y22 
Expected: =&lt;O8765Y22=&gt;015059 != True</status>
</kw>
<kw name="Read" owner="Keywords">
<kw name="Log To Console" owner="BuiltIn">
<arg>\nReading label: ${image_name}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:20:42.794023" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Read Label" owner="Commands">
<arg>${current_directory}</arg>
<arg>${image_name}</arg>
<doc>Load image to Eink and wait HH read the barcode to respond data
- For Label Programing, the system will wait for default 4s to HH can read this label
- For Label programing digit, the system will wait for default 1.2 s to HH can't read this label twice</doc>
<status status="PASS" start="2024-11-14T17:20:42.794023" elapsed="12.090885"/>
</kw>
<msg time="2024-11-14T17:20:54.884908" level="INFO">${data} = </msg>
<var>${data}</var>
<arg>Read Label</arg>
<arg>${current_directory}</arg>
<arg>${image_name}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:20:42.794023" elapsed="12.090885"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Expected-----: ${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:20:54.885911" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Responded----: ${data}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:20:54.885911" elapsed="0.000000"/>
</kw>
<kw name="LogImage" owner="Keywords">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-11-14T17:20:54.886907" level="INFO">${data} = C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\DataSet\ISBT128_label3.jpg</msg>
<var>${data}</var>
<arg>${current_directory}\\${image_name}.jpg</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-11-14T17:20:54.886907" elapsed="0.000000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-14T17:20:54.887906" level="INFO" html="true">&lt;img src=C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\DataSet\ISBT128_label3.jpg&gt;</msg>
<arg>&lt;img src=${data}&gt;</arg>
<arg>html=true</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-14T17:20:54.887906" elapsed="0.000000"/>
</kw>
<arg>${image_name}</arg>
<status status="PASS" start="2024-11-14T17:20:54.886907" elapsed="0.000999"/>
</kw>
<if>
<branch type="IF" condition="$value!=None">
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Compare" owner="Commands">
<arg>\nReading label: ${image_name}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<status status="PASS" start="2024-11-14T17:20:54.887906" elapsed="0.001025"/>
</kw>
<msg time="2024-11-14T17:20:54.888931" level="INFO">${data} = 
Reading label: ISBT128_label3 
Observed:  
Expected: =K98765432112345=&lt;O8765Y22</msg>
<var>${data}</var>
<arg>Compare</arg>
<arg>\nReading label: ${image_name}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:20:54.887906" elapsed="0.001025"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Should Be Equal" owner="BuiltIn">
<msg time="2024-11-14T17:20:54.888931" level="FAIL">
Reading label: ISBT128_label3 
Observed:  
Expected: =K98765432112345=&lt;O8765Y22 != True</msg>
<arg>${data}</arg>
<arg>True</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="FAIL" start="2024-11-14T17:20:54.888931" elapsed="0.000000">
Reading label: ISBT128_label3 
Observed:  
Expected: =K98765432112345=&lt;O8765Y22 != True</status>
</kw>
<arg>Should Be Equal</arg>
<arg>${data}</arg>
<arg>True</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="FAIL" start="2024-11-14T17:20:54.888931" elapsed="0.000000">
Reading label: ISBT128_label3 
Observed:  
Expected: =K98765432112345=&lt;O8765Y22 != True</status>
</kw>
<status status="FAIL" start="2024-11-14T17:20:54.887906" elapsed="0.002023">
Reading label: ISBT128_label3 
Observed:  
Expected: =K98765432112345=&lt;O8765Y22 != True</status>
</branch>
<status status="FAIL" start="2024-11-14T17:20:54.887906" elapsed="0.002023">
Reading label: ISBT128_label3 
Observed:  
Expected: =K98765432112345=&lt;O8765Y22 != True</status>
</if>
<return>
<value>${data}</value>
<status status="PASS" start="2024-11-14T17:20:54.889929" elapsed="0.000000"/>
</return>
<arg>ISBT128_label3</arg>
<arg>=K98765432112345=&lt;O8765Y22</arg>
<status status="FAIL" start="2024-11-14T17:20:42.794023" elapsed="12.095906">
Reading label: ISBT128_label3 
Observed:  
Expected: =K98765432112345=&lt;O8765Y22 != True</status>
</kw>
<kw name="Read" owner="Keywords">
<kw name="Log To Console" owner="BuiltIn">
<arg>\nReading label: ${image_name}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:20:54.889929" elapsed="0.000997"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Read Label" owner="Commands">
<arg>${current_directory}</arg>
<arg>${image_name}</arg>
<doc>Load image to Eink and wait HH read the barcode to respond data
- For Label Programing, the system will wait for default 4s to HH can read this label
- For Label programing digit, the system will wait for default 1.2 s to HH can't read this label twice</doc>
<status status="PASS" start="2024-11-14T17:20:54.890926" elapsed="12.101944"/>
</kw>
<msg time="2024-11-14T17:21:06.993867" level="INFO">${data} = </msg>
<var>${data}</var>
<arg>Read Label</arg>
<arg>${current_directory}</arg>
<arg>${image_name}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:20:54.890926" elapsed="12.102941"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Expected-----: ${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:21:06.994863" elapsed="0.001000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Responded----: ${data}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:21:06.995863" elapsed="0.001031"/>
</kw>
<kw name="LogImage" owner="Keywords">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-11-14T17:21:06.998851" level="INFO">${data} = C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\DataSet\ISBT128_label4.jpg</msg>
<var>${data}</var>
<arg>${current_directory}\\${image_name}.jpg</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-11-14T17:21:06.997859" elapsed="0.000992"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-14T17:21:06.998851" level="INFO" html="true">&lt;img src=C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\DataSet\ISBT128_label4.jpg&gt;</msg>
<arg>&lt;img src=${data}&gt;</arg>
<arg>html=true</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-14T17:21:06.998851" elapsed="0.000000"/>
</kw>
<arg>${image_name}</arg>
<status status="PASS" start="2024-11-14T17:21:06.997859" elapsed="0.000992"/>
</kw>
<if>
<branch type="IF" condition="$value!=None">
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Compare" owner="Commands">
<arg>\nReading label: ${image_name}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<status status="PASS" start="2024-11-14T17:21:06.998851" elapsed="0.000997"/>
</kw>
<msg time="2024-11-14T17:21:06.999848" level="INFO">${data} = 
Reading label: ISBT128_label4 
Observed:  
Expected: =K98765432112345=;A1B234567899876543212</msg>
<var>${data}</var>
<arg>Compare</arg>
<arg>\nReading label: ${image_name}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:21:06.998851" elapsed="0.000997"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Should Be Equal" owner="BuiltIn">
<msg time="2024-11-14T17:21:06.999848" level="FAIL">
Reading label: ISBT128_label4 
Observed:  
Expected: =K98765432112345=;A1B234567899876543212 != True</msg>
<arg>${data}</arg>
<arg>True</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="FAIL" start="2024-11-14T17:21:06.999848" elapsed="0.000000">
Reading label: ISBT128_label4 
Observed:  
Expected: =K98765432112345=;A1B234567899876543212 != True</status>
</kw>
<arg>Should Be Equal</arg>
<arg>${data}</arg>
<arg>True</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="FAIL" start="2024-11-14T17:21:06.999848" elapsed="0.000998">
Reading label: ISBT128_label4 
Observed:  
Expected: =K98765432112345=;A1B234567899876543212 != True</status>
</kw>
<status status="FAIL" start="2024-11-14T17:21:06.998851" elapsed="0.001995">
Reading label: ISBT128_label4 
Observed:  
Expected: =K98765432112345=;A1B234567899876543212 != True</status>
</branch>
<status status="FAIL" start="2024-11-14T17:21:06.998851" elapsed="0.001995">
Reading label: ISBT128_label4 
Observed:  
Expected: =K98765432112345=;A1B234567899876543212 != True</status>
</if>
<return>
<value>${data}</value>
<status status="PASS" start="2024-11-14T17:21:07.000846" elapsed="0.000000"/>
</return>
<arg>ISBT128_label4</arg>
<arg>=K98765432112345=;A1B234567899876543212</arg>
<status status="FAIL" start="2024-11-14T17:20:54.889929" elapsed="12.110917">
Reading label: ISBT128_label4 
Observed:  
Expected: =K98765432112345=;A1B234567899876543212 != True</status>
</kw>
<kw name="Read" owner="Keywords">
<kw name="Log To Console" owner="BuiltIn">
<arg>\nReading label: ${image_name}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:21:07.001844" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Read Label" owner="Commands">
<arg>${current_directory}</arg>
<arg>${image_name}</arg>
<doc>Load image to Eink and wait HH read the barcode to respond data
- For Label Programing, the system will wait for default 4s to HH can read this label
- For Label programing digit, the system will wait for default 1.2 s to HH can't read this label twice</doc>
<status status="PASS" start="2024-11-14T17:21:07.001844" elapsed="12.095595"/>
</kw>
<msg time="2024-11-14T17:21:19.097439" level="INFO">${data} = </msg>
<var>${data}</var>
<arg>Read Label</arg>
<arg>${current_directory}</arg>
<arg>${image_name}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:21:07.001844" elapsed="12.096594"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Expected-----: ${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:21:19.098438" elapsed="0.001030"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Responded----: ${data}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:21:19.100429" elapsed="0.001000"/>
</kw>
<kw name="LogImage" owner="Keywords">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-11-14T17:21:19.103421" level="INFO">${data} = C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\DataSet\ISBT128_label5.jpg</msg>
<var>${data}</var>
<arg>${current_directory}\\${image_name}.jpg</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-11-14T17:21:19.103421" elapsed="0.000000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-14T17:21:19.104416" level="INFO" html="true">&lt;img src=C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\DataSet\ISBT128_label5.jpg&gt;</msg>
<arg>&lt;img src=${data}&gt;</arg>
<arg>html=true</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-14T17:21:19.103421" elapsed="0.000995"/>
</kw>
<arg>${image_name}</arg>
<status status="PASS" start="2024-11-14T17:21:19.102462" elapsed="0.001954"/>
</kw>
<if>
<branch type="IF" condition="$value!=None">
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Compare" owner="Commands">
<arg>\nReading label: ${image_name}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<status status="PASS" start="2024-11-14T17:21:19.104416" elapsed="0.000000"/>
</kw>
<msg time="2024-11-14T17:21:19.104416" level="INFO">${data} = 
Reading label: ISBT128_label5 
Observed:  
Expected: =)A1B2C3D4E5&amp;)A1B2C3D4E5</msg>
<var>${data}</var>
<arg>Compare</arg>
<arg>\nReading label: ${image_name}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:21:19.104416" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Should Be Equal" owner="BuiltIn">
<msg time="2024-11-14T17:21:19.105413" level="FAIL">
Reading label: ISBT128_label5 
Observed:  
Expected: =)A1B2C3D4E5&amp;)A1B2C3D4E5 != True</msg>
<arg>${data}</arg>
<arg>True</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="FAIL" start="2024-11-14T17:21:19.105413" elapsed="0.000000">
Reading label: ISBT128_label5 
Observed:  
Expected: =)A1B2C3D4E5&amp;)A1B2C3D4E5 != True</status>
</kw>
<arg>Should Be Equal</arg>
<arg>${data}</arg>
<arg>True</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="FAIL" start="2024-11-14T17:21:19.105413" elapsed="0.000000">
Reading label: ISBT128_label5 
Observed:  
Expected: =)A1B2C3D4E5&amp;)A1B2C3D4E5 != True</status>
</kw>
<status status="FAIL" start="2024-11-14T17:21:19.104416" elapsed="0.000997">
Reading label: ISBT128_label5 
Observed:  
Expected: =)A1B2C3D4E5&amp;)A1B2C3D4E5 != True</status>
</branch>
<status status="FAIL" start="2024-11-14T17:21:19.104416" elapsed="0.000997">
Reading label: ISBT128_label5 
Observed:  
Expected: =)A1B2C3D4E5&amp;)A1B2C3D4E5 != True</status>
</if>
<return>
<value>${data}</value>
<status status="PASS" start="2024-11-14T17:21:19.105413" elapsed="0.000000"/>
</return>
<arg>ISBT128_label5</arg>
<arg>=)A1B2C3D4E5&amp;)A1B2C3D4E5</arg>
<status status="FAIL" start="2024-11-14T17:21:07.000846" elapsed="12.104567">
Reading label: ISBT128_label5 
Observed:  
Expected: =)A1B2C3D4E5&amp;)A1B2C3D4E5 != True</status>
</kw>
<kw name="Read" owner="Keywords">
<kw name="Log To Console" owner="BuiltIn">
<arg>\nReading label: ${image_name}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:21:19.106410" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Read Label" owner="Commands">
<arg>${current_directory}</arg>
<arg>${image_name}</arg>
<doc>Load image to Eink and wait HH read the barcode to respond data
- For Label Programing, the system will wait for default 4s to HH can read this label
- For Label programing digit, the system will wait for default 1.2 s to HH can't read this label twice</doc>
<status status="PASS" start="2024-11-14T17:21:19.107408" elapsed="12.089349"/>
</kw>
<msg time="2024-11-14T17:21:31.197472" level="INFO">${data} = </msg>
<var>${data}</var>
<arg>Read Label</arg>
<arg>${current_directory}</arg>
<arg>${image_name}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:21:19.107408" elapsed="12.090064"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Expected-----: ${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:21:31.197472" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Responded----: ${data}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:21:31.197472" elapsed="0.001146"/>
</kw>
<kw name="LogImage" owner="Keywords">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-11-14T17:21:31.198618" level="INFO">${data} = C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\DataSet\ISBT128_label6.jpg</msg>
<var>${data}</var>
<arg>${current_directory}\\${image_name}.jpg</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-11-14T17:21:31.198618" elapsed="0.000000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-14T17:21:31.199618" level="INFO" html="true">&lt;img src=C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\DataSet\ISBT128_label6.jpg&gt;</msg>
<arg>&lt;img src=${data}&gt;</arg>
<arg>html=true</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-14T17:21:31.199618" elapsed="0.000000"/>
</kw>
<arg>${image_name}</arg>
<status status="PASS" start="2024-11-14T17:21:31.198618" elapsed="0.001000"/>
</kw>
<if>
<branch type="IF" condition="$value!=None">
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Compare" owner="Commands">
<arg>\nReading label: ${image_name}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<status status="PASS" start="2024-11-14T17:21:31.199618" elapsed="0.000997"/>
</kw>
<msg time="2024-11-14T17:21:31.200615" level="INFO">${data} = 
Reading label: ISBT128_label6 
Observed:  
Expected: =-A1B2C3D4E5&amp;-A1B2C3D4E5</msg>
<var>${data}</var>
<arg>Compare</arg>
<arg>\nReading label: ${image_name}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:21:31.199618" elapsed="0.000997"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Should Be Equal" owner="BuiltIn">
<msg time="2024-11-14T17:21:31.200615" level="FAIL">
Reading label: ISBT128_label6 
Observed:  
Expected: =-A1B2C3D4E5&amp;-A1B2C3D4E5 != True</msg>
<arg>${data}</arg>
<arg>True</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="FAIL" start="2024-11-14T17:21:31.200615" elapsed="0.000000">
Reading label: ISBT128_label6 
Observed:  
Expected: =-A1B2C3D4E5&amp;-A1B2C3D4E5 != True</status>
</kw>
<arg>Should Be Equal</arg>
<arg>${data}</arg>
<arg>True</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="FAIL" start="2024-11-14T17:21:31.200615" elapsed="0.000000">
Reading label: ISBT128_label6 
Observed:  
Expected: =-A1B2C3D4E5&amp;-A1B2C3D4E5 != True</status>
</kw>
<status status="FAIL" start="2024-11-14T17:21:31.199618" elapsed="0.000997">
Reading label: ISBT128_label6 
Observed:  
Expected: =-A1B2C3D4E5&amp;-A1B2C3D4E5 != True</status>
</branch>
<status status="FAIL" start="2024-11-14T17:21:31.199618" elapsed="0.000997">
Reading label: ISBT128_label6 
Observed:  
Expected: =-A1B2C3D4E5&amp;-A1B2C3D4E5 != True</status>
</if>
<return>
<value>${data}</value>
<status status="PASS" start="2024-11-14T17:21:31.201612" elapsed="0.000000"/>
</return>
<arg>ISBT128_label6</arg>
<arg>=-A1B2C3D4E5&amp;-A1B2C3D4E5</arg>
<status status="FAIL" start="2024-11-14T17:21:19.106410" elapsed="12.095202">
Reading label: ISBT128_label6 
Observed:  
Expected: =-A1B2C3D4E5&amp;-A1B2C3D4E5 != True</status>
</kw>
<kw name="Read" owner="Keywords">
<kw name="Log To Console" owner="BuiltIn">
<arg>\nReading label: ${image_name}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:21:31.201612" elapsed="0.000998"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Read Label" owner="Commands">
<arg>${current_directory}</arg>
<arg>${image_name}</arg>
<doc>Load image to Eink and wait HH read the barcode to respond data
- For Label Programing, the system will wait for default 4s to HH can read this label
- For Label programing digit, the system will wait for default 1.2 s to HH can't read this label twice</doc>
<status status="PASS" start="2024-11-14T17:21:31.202610" elapsed="2.329775"/>
</kw>
<msg time="2024-11-14T17:21:33.532385" level="INFO">${data} = =#0019860721\r</msg>
<var>${data}</var>
<arg>Read Label</arg>
<arg>${current_directory}</arg>
<arg>${image_name}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:21:31.202610" elapsed="2.329775"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Expected-----: ${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:21:33.532385" elapsed="0.001001"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Responded----: ${data}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:21:33.533386" elapsed="0.000000"/>
</kw>
<kw name="LogImage" owner="Keywords">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-11-14T17:21:33.534383" level="INFO">${data} = C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\DataSet\ISBT128_label7.jpg</msg>
<var>${data}</var>
<arg>${current_directory}\\${image_name}.jpg</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-11-14T17:21:33.534383" elapsed="0.000000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-14T17:21:33.534383" level="INFO" html="true">&lt;img src=C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\DataSet\ISBT128_label7.jpg&gt;</msg>
<arg>&lt;img src=${data}&gt;</arg>
<arg>html=true</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-14T17:21:33.534383" elapsed="0.000000"/>
</kw>
<arg>${image_name}</arg>
<status status="PASS" start="2024-11-14T17:21:33.533386" elapsed="0.000997"/>
</kw>
<if>
<branch type="IF" condition="$value!=None">
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Compare" owner="Commands">
<arg>\nReading label: ${image_name}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<status status="PASS" start="2024-11-14T17:21:33.535379" elapsed="0.000000"/>
</kw>
<msg time="2024-11-14T17:21:33.535379" level="INFO">${data} = 
Reading label: ISBT128_label7 
Observed: =#0019860721 
Expected: =#0019860721&amp;#0004A1B2</msg>
<var>${data}</var>
<arg>Compare</arg>
<arg>\nReading label: ${image_name}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:21:33.535379" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Should Be Equal" owner="BuiltIn">
<msg time="2024-11-14T17:21:33.536377" level="FAIL">
Reading label: ISBT128_label7 
Observed: =#0019860721 
Expected: =#0019860721&amp;#0004A1B2 != True</msg>
<arg>${data}</arg>
<arg>True</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="FAIL" start="2024-11-14T17:21:33.535379" elapsed="0.000998">
Reading label: ISBT128_label7 
Observed: =#0019860721 
Expected: =#0019860721&amp;#0004A1B2 != True</status>
</kw>
<arg>Should Be Equal</arg>
<arg>${data}</arg>
<arg>True</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="FAIL" start="2024-11-14T17:21:33.535379" elapsed="0.000998">
Reading label: ISBT128_label7 
Observed: =#0019860721 
Expected: =#0019860721&amp;#0004A1B2 != True</status>
</kw>
<status status="FAIL" start="2024-11-14T17:21:33.534383" elapsed="0.001994">
Reading label: ISBT128_label7 
Observed: =#0019860721 
Expected: =#0019860721&amp;#0004A1B2 != True</status>
</branch>
<status status="FAIL" start="2024-11-14T17:21:33.534383" elapsed="0.001994">
Reading label: ISBT128_label7 
Observed: =#0019860721 
Expected: =#0019860721&amp;#0004A1B2 != True</status>
</if>
<return>
<value>${data}</value>
<status status="PASS" start="2024-11-14T17:21:33.536377" elapsed="0.000000"/>
</return>
<arg>ISBT128_label7</arg>
<arg>=#0019860721&amp;#0004A1B2</arg>
<status status="FAIL" start="2024-11-14T17:21:31.201612" elapsed="2.334765">
Reading label: ISBT128_label7 
Observed: =#0019860721 
Expected: =#0019860721&amp;#0004A1B2 != True</status>
</kw>
<doc>Verify if scanner can read all ISBT-128 test labels sent from CERNER with special setting for them.
Requirement from CERNER: Barcode scanners must have the ability to substitute or add data within the data stream.
Example: Prescription Drug Labels: The scanned barcode reads data as a GS1-128 symbology formatted with a GTIN 12
data structure containing the National Drug Code (NDC), expiration date and lot information</doc>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:20:31.445537" elapsed="62.090840">Several failures occurred:

1) 
Reading label: ISBT128_label2 
Observed: =&lt;O8765Y22 
Expected: =&lt;O8765Y22=&gt;015059 != True

2) 
Reading label: ISBT128_label3 
Observed:  
Expected: =K98765432112345=&lt;O8765Y22 != True

3) 
Reading label: ISBT128_label4 
Observed:  
Expected: =K98765432112345=;A1B234567899876543212 != True

4) 
Reading label: ISBT128_label5 
Observed:  
Expected: =)A1B2C3D4E5&amp;)A1B2C3D4E5 != True

5) 
Reading label: ISBT128_label6 
Observed:  
Expected: =-A1B2C3D4E5&amp;-A1B2C3D4E5 != True

6) 
Reading label: ISBT128_label7 
Observed: =#0019860721 
Expected: =#0019860721&amp;#0004A1B2 != True</status>
</test>
<status status="FAIL" start="2024-11-14T17:20:02.767391" elapsed="90.769983"/>
</suite>
<suite id="s1-s5" name="ATQ CERNER PrefixSuffix" source="C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\ATQ_CERNER_PrefixSuffix.robot">
<kw name="Open Com port and set Interface" owner="Keywords" type="SETUP">
<kw name="Set Interface Name" owner="Commands">
<arg>${interface_name}</arg>
<status status="PASS" start="2024-11-14T17:21:33.543358" elapsed="0.000998"/>
</kw>
<kw name="Connect With COM port" owner="Keywords">
<kw name="Open Com Port" owner="Commands">
<msg time="2024-11-14T17:21:33.581630" level="INFO">${data} = OK</msg>
<var>${data}</var>
<arg>${COMPORT}</arg>
<status status="PASS" start="2024-11-14T17:21:33.544356" elapsed="0.037274"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Open Com Port ${COMPORT}: ${data}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:21:33.581630" elapsed="0.000000"/>
</kw>
<arg>${COMPORT}</arg>
<status status="PASS" start="2024-11-14T17:21:33.544356" elapsed="0.037274"/>
</kw>
<kw name="Set Interface For HH" owner="Keywords">
<kw name="Set Interface" owner="Commands">
<msg time="2024-11-14T17:21:47.621534" level="INFO">${data} = $S,AE,HA05,CSNRM03,Ar:$&gt;,&gt;,&gt;,&gt;,&gt;\r</msg>
<var>${data}</var>
<arg>${interface_name}</arg>
<arg>${reading_mode}</arg>
<status status="PASS" start="2024-11-14T17:21:33.582627" elapsed="14.038907"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Set Interface ${interface_name} For HH successful: ${data}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:21:47.622537" elapsed="0.000000"/>
</kw>
<arg>${interface_name}</arg>
<arg>${reading_mode}</arg>
<status status="PASS" start="2024-11-14T17:21:33.581630" elapsed="14.040907"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-11-14T17:21:47.622537" level="INFO">${init_interface_name} = RS232_STD</msg>
<var>${init_interface_name}</var>
<arg>${interface_name}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-11-14T17:21:47.622537" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-11-14T17:21:47.623533" level="INFO">${init_interface_name} = RS232_STD</msg>
<arg>${init_interface_name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-11-14T17:21:47.623533" elapsed="0.000000"/>
</kw>
<kw name="SetSoftTrigger" owner="Keywords">
<kw name="Set Trigger" owner="Commands">
<arg>${on_off}</arg>
<status status="PASS" start="2024-11-14T17:21:47.623533" elapsed="0.000000"/>
</kw>
<arg>${soft_trigger}</arg>
<doc>Set Soft trigger to On/Off</doc>
<status status="PASS" start="2024-11-14T17:21:47.623533" elapsed="0.000997"/>
</kw>
<kw name="Read" owner="Keywords">
<kw name="Log To Console" owner="BuiltIn">
<arg>\nReading label: ${image_name}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:21:47.624530" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Read Label" owner="Commands">
<arg>${current_directory}</arg>
<arg>${image_name}</arg>
<doc>Load image to Eink and wait HH read the barcode to respond data
- For Label Programing, the system will wait for default 4s to HH can read this label
- For Label programing digit, the system will wait for default 1.2 s to HH can't read this label twice</doc>
<status status="PASS" start="2024-11-14T17:21:47.625527" elapsed="14.170396"/>
</kw>
<msg time="2024-11-14T17:22:01.795923" level="INFO">${data} = </msg>
<var>${data}</var>
<arg>Read Label</arg>
<arg>${current_directory}</arg>
<arg>${image_name}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:21:47.624530" elapsed="14.171393"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Expected-----: ${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:22:01.795923" elapsed="0.001002"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Responded----: ${data}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:22:01.796925" elapsed="0.000000"/>
</kw>
<kw name="LogImage" owner="Keywords">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-11-14T17:22:01.797951" level="INFO">${data} = C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\DataSet\$P,AE,Interface,CSNRM03,P.jpg</msg>
<var>${data}</var>
<arg>${current_directory}\\${image_name}.jpg</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-11-14T17:22:01.797951" elapsed="0.000000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-14T17:22:01.797951" level="INFO" html="true">&lt;img src=C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\DataSet\$P,AE,Interface,CSNRM03,P.jpg&gt;</msg>
<arg>&lt;img src=${data}&gt;</arg>
<arg>html=true</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-14T17:22:01.797951" elapsed="0.000000"/>
</kw>
<arg>${image_name}</arg>
<status status="PASS" start="2024-11-14T17:22:01.796925" elapsed="0.001026"/>
</kw>
<if>
<branch type="IF" condition="$value!=None">
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<var>${data}</var>
<arg>Compare</arg>
<arg>\nReading label: ${image_name}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="NOT RUN" start="2024-11-14T17:22:01.798947" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<arg>Should Be Equal</arg>
<arg>${data}</arg>
<arg>True</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="NOT RUN" start="2024-11-14T17:22:01.798947" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-11-14T17:22:01.797951" elapsed="0.000996"/>
</branch>
<status status="PASS" start="2024-11-14T17:22:01.797951" elapsed="0.000996"/>
</if>
<return>
<value>${data}</value>
<status status="PASS" start="2024-11-14T17:22:01.798947" elapsed="0.000000"/>
</return>
<arg>$P,AE,Interface,${reading_mode},P</arg>
<status status="PASS" start="2024-11-14T17:21:47.624530" elapsed="14.174417"/>
</kw>
<kw name="Send Command" owner="Commands">
<msg time="2024-11-14T17:22:02.225672" level="INFO">${RevA_Version_Base} = Gryphon GD4600 SOFTWARE RELEASE 0.10 Nov  5 2024\r</msg>
<var>${RevA_Version_Base}</var>
<arg>$!</arg>
<status status="PASS" start="2024-11-14T17:22:01.798947" elapsed="0.426725"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-11-14T17:22:02.225672" level="INFO">${RevA_Version_Base} = Gryphon GD4600 SOFTWARE RELEASE 0.10 Nov  5 2024\r</msg>
<arg>${RevA_Version_Base}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-11-14T17:22:02.225672" elapsed="0.000000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-14T17:22:02.226669" level="INFO">RS232_STD + COM2 + CSNRM03 + Gryphon GD4600 SOFTWARE RELEASE 0.10 Nov  5 2024\r</msg>
<arg>${interface_name} + ${COMPORT} + ${reading_mode} + ${RevA_Version_Base}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-14T17:22:02.225672" elapsed="0.000997"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Running On ${COMPORT}: ${interface_name}: ${reading_mode}: ${RevA_Version_Base}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:22:02.226669" elapsed="0.000000"/>
</kw>
<arg>${interface_name}</arg>
<arg>${COMPORT}</arg>
<arg>${reading_mode}</arg>
<status status="PASS" start="2024-11-14T17:21:33.543358" elapsed="28.683311"/>
</kw>
<test id="s1-s5-t1" name="ATQ_AddOn_Timer_SNRM00" line="9">
<doc>Verify that the HH doesn’t read twice (with and without AddOn) when reading a Add On label</doc>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:22:02.226669" elapsed="0.000998">Test cannot be empty.</status>
</test>
<status status="FAIL" start="2024-11-14T17:21:33.538371" elapsed="28.689296"/>
</suite>
<suite id="s1-s6" name="ATQ Codabar ShortMargin" source="C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\ATQ_Codabar_ShortMargin.robot">
<kw name="Open Com port and set Interface" owner="Keywords" type="SETUP">
<kw name="Set Interface Name" owner="Commands">
<arg>${interface_name}</arg>
<status status="PASS" start="2024-11-14T17:22:02.233661" elapsed="0.001029"/>
</kw>
<kw name="Connect With COM port" owner="Keywords">
<kw name="Open Com Port" owner="Commands">
<msg time="2024-11-14T17:22:02.258511" level="INFO">${data} = OK</msg>
<var>${data}</var>
<arg>${COMPORT}</arg>
<status status="PASS" start="2024-11-14T17:22:02.234690" elapsed="0.023821"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Open Com Port ${COMPORT}: ${data}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:22:02.258511" elapsed="0.001027"/>
</kw>
<arg>${COMPORT}</arg>
<status status="PASS" start="2024-11-14T17:22:02.234690" elapsed="0.024848"/>
</kw>
<kw name="Set Interface For HH" owner="Keywords">
<kw name="Set Interface" owner="Commands">
<msg time="2024-11-14T17:22:16.288692" level="INFO">${data} = $S,AE,HA05,CSNRM03,Ar:$&gt;,&gt;,&gt;,&gt;,&gt;\r</msg>
<var>${data}</var>
<arg>${interface_name}</arg>
<arg>${reading_mode}</arg>
<status status="PASS" start="2024-11-14T17:22:02.259538" elapsed="14.029154"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Set Interface ${interface_name} For HH successful: ${data}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:22:16.289694" elapsed="0.000000"/>
</kw>
<arg>${interface_name}</arg>
<arg>${reading_mode}</arg>
<status status="PASS" start="2024-11-14T17:22:02.259538" elapsed="14.030156"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-11-14T17:22:16.290690" level="INFO">${init_interface_name} = RS232_STD</msg>
<var>${init_interface_name}</var>
<arg>${interface_name}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-11-14T17:22:16.289694" elapsed="0.000996"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-11-14T17:22:16.290690" level="INFO">${init_interface_name} = RS232_STD</msg>
<arg>${init_interface_name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-11-14T17:22:16.290690" elapsed="0.000000"/>
</kw>
<kw name="SetSoftTrigger" owner="Keywords">
<kw name="Set Trigger" owner="Commands">
<arg>${on_off}</arg>
<status status="PASS" start="2024-11-14T17:22:16.291688" elapsed="0.000000"/>
</kw>
<arg>${soft_trigger}</arg>
<doc>Set Soft trigger to On/Off</doc>
<status status="PASS" start="2024-11-14T17:22:16.291688" elapsed="0.000000"/>
</kw>
<kw name="Read" owner="Keywords">
<kw name="Log To Console" owner="BuiltIn">
<arg>\nReading label: ${image_name}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:22:16.292684" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Read Label" owner="Commands">
<arg>${current_directory}</arg>
<arg>${image_name}</arg>
<doc>Load image to Eink and wait HH read the barcode to respond data
- For Label Programing, the system will wait for default 4s to HH can read this label
- For Label programing digit, the system will wait for default 1.2 s to HH can't read this label twice</doc>
<status status="PASS" start="2024-11-14T17:22:16.292684" elapsed="14.168755"/>
</kw>
<msg time="2024-11-14T17:22:30.461439" level="INFO">${data} = </msg>
<var>${data}</var>
<arg>Read Label</arg>
<arg>${current_directory}</arg>
<arg>${image_name}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:22:16.292684" elapsed="14.168755"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Expected-----: ${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:22:30.461439" elapsed="0.000975"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Responded----: ${data}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:22:30.462414" elapsed="0.000000"/>
</kw>
<kw name="LogImage" owner="Keywords">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-11-14T17:22:30.463415" level="INFO">${data} = C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\DataSet\$P,AE,Interface,CSNRM03,P.jpg</msg>
<var>${data}</var>
<arg>${current_directory}\\${image_name}.jpg</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-11-14T17:22:30.463415" elapsed="0.000000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-14T17:22:30.463415" level="INFO" html="true">&lt;img src=C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\DataSet\$P,AE,Interface,CSNRM03,P.jpg&gt;</msg>
<arg>&lt;img src=${data}&gt;</arg>
<arg>html=true</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-14T17:22:30.463415" elapsed="0.000000"/>
</kw>
<arg>${image_name}</arg>
<status status="PASS" start="2024-11-14T17:22:30.462414" elapsed="0.001001"/>
</kw>
<if>
<branch type="IF" condition="$value!=None">
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<var>${data}</var>
<arg>Compare</arg>
<arg>\nReading label: ${image_name}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="NOT RUN" start="2024-11-14T17:22:30.464413" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<arg>Should Be Equal</arg>
<arg>${data}</arg>
<arg>True</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="NOT RUN" start="2024-11-14T17:22:30.464413" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-11-14T17:22:30.463415" elapsed="0.000998"/>
</branch>
<status status="PASS" start="2024-11-14T17:22:30.463415" elapsed="0.000998"/>
</if>
<return>
<value>${data}</value>
<status status="PASS" start="2024-11-14T17:22:30.464413" elapsed="0.000000"/>
</return>
<arg>$P,AE,Interface,${reading_mode},P</arg>
<status status="PASS" start="2024-11-14T17:22:16.291688" elapsed="14.172725"/>
</kw>
<kw name="Send Command" owner="Commands">
<msg time="2024-11-14T17:22:30.866675" level="INFO">${RevA_Version_Base} = Gryphon GD4600 SOFTWARE RELEASE 0.10 Nov  5 2024\r</msg>
<var>${RevA_Version_Base}</var>
<arg>$!</arg>
<status status="PASS" start="2024-11-14T17:22:30.464413" elapsed="0.402262"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-11-14T17:22:30.867472" level="INFO">${RevA_Version_Base} = Gryphon GD4600 SOFTWARE RELEASE 0.10 Nov  5 2024\r</msg>
<arg>${RevA_Version_Base}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-11-14T17:22:30.866675" elapsed="0.000797"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-14T17:22:30.867472" level="INFO">RS232_STD + COM2 + CSNRM03 + Gryphon GD4600 SOFTWARE RELEASE 0.10 Nov  5 2024\r</msg>
<arg>${interface_name} + ${COMPORT} + ${reading_mode} + ${RevA_Version_Base}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-14T17:22:30.867472" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Running On ${COMPORT}: ${interface_name}: ${reading_mode}: ${RevA_Version_Base}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:22:30.868436" elapsed="0.000407"/>
</kw>
<arg>${interface_name}</arg>
<arg>${COMPORT}</arg>
<arg>${reading_mode}</arg>
<status status="PASS" start="2024-11-14T17:22:02.233661" elapsed="28.635182"/>
</kw>
<test id="s1-s6-t1" name="ATQ_Codabar_ShortMargin_CBLO01" line="9">
<kw name="Send" owner="Keywords">
<kw name="Log To Console" owner="BuiltIn">
<arg>\nSending Command: ${command}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:22:30.869844" elapsed="0.000000"/>
</kw>
<kw name="Send Command" owner="Commands">
<msg time="2024-11-14T17:22:44.905372" level="INFO">${data} = $&gt;,&gt;,&gt;,&gt;\r</msg>
<var>${data}</var>
<arg>${command}</arg>
<status status="PASS" start="2024-11-14T17:22:30.869844" elapsed="14.035528"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Expected-------: ${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:22:44.905372" elapsed="0.001743"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Responded------: ${data}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:22:44.907115" elapsed="0.000981"/>
</kw>
<if>
<branch type="IF" condition="$value!=None">
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Compare" owner="Commands">
<arg>\nSending Command: ${command}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<status status="PASS" start="2024-11-14T17:22:44.908096" elapsed="0.000000"/>
</kw>
<msg time="2024-11-14T17:22:44.908096" level="INFO">${data} = True</msg>
<var>${data}</var>
<arg>Compare</arg>
<arg>\nSending Command: ${command}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:22:44.908096" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${data}</arg>
<arg>True</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-11-14T17:22:44.909080" elapsed="0.000000"/>
</kw>
<arg>Should Be Equal</arg>
<arg>${data}</arg>
<arg>True</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:22:44.909080" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-11-14T17:22:44.908096" elapsed="0.000984"/>
</branch>
<status status="PASS" start="2024-11-14T17:22:44.908096" elapsed="0.000984"/>
</if>
<return>
<value>${data}</value>
<status status="PASS" start="2024-11-14T17:22:44.909080" elapsed="0.000000"/>
</return>
<arg>$S,CCBEN01,CCBLO01,Ar</arg>
<arg>$&gt;,&gt;,&gt;,&gt;</arg>
<status status="PASS" start="2024-11-14T17:22:30.868843" elapsed="14.040237"/>
</kw>
<kw name="Read" owner="Keywords">
<kw name="Log To Console" owner="BuiltIn">
<arg>\nReading label: ${image_name}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:22:44.909896" elapsed="0.000713"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Read Label" owner="Commands">
<arg>${current_directory}</arg>
<arg>${image_name}</arg>
<doc>Load image to Eink and wait HH read the barcode to respond data
- For Label Programing, the system will wait for default 4s to HH can read this label
- For Label programing digit, the system will wait for default 1.2 s to HH can't read this label twice</doc>
<status status="PASS" start="2024-11-14T17:22:44.910609" elapsed="11.768617"/>
</kw>
<msg time="2024-11-14T17:22:56.679226" level="INFO">${data} = </msg>
<var>${data}</var>
<arg>Read Label</arg>
<arg>${current_directory}</arg>
<arg>${image_name}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:22:44.910609" elapsed="11.768617"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Expected-----: ${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:22:56.680254" elapsed="0.000965"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Responded----: ${data}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:22:56.681219" elapsed="0.001001"/>
</kw>
<kw name="LogImage" owner="Keywords">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-11-14T17:22:56.685212" level="INFO">${data} = C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\DataSet\Codabarwithnoquietzone_1a.jpg</msg>
<var>${data}</var>
<arg>${current_directory}\\${image_name}.jpg</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-11-14T17:22:56.684217" elapsed="0.000995"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-14T17:22:56.686233" level="INFO" html="true">&lt;img src=C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\DataSet\Codabarwithnoquietzone_1a.jpg&gt;</msg>
<arg>&lt;img src=${data}&gt;</arg>
<arg>html=true</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-14T17:22:56.685212" elapsed="0.001021"/>
</kw>
<arg>${image_name}</arg>
<status status="PASS" start="2024-11-14T17:22:56.683214" elapsed="0.003019"/>
</kw>
<if>
<branch type="IF" condition="$value!=None">
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Compare" owner="Commands">
<arg>\nReading label: ${image_name}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<status status="PASS" start="2024-11-14T17:22:56.686233" elapsed="0.000969"/>
</kw>
<msg time="2024-11-14T17:22:56.687202" level="INFO">${data} = 
Reading label: Codabarwithnoquietzone_1a 
Observed:  
Expected: a378591b</msg>
<var>${data}</var>
<arg>Compare</arg>
<arg>\nReading label: ${image_name}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:22:56.686233" elapsed="0.000969"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Should Be Equal" owner="BuiltIn">
<msg time="2024-11-14T17:22:56.687202" level="FAIL">
Reading label: Codabarwithnoquietzone_1a 
Observed:  
Expected: a378591b != True</msg>
<arg>${data}</arg>
<arg>True</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="FAIL" start="2024-11-14T17:22:56.687202" elapsed="0.000000">
Reading label: Codabarwithnoquietzone_1a 
Observed:  
Expected: a378591b != True</status>
</kw>
<arg>Should Be Equal</arg>
<arg>${data}</arg>
<arg>True</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="FAIL" start="2024-11-14T17:22:56.687202" elapsed="0.000000">
Reading label: Codabarwithnoquietzone_1a 
Observed:  
Expected: a378591b != True</status>
</kw>
<status status="FAIL" start="2024-11-14T17:22:56.686233" elapsed="0.000969">
Reading label: Codabarwithnoquietzone_1a 
Observed:  
Expected: a378591b != True</status>
</branch>
<status status="FAIL" start="2024-11-14T17:22:56.686233" elapsed="0.000969">
Reading label: Codabarwithnoquietzone_1a 
Observed:  
Expected: a378591b != True</status>
</if>
<return>
<value>${data}</value>
<status status="PASS" start="2024-11-14T17:22:56.688199" elapsed="0.000000"/>
</return>
<arg>Codabarwithnoquietzone_1a</arg>
<arg>a378591b</arg>
<status status="FAIL" start="2024-11-14T17:22:44.909896" elapsed="11.778303">
Reading label: Codabarwithnoquietzone_1a 
Observed:  
Expected: a378591b != True</status>
</kw>
<kw name="Read" owner="Keywords">
<kw name="Log To Console" owner="BuiltIn">
<arg>\nReading label: ${image_name}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-14T17:22:56.688508" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Read Label" owner="Commands">
<arg>${current_directory}</arg>
<arg>${image_name}</arg>
<doc>Load image to Eink and wait HH read the barcode to respond data
- For Label Programing, the system will wait for default 4s to HH can read this label
- For Label programing digit, the system will wait for default 1.2 s to HH can't read this label twice</doc>
<status status="PASS" start="2024-11-14T17:22:56.689536" elapsed="8.685518"/>
</kw>
<msg time="2024-11-14T17:23:05.375054" level="INFO">${data} = Keywords.py: read_label:, ExecutionFailed('Execution terminated by signal')</msg>
<var>${data}</var>
<arg>Read Label</arg>
<arg>${current_directory}</arg>
<arg>${image_name}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2024-11-14T17:22:56.688508" elapsed="8.686546"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Expected-----: ${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="FAIL" start="2024-11-14T17:23:05.375054" elapsed="0.001023">Execution terminated by signal</status>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Responded----: ${data}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-11-14T17:23:05.376077" elapsed="0.000000"/>
</kw>
<kw name="LogImage" owner="Keywords">
<arg>${image_name}</arg>
<status status="NOT RUN" start="2024-11-14T17:23:05.376077" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="$value!=None">
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<var>${data}</var>
<arg>Compare</arg>
<arg>\nReading label: ${image_name}</arg>
<arg>${data}</arg>
<arg>${value}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="NOT RUN" start="2024-11-14T17:23:05.376077" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<arg>Should Be Equal</arg>
<arg>${data}</arg>
<arg>True</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="NOT RUN" start="2024-11-14T17:23:05.376077" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-11-14T17:23:05.376077" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-11-14T17:23:05.376077" elapsed="0.000000"/>
</if>
<return>
<value>${data}</value>
<status status="NOT RUN" start="2024-11-14T17:23:05.376077" elapsed="0.000000"/>
</return>
<arg>Codabarwithnormalquietzone_10x_atfirstside_2a</arg>
<arg>a378591b</arg>
<status status="FAIL" start="2024-11-14T17:22:56.688508" elapsed="8.687569">Execution terminated by signal</status>
</kw>
<kw name="Read" owner="Keywords">
<arg>Codabarwithnormalquietzone_10x_atlastside_2b</arg>
<arg>a378591b</arg>
<status status="NOT RUN" start="2024-11-14T17:23:05.377073" elapsed="0.000000"/>
</kw>
<kw name="Read" owner="Keywords">
<arg>Codabarwithnormalquietzone_10x_atbothsides_2c</arg>
<arg>a378591b</arg>
<status status="NOT RUN" start="2024-11-14T17:23:05.377073" elapsed="0.000000"/>
</kw>
<kw name="Read" owner="Keywords">
<arg>Codabarwithshortquietzone_3x_atfirstside_3a</arg>
<arg>a378591b</arg>
<status status="NOT RUN" start="2024-11-14T17:23:05.378046" elapsed="0.000000"/>
</kw>
<kw name="Read" owner="Keywords">
<arg>Codabarwithshortquietzone_3x_atlastside_3b</arg>
<arg>a378591b</arg>
<status status="NOT RUN" start="2024-11-14T17:23:05.378917" elapsed="0.000000"/>
</kw>
<kw name="Read" owner="Keywords">
<arg>Codabarwithshortquietzone_3x_atbothsides_3c</arg>
<arg>a378591b</arg>
<status status="NOT RUN" start="2024-11-14T17:23:05.378917" elapsed="0.000000"/>
</kw>
<kw name="Read" owner="Keywords">
<arg>Codabarwithveryshortquietzone_1x_atfirstside_4a</arg>
<arg>a378591b</arg>
<status status="NOT RUN" start="2024-11-14T17:23:05.379812" elapsed="0.000000"/>
</kw>
<kw name="Read" owner="Keywords">
<arg>Codabarwithveryshortquietzone_1x_atlastside_4b</arg>
<arg>a378591b</arg>
<status status="NOT RUN" start="2024-11-14T17:23:05.380423" elapsed="0.000000"/>
</kw>
<kw name="Read" owner="Keywords">
<arg>Codabarwithveryshortquietzone_1x_atbothsides_4c</arg>
<arg>a378591b</arg>
<status status="NOT RUN" start="2024-11-14T17:23:05.380423" elapsed="0.000000"/>
</kw>
<doc>Test case checks the capability to decode the Codabar with short quiet zones</doc>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:22:30.868843" elapsed="34.512308">Several failures occurred:

1) 
Reading label: Codabarwithnoquietzone_1a 
Observed:  
Expected: a378591b != True

2) Execution terminated by signal</status>
</test>
<test id="s1-s6-t2" name="ATQ_Codabar_ShortMargin_CBLO02" line="24">
<doc>Test case checks the capability to decode the Codabar with short quiet zones</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.381151" elapsed="0.001000">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s6-t3" name="ATQ_Codabar_ShortMargin_CBLO03" line="39">
<doc>Test case checks the capability to decode the Codabar with short quiet zones</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.382151" elapsed="0.000997">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s6-t4" name="ATQ_Codabar_ShortMargin_CBLO04" line="54">
<doc>Test case checks the capability to decode the Codabar with short quiet zones</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.383148" elapsed="0.000000">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s6-t5" name="ATQ_Codabar_ShortMargin_CBLO05" line="69">
<doc>Test case checks the capability to decode the Codabar with short quiet zones</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.384146" elapsed="0.000000">Test execution stopped due to a fatal error.</status>
</test>
<status status="FAIL" start="2024-11-14T17:22:02.228665" elapsed="63.156507"/>
</suite>
<suite id="s1-s7" name="ATQ Code128 ShortMargin" source="C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\ATQ_Code128_ShortMargin.robot">
<test id="s1-s7-t1" name="ATQ_Code128_ShortMargin_C8LO00" line="8">
<doc>Test case checks the capability to decode the Code128 with short quiet zones</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.386169" elapsed="0.000000">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s7-t2" name="ATQ_Code128_ShortMargin_C8LO01" line="14">
<doc>Test case checks the capability to decode the Code128 with short quiet zones</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.387150" elapsed="0.000000">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s7-t3" name="ATQ_Code128_ShortMargin_C8LO02" line="29">
<doc>Test case checks the capability to decode the Code128 with short quiet zones</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.388165" elapsed="0.000000">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s7-t4" name="ATQ_Code128_ShortMargin_C8LO03" line="44">
<doc>Test case checks the capability to decode the Code128 with short quiet zones</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.388165" elapsed="0.000996">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s7-t5" name="ATQ_Code128_ShortMargin_C8LO04" line="59">
<doc>Test case checks the capability to decode the Code128 with short quiet zones</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.389161" elapsed="0.000997">Test execution stopped due to a fatal error.</status>
</test>
<status status="FAIL" start="2024-11-14T17:23:05.385172" elapsed="0.004986"/>
</suite>
<suite id="s1-s8" name="ATQ Code39 ShortMargin" source="C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\ATQ_Code39_ShortMargin.robot">
<test id="s1-s8-t1" name="ATQ_Code39_ShortMargin_C3LO00" line="9">
<doc>Test case checks the capability to decode the Code39 with short quiet zones</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.391161" elapsed="0.000993">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s8-t2" name="ATQ_Code39_ShortMargin_C3LO01" line="15">
<doc>Test case checks the capability to decode the Code39 with short quiet zones</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.392154" elapsed="0.000000">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s8-t3" name="ATQ_Code39_ShortMargin_C3LO02" line="30">
<doc>Test case checks the capability to decode the Code39 with short quiet zones</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.393151" elapsed="0.000000">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s8-t4" name="ATQ_Code39_ShortMargin_C3LO03" line="45">
<doc>Test case checks the capability to decode the Code39 with short quiet zones</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.394148" elapsed="0.000000">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s8-t5" name="ATQ_Code39_ShortMargin_C3LO04" line="60">
<doc>Test case checks the capability to decode the Code39 with short quiet zones</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.395116" elapsed="0.000000">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s8-t6" name="ATQ_Code39_ShortMargin_C3LO05" line="75">
<doc>Test case checks the capability to decode the Code39 with short quiet zones</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.396113" elapsed="0.000000">Test execution stopped due to a fatal error.</status>
</test>
<status status="FAIL" start="2024-11-14T17:23:05.391161" elapsed="0.005979"/>
</suite>
<suite id="s1-s9" name="ATQ Code39CheckDigit" source="C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\ATQ_Code39CheckDigit.robot">
<test id="s1-s9-t1" name="ATQ_Code39CheckDigit_Standard" line="9">
<doc>Verify that SUT can decodes all check digit of Code 39 exactly</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.398137" elapsed="0.000000">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s9-t2" name="ATQ_Code39CheckDigit_LaPoste" line="26">
<doc>Verify that SUT can decodes all check digit of Code 39 exactly</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.399135" elapsed="0.000000">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s9-t3" name="ATQ_Code39CheckDigit_PZN" line="35">
<doc>Verify that SUT can decodes all check digit of Code 39 exactly</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.399135" elapsed="0.000997">Test execution stopped due to a fatal error.</status>
</test>
<status status="FAIL" start="2024-11-14T17:23:05.397140" elapsed="0.002992"/>
</suite>
<suite id="s1-s10" name="ATQ Code93 ShortMargin" source="C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\ATQ_Code93_ShortMargin.robot">
<test id="s1-s10-t1" name="ATQ_Code93_ShortMargin_C9L000" line="8">
<doc>Test case checks the capability to decode the Code93 with short quiet zones</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.401129" elapsed="0.000998">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s10-t2" name="ATQ_Code93_ShortMargin_C9L001" line="14">
<doc>Test case checks the capability to decode the Code93 with short quiet zones</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.402127" elapsed="0.000000">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s10-t3" name="ATQ_Code93_ShortMargin_C9L002" line="29">
<doc>Test case checks the capability to decode the Code93 with short quiet zones</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.403123" elapsed="0.000000">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s10-t4" name="ATQ_Code93_ShortMargin_C9L003" line="44">
<doc>Test case checks the capability to decode the Code93 with short quiet zones</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.404123" elapsed="0.000000">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s10-t5" name="ATQ_Code93_ShortMargin_C9L004" line="59">
<doc>Test case checks the capability to decode the Code93 with short quiet zones</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.404123" elapsed="0.000995">Test execution stopped due to a fatal error.</status>
</test>
<status status="FAIL" start="2024-11-14T17:23:05.401129" elapsed="0.003989"/>
</suite>
<suite id="s1-s11" name="ATQ CompareAEAndAe" source="C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\ATQ_CompareAEAndAe.robot">
<test id="s1-s11-t1" name="ATQ_CompareAEAndAe" line="8">
<doc>After restoring default by $AE or $Ae,configuration value should be same between AE (USA) or Ae (European/Bologna) block,
except Label ID. It is scope of this TC (test tag which does not belong to label id type)
Label id values are defined in specific specification for each AE (USA) or Ae (European/Bologna) block.
This TC does not aim to test difference in values of label id tags through each interfaces- this is covered by auto test already.
However, it can be checked in hyperlinked spreadsheet below (but only in default interface, not go through each interface as in automation test)</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.406115" elapsed="0.000999">Test execution stopped due to a fatal error.</status>
</test>
<status status="FAIL" start="2024-11-14T17:23:05.406115" elapsed="0.001995"/>
</suite>
<suite id="s1-s12" name="ATQ DatamatrixMirrorInvert" source="C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\ATQ_DatamatrixMirrorInvert.robot">
<test id="s1-s12-t1" name="ATQ_DatamatrixMirrorInvert_ARMR00_Disable Auto read mirror barcode" line="8">
<doc>Test case checks the capability to decode Datamatrix mirror and invert code (included Square and Rectangular Datamatrix codes)</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.409113" elapsed="0.000000">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s12-t2" name="ATQ_DatamatrixMirrorInvert_ARMR01_Enable Auto read mirror barcode" line="25">
<doc>Test case checks the capability to decode Datamatrix mirror and invert code (included Square and Rectangular Datamatrix codes)</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.410105" elapsed="0.000968">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s12-t3" name="ATQ_DatamatrixMirrorInvert_ARMR02_Enable both normal and mirror barcode" line="40">
<doc>Test case checks the capability to decode Datamatrix mirror and invert code (included Square and Rectangular Datamatrix codes)</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.411073" elapsed="0.000000">Test execution stopped due to a fatal error.</status>
</test>
<status status="FAIL" start="2024-11-14T17:23:05.408110" elapsed="0.003961"/>
</suite>
<suite id="s1-s13" name="ATQ DC StructureAppend" source="C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\ATQ_DC_StructureAppend.robot">
<test id="s1-s13-t1" name="Scenario 1: HH can read completely Aztec Structure Append symbologies" line="8">
<doc>HH can read completely Aztec Structure Append symbologies</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.413068" elapsed="0.000000">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s13-t2" name="Scenario 2: HH can read completely Datamatrix Structure Append symbologies" line="20">
<doc>HH can read completely Datamatrix Structure Append symbologies</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.414065" elapsed="0.000000">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s13-t3" name="Scenario 3: HH can read completely QRCode Structure Append symbologies" line="33">
<doc>HH can read completely Aztec Structure Append symbologies</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.415062" elapsed="0.000000">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s13-t4" name="Scenario 4: HH can read completely MacroPDF417 Structure Append symbologies" line="45">
<doc>HH can read completely Aztec Structure Append symbologies</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.415062" elapsed="0.001027">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s13-t5" name="Scenario 5: HH can read completely MicroPDF417 Structure Append symbologies" line="61">
<doc>HH can read completely Aztec Structure Append symbologies</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.416089" elapsed="0.001001">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s13-t6" name="Scenario 6: A new sequence will break structure append sequence" line="74">
<doc>Verify new behavior of structure append labels. Read a new sequence
(for ex.: Aztec structure append) will break another structure append sequence (example: data matrix), not broken by single label.
Verify that when HH is being in reading sequence item of Structure Append, It should break out reading sequence
and go into label programming if $P label programming is read</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.417090" elapsed="0.000990">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s13-t7" name="Scenario 7: Structure append sequence will be not broken by single label." line="112">
<doc>Verify new behavior of structure append labels. Read a new sequence
(for ex.: Aztec structure append) will break another structure append sequence (example: data matrix), not broken by single label.
Verify that when HH is being in reading sequence item of Structure Append, It should break out reading sequence
and go into label programming if $P label programming is read</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.418080" elapsed="0.001001">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s13-t8" name="Scenario 8: HH will be enter label programming when $P is read in Structure Append sequence" line="153">
<doc>Verify new behavior of structure append labels. Read a new sequence
(for ex.: Aztec structure append) will break another structure append sequence (example: data matrix), not broken by single label.
Verify that when HH is being in reading sequence item of Structure Append, It should break out reading sequence
and go into label programming if $P label programming is read</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.419081" elapsed="0.000968">Test execution stopped due to a fatal error.</status>
</test>
<status status="FAIL" start="2024-11-14T17:23:05.412071" elapsed="0.007978"/>
</suite>
<suite id="s1-s14" name="ATQ Decoding 1DsymsDefault 2DsymsEnable" source="C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\ATQ_Decoding_1DsymsDefault_2DsymsEnable.robot">
<test id="s1-s14-t1" name="ATQ_Decoding_1DsymsDefault_UPCA" line="8">
<doc>Verify that SUT can decodes all 1D &amp; 2D symbologies correctly with below scenario:
DC_2Dsyms:          Label ID Default as Prefix + Syms (All Default 1D + 2D enable)</doc>
<tag>robot:exit</tag>
<tag>RS232_STD</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<tag>USB_KBD</tag>
<tag>USB_KBD_ALT</tag>
<status status="FAIL" start="2024-11-14T17:23:05.422074" elapsed="0.000000">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s14-t2" name="ATQ_Decoding_1DsymsDefault_UPCE" line="18">
<doc>Verify that SUT can decodes all 1D &amp; 2D symbologies correctly with below scenario:
DC_2Dsyms:          Label ID Default as Prefix + Syms (All Default 1D + 2D enable)</doc>
<tag>robot:exit</tag>
<tag>RS232_STD</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<tag>USB_KBD</tag>
<tag>USB_KBD_ALT</tag>
<status status="FAIL" start="2024-11-14T17:23:05.423070" elapsed="0.000000">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s14-t3" name="ATQ_Decoding_1DsymsDefault_EAN8" line="26">
<doc>Verify that SUT can decodes all 1D &amp; 2D symbologies correctly with below scenario:
DC_2Dsyms:          Label ID Default as Prefix + Syms (All Default 1D + 2D enable)</doc>
<tag>robot:exit</tag>
<tag>RS232_STD</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<tag>USB_KBD</tag>
<tag>USB_KBD_ALT</tag>
<status status="FAIL" start="2024-11-14T17:23:05.424067" elapsed="0.000000">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s14-t4" name="ATQ_Decoding_1DsymsDefault_EAN13" line="34">
<doc>Verify that SUT can decodes all 1D &amp; 2D symbologies correctly with below scenario:
DC_2Dsyms:          Label ID Default as Prefix + Syms (All Default 1D + 2D enable)</doc>
<tag>robot:exit</tag>
<tag>RS232_STD</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<tag>USB_KBD</tag>
<tag>USB_KBD_ALT</tag>
<status status="FAIL" start="2024-11-14T17:23:05.426034" elapsed="0.000000">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s14-t5" name="ATQ_Decoding_1DsymsDefault_Code39" line="47">
<doc>Verify that SUT can decodes all 1D &amp; 2D symbologies correctly with below scenario:
DC_2Dsyms:          Label ID Default as Prefix + Syms (All Default 1D + 2D enable)</doc>
<tag>robot:exit</tag>
<tag>RS232_STD</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<tag>USB_KBD</tag>
<tag>USB_KBD_ALT</tag>
<status status="FAIL" start="2024-11-14T17:23:05.427031" elapsed="0.000000">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s14-t6" name="ATQ_Decoding_1DsymsDefault_GS1DataBar" line="56">
<doc>Verify that SUT can decodes all 1D &amp; 2D symbologies correctly with below scenario:
DC_2Dsyms:          Label ID Default as Prefix + Syms (All Default 1D + 2D enable)</doc>
<tag>robot:exit</tag>
<tag>RS232_STD</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<tag>USB_KBD</tag>
<tag>USB_KBD_ALT</tag>
<status status="FAIL" start="2024-11-14T17:23:05.428028" elapsed="0.000000">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s14-t7" name="ATQ_Decoding_1DsymsDefault_Code128" line="68">
<doc>Verify that SUT can decodes all 1D &amp; 2D symbologies correctly with below scenario:
DC_2Dsyms:          Label ID Default as Prefix + Syms (All Default 1D + 2D enable)</doc>
<tag>robot:exit</tag>
<tag>RS232_STD</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<tag>USB_KBD</tag>
<tag>USB_KBD_ALT</tag>
<status status="FAIL" start="2024-11-14T17:23:05.429024" elapsed="0.000000">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s14-t8" name="ATQ_Decoding_1DsymsDefault_Code93" line="76">
<doc>Verify that SUT can decodes all 1D &amp; 2D symbologies correctly with below scenario:
DC_2Dsyms:          Label ID Default as Prefix + Syms (All Default 1D + 2D enable)</doc>
<tag>robot:exit</tag>
<tag>RS232_STD</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<tag>USB_KBD</tag>
<tag>USB_KBD_ALT</tag>
<status status="FAIL" start="2024-11-14T17:23:05.430022" elapsed="0.000000">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s14-t9" name="ATQ_Decoding_1DsymsDefault_Code11" line="83">
<doc>Verify that SUT can decodes all 1D &amp; 2D symbologies correctly with below scenario:
DC_2Dsyms:          Label ID Default as Prefix + Syms (All Default 1D + 2D enable)</doc>
<tag>robot:exit</tag>
<tag>RS232_STD</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<tag>USB_KBD</tag>
<tag>USB_KBD_ALT</tag>
<status status="FAIL" start="2024-11-14T17:23:05.431020" elapsed="0.000000">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s14-t10" name="ATQ_Decoding_1DsymsDefault_Code32" line="89">
<doc>Verify that SUT can decodes all 1D &amp; 2D symbologies correctly with below scenario:
DC_2Dsyms:          Label ID Default as Prefix + Syms (All Default 1D + 2D enable)</doc>
<tag>robot:exit</tag>
<tag>RS232_STD</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<tag>USB_KBD</tag>
<tag>USB_KBD_ALT</tag>
<status status="FAIL" start="2024-11-14T17:23:05.431020" elapsed="0.001026">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s14-t11" name="ATQ_Decoding_1DsymsDefault_MSI" line="95">
<doc>Verify that SUT can decodes all 1D &amp; 2D symbologies correctly with below scenario:
DC_2Dsyms:          Label ID Default as Prefix + Syms (All Default 1D + 2D enable)</doc>
<tag>robot:exit</tag>
<tag>RS232_STD</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<tag>USB_KBD</tag>
<tag>USB_KBD_ALT</tag>
<status status="FAIL" start="2024-11-14T17:23:05.432046" elapsed="0.000997">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s14-t12" name="ATQ_Decoding_1DsymsDefault_Codabar" line="103">
<doc>Verify that SUT can decodes all 1D &amp; 2D symbologies correctly with below scenario:
DC_2Dsyms:          Label ID Default as Prefix + Syms (All Default 1D + 2D enable)</doc>
<tag>robot:exit</tag>
<tag>RS232_STD</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<tag>USB_KBD</tag>
<tag>USB_KBD_ALT</tag>
<status status="FAIL" start="2024-11-14T17:23:05.433043" elapsed="0.000999">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s14-t13" name="ATQ_Decoding_1DsymsDefault_Coda2of5" line="110">
<doc>Verify that SUT can decodes all 1D &amp; 2D symbologies correctly with below scenario:
DC_2Dsyms:          Label ID Default as Prefix + Syms (All Default 1D + 2D enable)</doc>
<tag>robot:exit</tag>
<tag>RS232_STD</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<tag>USB_KBD</tag>
<tag>USB_KBD_ALT</tag>
<status status="FAIL" start="2024-11-14T17:23:05.434042" elapsed="0.000995">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s14-t14" name="ATQ_Decoding_1DsymsDefault_Plessey" line="123">
<doc>Verify that SUT can decodes all 1D &amp; 2D symbologies correctly with below scenario:
DC_2Dsyms:          Label ID Default as Prefix + Syms (All Default 1D + 2D enable)</doc>
<tag>robot:exit</tag>
<tag>RS232_STD</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<tag>USB_KBD</tag>
<tag>USB_KBD_ALT</tag>
<status status="FAIL" start="2024-11-14T17:23:05.435037" elapsed="0.001002">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s14-t15" name="ATQ_Decoding_1DsymsDefault_Composite" line="129">
<doc>Verify that SUT can decodes all 1D &amp; 2D symbologies correctly with below scenario:
DC_2Dsyms:          Label ID Default as Prefix + Syms (All Default 1D + 2D enable)</doc>
<tag>robot:exit</tag>
<tag>RS232_STD</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<tag>USB_KBD</tag>
<tag>USB_KBD_ALT</tag>
<status status="FAIL" start="2024-11-14T17:23:05.436039" elapsed="0.000994">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s14-t16" name="ATQ_Decoding_1DsymsDefault_Telepen" line="145">
<doc>Verify that SUT can decodes all 1D &amp; 2D symbologies correctly with below scenario:
DC_2Dsyms:          Label ID Default as Prefix + Syms (All Default 1D + 2D enable)</doc>
<tag>robot:exit</tag>
<tag>RS232_STD</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<tag>USB_KBD</tag>
<tag>USB_KBD_ALT</tag>
<status status="FAIL" start="2024-11-14T17:23:05.437033" elapsed="0.000997">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s14-t17" name="ATQ_Decoding_2DsymsEnable" line="151">
<doc>Verify that SUT can decodes all 1D &amp; 2D symbologies correctly with below scenario:
DC_2Dsyms:          Label ID Default as Prefix + Syms (All Default 1D + 2D enable)</doc>
<tag>robot:exit</tag>
<tag>RS232_STD</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.438030" elapsed="0.001001">Test execution stopped due to a fatal error.</status>
</test>
<status status="FAIL" start="2024-11-14T17:23:05.421046" elapsed="0.017985"/>
</suite>
<suite id="s1-s15" name="ATQ Decoding 1DsymsEnable 2DsymsDefault" source="C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\ATQ_Decoding_1DsymsEnable_2DsymsDefault.robot">
<test id="s1-s15-t1" name="ATQ_Decoding_1DsymsEnable_Setup" line="8">
<doc>Verify that SUT can decodes all 1D &amp; 2D symbologies correctly with below scenario:
DC_2Dsyms:          Label ID Default as Prefix + Syms (All Default 1D + 2D enable)</doc>
<tag>robot:exit</tag>
<tag>RS232_STD</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.441022" elapsed="0.000000">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s15-t2" name="ATQ_Decoding_1DsymsEnable_UPCA" line="60">
<doc>Verify that SUT can decodes all 1D &amp; 2D symbologies correctly with below scenario:
DC_2Dsyms:          Label ID Default as Prefix + Syms (All Default 1D + 2D enable)</doc>
<tag>robot:exit</tag>
<tag>RS232_STD</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.442009" elapsed="0.000000">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s15-t3" name="ATQ_Decoding_1DsymsEnable_UPCE" line="69">
<doc>Verify that SUT can decodes all 1D &amp; 2D symbologies correctly with below scenario:
DC_2Dsyms:          Label ID Default as Prefix + Syms (All Default 1D + 2D enable)</doc>
<tag>robot:exit</tag>
<tag>RS232_STD</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.442987" elapsed="0.000000">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s15-t4" name="ATQ_Decoding_1DsymsEnable_EAN8" line="77">
<doc>Verify that SUT can decodes all 1D &amp; 2D symbologies correctly with below scenario:
DC_2Dsyms:          Label ID Default as Prefix + Syms (All Default 1D + 2D enable)</doc>
<tag>robot:exit</tag>
<tag>RS232_STD</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.443985" elapsed="0.000000">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s15-t5" name="ATQ_Decoding_1DsymsEnable_EAN13" line="85">
<doc>Verify that SUT can decodes all 1D &amp; 2D symbologies correctly with below scenario:
DC_2Dsyms:          Label ID Default as Prefix + Syms (All Default 1D + 2D enable)</doc>
<tag>robot:exit</tag>
<tag>RS232_STD</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.444982" elapsed="0.000000">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s15-t6" name="ATQ_Decoding_1DsymsEnable_Code39" line="98">
<doc>Verify that SUT can decodes all 1D &amp; 2D symbologies correctly with below scenario:
DC_2Dsyms:          Label ID Default as Prefix + Syms (All Default 1D + 2D enable)</doc>
<tag>robot:exit</tag>
<tag>RS232_STD</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.445979" elapsed="0.000000">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s15-t7" name="ATQ_Decoding_1DsymsEnable_GS1DataBar" line="107">
<doc>Verify that SUT can decodes all 1D &amp; 2D symbologies correctly with below scenario:
DC_2Dsyms:          Label ID Default as Prefix + Syms (All Default 1D + 2D enable)</doc>
<tag>robot:exit</tag>
<tag>RS232_STD</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.445979" elapsed="0.000997">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s15-t8" name="ATQ_Decoding_1DsymsEnable_Code128" line="119">
<doc>Verify that SUT can decodes all 1D &amp; 2D symbologies correctly with below scenario:
DC_2Dsyms:          Label ID Default as Prefix + Syms (All Default 1D + 2D enable)</doc>
<tag>robot:exit</tag>
<tag>RS232_STD</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.446976" elapsed="0.001027">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s15-t9" name="ATQ_Decoding_1DsymsEnable_Code93" line="127">
<doc>Verify that SUT can decodes all 1D &amp; 2D symbologies correctly with below scenario:
DC_2Dsyms:          Label ID Default as Prefix + Syms (All Default 1D + 2D enable)</doc>
<tag>robot:exit</tag>
<tag>RS232_STD</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.448003" elapsed="0.001001">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s15-t10" name="ATQ_Decoding_1DsymsEnable_Code11" line="134">
<doc>Verify that SUT can decodes all 1D &amp; 2D symbologies correctly with below scenario:
DC_2Dsyms:          Label ID Default as Prefix + Syms (All Default 1D + 2D enable)</doc>
<tag>robot:exit</tag>
<tag>RS232_STD</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.449004" elapsed="0.000994">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s15-t11" name="ATQ_Decoding_1DsymsEnable_Code32" line="140">
<doc>Verify that SUT can decodes all 1D &amp; 2D symbologies correctly with below scenario:
DC_2Dsyms:          Label ID Default as Prefix + Syms (All Default 1D + 2D enable)</doc>
<tag>robot:exit</tag>
<tag>RS232_STD</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.449998" elapsed="0.000998">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s15-t12" name="ATQ_Decoding_1DsymsEnable_MSI" line="146">
<doc>Verify that SUT can decodes all 1D &amp; 2D symbologies correctly with below scenario:
DC_2Dsyms:          Label ID Default as Prefix + Syms (All Default 1D + 2D enable)</doc>
<tag>robot:exit</tag>
<tag>RS232_STD</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.450996" elapsed="0.000000">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s15-t13" name="ATQ_Decoding_1DsymsEnable_Codabar" line="154">
<doc>Verify that SUT can decodes all 1D &amp; 2D symbologies correctly with below scenario:
DC_2Dsyms:          Label ID Default as Prefix + Syms (All Default 1D + 2D enable)</doc>
<tag>robot:exit</tag>
<tag>RS232_STD</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.451992" elapsed="0.000000">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s15-t14" name="ATQ_Decoding_1DsymsEnable_Code2of5" line="161">
<doc>Verify that SUT can decodes all 1D &amp; 2D symbologies correctly with below scenario:
DC_2Dsyms:          Label ID Default as Prefix + Syms (All Default 1D + 2D enable)</doc>
<tag>robot:exit</tag>
<tag>RS232_STD</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.452989" elapsed="0.000000">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s15-t15" name="ATQ_Decoding_1DsymsEnable_Plessey" line="174">
<doc>Verify that SUT can decodes all 1D &amp; 2D symbologies correctly with below scenario:
DC_2Dsyms:          Label ID Default as Prefix + Syms (All Default 1D + 2D enable)</doc>
<tag>robot:exit</tag>
<tag>RS232_STD</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.453987" elapsed="0.000000">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s15-t16" name="ATQ_Decoding_1DsymsEnable_Composite" line="180">
<doc>Verify that SUT can decodes all 1D &amp; 2D symbologies correctly with below scenario:
DC_2Dsyms:          Label ID Default as Prefix + Syms (All Default 1D + 2D enable)</doc>
<tag>robot:exit</tag>
<tag>RS232_STD</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.454955" elapsed="0.000000">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s15-t17" name="ATQ_Decoding_2DsymsDefault" line="198">
<doc>Verify that SUT can decodes all 1D &amp; 2D symbologies correctly with below scenario:
DC_2Dsyms:          Label ID Default as Prefix + Syms (All Default 1D + 2D enable)</doc>
<tag>robot:exit</tag>
<tag>RS232_STD</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.455981" elapsed="0.000000">Test execution stopped due to a fatal error.</status>
</test>
<status status="FAIL" start="2024-11-14T17:23:05.440026" elapsed="0.016955"/>
</suite>
<suite id="s1-s16" name="ATQ Decoding DatamatrixECC140" source="C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\ATQ_Decoding_DatamatrixECC140.robot">
<test id="s1-s16-t1" name="ATQ_Decoding_DatamatrixECC140_LabelScaning" line="8">
<doc>This test validates label scanning of DataMatrix ECC140 symbology. Tests validate minimum and maximum length requirements. Test validates label for Inverse</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.458944" elapsed="0.000647">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s16-t2" name="ATQ_Decoding_DatamatrixECC140_EnableInverse" line="19">
<doc>Enable Inverse. Verify that the HH can decode Inverse</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.459591" elapsed="0.001000">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s16-t3" name="ATQ_Decoding_DatamatrixECC140_DisableInverse" line="33">
<doc>Disable Inverse. Verify that the HH can't decode Inverse</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.460591" elapsed="0.000000">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s16-t4" name="ATQ_Decoding_DatamatrixECC140_Fixed Length with length1" line="48">
<doc>This test validates label scanning for DataMatrix ECC140 when variable length is enabled. The length is 1 character.</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.461588" elapsed="0.000000">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s16-t5" name="ATQ_Decoding_DatamatrixECC140_Fix Length with length1 and length2" line="61">
<doc>This test validates label scanning for DataMatrix ECC140 when variable length is enabled. The length is 3 characters.</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.462585" elapsed="0.000000">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s16-t6" name="ATQ_Decoding_DatamatrixECC140_Variable Length" line="76">
<doc>This test validates label scanning for DataMatrix  ECC140 when variable length is enabled. The length minimum is 8 characters and maximum is 32 characters.</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.463583" elapsed="0.000000">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s16-t7" name="ATQ_Decoding_DatamatrixECC140_Disable DataMatrix" line="93">
<doc>Disable Datamatrix, the HH can't read Datamatrix ECC140</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.464581" elapsed="0.000000">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s16-t8" name="ATQ_Decoding_DatamatrixECC140_LabelFormatting_Prefix" line="102">
<doc>This is a control test. This test validates software properly manage the label formatting for DataMatrix ECC 140 when AIM ID is enabled. The label ID is placed before the label data.</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.464581" elapsed="0.000997">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s16-t9" name="ATQ_Decoding_DatamatrixECC140_LabelFormatting_Suffix" line="116">
<doc>This is a control test. This test validates software properly manage the label formatting for DataMatrix  ECC140 when AIM ID is disabled. The label ID is placed after the label data.</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.465578" elapsed="0.000997">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s16-t10" name="ATQ_Decoding_DatamatrixECC140_LabelFormatting_CaseConversion_LowCase" line="130">
<doc>This is a control test. This test validates software convert case when lower case conversion is enabled.</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.466575" elapsed="0.000997">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s16-t11" name="ATQ_Decoding_DatamatrixECC140_LabelFormatting_CaseConversion_UpCase" line="145">
<doc>This is a control test. This test validates software convert case when Up case conversion is enabled.</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.467572" elapsed="0.000998">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s16-t12" name="ATQ_Decoding_DatamatrixECC140_LabelFormatting_CharacterConversion" line="160">
<doc>This is a control test. This test validates software does not convert character when character conversion is enabled.</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.468570" elapsed="0.000997">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s16-t13" name="ATQ_Decoding_DatamatrixECC140_LabelFormatting_NoCaseConversion" line="176">
<doc>This test validates that enabling user label edit has no effect on standard label formatting as long as label edit script is not loaded in the scanner.</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.469567" elapsed="0.000997">Test execution stopped due to a fatal error.</status>
</test>
<status status="FAIL" start="2024-11-14T17:23:05.457947" elapsed="0.012617"/>
</suite>
<suite id="s1-s17" name="ATQ DigimarcMode" source="C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\ATQ_DigimarcMode.robot">
<test id="s1-s17-t1" name="ATQ_DigimarcMode" line="8">
<doc>Check ability read digimarc label</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.472558" elapsed="0.000000">Test execution stopped due to a fatal error.</status>
</test>
<status status="FAIL" start="2024-11-14T17:23:05.471562" elapsed="0.001994"/>
</suite>
<suite id="s1-s18" name="ATQ DMSpeciallabel" source="C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\ATQ_DMSpeciallabel.robot">
<test id="s1-s18-t1" name="ATQ_DMSpeciallabel" line="8">
<doc>Testcase is create by bug on Jazz 139170</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.474553" elapsed="0.000000">Test execution stopped due to a fatal error.</status>
</test>
<status status="FAIL" start="2024-11-14T17:23:05.473556" elapsed="0.001995"/>
</suite>
<suite id="s1-s19" name="ATQ DotCode" source="C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\ATQ_DotCode.robot">
<test id="s1-s19-t1" name="ATQ_DotCode" line="8">
<doc>This test case verify for decoding Dot Code.
On Miki have some configuration relate decode this symbology:
+ DCMI/DCMA: min/max DOT size
+ DCHS: enable high resolution DOT code
   + DCCP : enable constant position DOT code
On Miki product should be test on HD model product.</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.476548" elapsed="0.000000">Test execution stopped due to a fatal error.</status>
</test>
<status status="FAIL" start="2024-11-14T17:23:05.475551" elapsed="0.001995"/>
</suite>
<suite id="s1-s20" name="ATQ DoubleRead" source="C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\ATQ_DoubleRead.robot">
<test id="s1-s20-t1" name="ATQ_DoubleRead_SNRM00" line="8">
<doc>Verify double read issue</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.478542" elapsed="0.000000">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s20-t2" name="ATQ_DoubleRead_SNRM01" line="20">
<doc>Verify double read issue</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.478542" elapsed="0.000998">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s20-t3" name="ATQ_DoubleRead_SNRM02" line="32">
<doc>Verify double read issue</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.479540" elapsed="0.000000">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s20-t4" name="ATQ_DoubleRead_SNRM03" line="44">
<doc>Verify double read issue</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.480537" elapsed="0.000000">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s20-t5" name="ATQ_DoubleRead_SNRM04" line="55">
<doc>Verify double read issue</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.481535" elapsed="0.000000">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s20-t6" name="ATQ_DoubleRead_SNRM05" line="65">
<doc>Verify double read issue</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.481535" elapsed="0.000997">Test execution stopped due to a fatal error.</status>
</test>
<status status="FAIL" start="2024-11-14T17:23:05.477546" elapsed="0.004986"/>
</suite>
<suite id="s1-s21" name="ATQ EANbelowDatamatrix" source="C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\ATQ_EANbelowDatamatrix.robot">
<test id="s1-s21-t1" name="ATQ_EANbelowDatamatrix" line="8">
<doc>Can read Datamatrix when the EAN box overlaps the DM (EAN13 below DM)</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.483529" elapsed="0.000998">Test execution stopped due to a fatal error.</status>
</test>
<status status="FAIL" start="2024-11-14T17:23:05.483529" elapsed="0.000998"/>
</suite>
<suite id="s1-s22" name="ATQ Febraban" source="C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\ATQ_Febraban.robot">
<test id="s1-s22-t1" name="ATQ_Febraban_Disable" line="8">
<doc>When disable, HH will not parse an Interleaved 2/5 code with 44 digits (Febraban format) to Febraban.</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.485524" elapsed="0.000000">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s22-t2" name="ATQ_Febraban_Enable" line="31">
<doc>When enalbe, HH will parse an Interleaved 2/5 code with 44 digits (Febraban format) to Febraban.
depending on the first digit of the code</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.486521" elapsed="0.000000">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s22-t3" name="ATQ_Febraban_DisableFebarban And Interleaved 2/5" line="54">
<doc>When disable Febarban And Interleaved 2/5, HH will not able read these barcode</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.487519" elapsed="0.000000">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s22-t4" name="ATQ_Febraban_EnableFebarban And DisableInterleaved 2/5" line="77">
<doc>When Enable Febarban And Disable Interleaved 2/5, HH will not able read these barcode</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.488516" elapsed="0.000998">Test execution stopped due to a fatal error.</status>
</test>
<status status="FAIL" start="2024-11-14T17:23:05.484527" elapsed="0.005984"/>
</suite>
<suite id="s1-s23" name="ATQ GS1 Datamatrix" source="C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\ATQ_GS1_Datamatrix.robot">
<test id="s1-s23-t1" name="ATQ_GS1_Datamatrix_Scenario1" line="8">
<doc>This test case verify AIM ID of GS1 DataMatrix &amp; GS1 QR
- Enable: label ID as suffix
- Enable DM/QR decoding
- Enable Structure Append
AIM ID of Global = E  Datamatrix =D  GS1Datamatrix=D</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.491507" elapsed="0.000000">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s23-t2" name="ATQ_GS1_Datamatrix_Scenario2" line="31">
<doc>This test case verify AIM ID of GS1 DataMatrix &amp; GS1 QR
- Enable: label ID as suffix
- Enable DM decoding
- Enable Structure Append
AIM ID of Global = E  Datamatrix =D  GS1Datamatrix=E</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.492505" elapsed="0.000000">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s23-t3" name="ATQ_GS1_Datamatrix_Scenario3" line="54">
<doc>This test case verify AIM ID of GS1 DataMatrix &amp; GS1 QR</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.493503" elapsed="0.000000">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s23-t4" name="ATQ_GS1_Datamatrix_Scenario4" line="73">
<doc>This test case verify AIM ID of GS1 DataMatrix &amp; GS1 QR</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.493503" elapsed="0.000997">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s23-t5" name="ATQ_GS1_Datamatrix_Scenario5" line="92">
<doc>This test case verify AIM ID of GS1 DataMatrix &amp; GS1 QR</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.494500" elapsed="0.000997">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s23-t6" name="ATQ_GS1_Datamatrix_Scenario6" line="111">
<doc>This test case verify AIM ID of GS1 DataMatrix &amp; GS1 QR</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.495497" elapsed="0.000000">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s23-t7" name="ATQ_GS1_Datamatrix_Scenario7" line="130">
<doc>This test case verify AIM ID of GS1 DataMatrix &amp; GS1 QR</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.496494" elapsed="0.000000">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s23-t8" name="ATQ_GS1_Datamatrix_Scenario8" line="149">
<doc>This test case verify AIM ID of GS1 DataMatrix &amp; GS1 QR</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.497492" elapsed="0.000000">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s23-t9" name="ATQ_GS1_Datamatrix_Scenario9" line="168">
<doc>This test case verify AIM ID of GS1 DataMatrix &amp; GS1 QR</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.497492" elapsed="0.000997">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s23-t10" name="ATQ_GS1_Datamatrix_Scenario10" line="188">
<doc>Disable Datamatrix. Verify that the HH can't read any GS1 DataMatrix</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.498489" elapsed="0.000998">Test execution stopped due to a fatal error.</status>
</test>
<status status="FAIL" start="2024-11-14T17:23:05.490511" elapsed="0.008976"/>
</suite>
<suite id="s1-s24" name="ATQ GS1 QR" source="C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\ATQ_GS1_QR.robot">
<test id="s1-s24-t1" name="ATQ_GS1_QR_Scenario1" line="8">
<doc>This test case verify AIM ID of GS1 DataMatrix &amp; GS1 QR</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.500484" elapsed="0.000000">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s24-t2" name="ATQ_GS1_QR_Scenario2" line="25">
<doc>This test case verify AIM ID of GS1 DataMatrix &amp; GS1 QR</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.501480" elapsed="0.000000">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s24-t3" name="ATQ_GS1_QR_Scenario3" line="42">
<doc>This test case verify AIM ID of GS1 DataMatrix &amp; GS1 QR</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.502479" elapsed="0.000000">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s24-t4" name="ATQ_GS1_QR_Scenario4" line="59">
<doc>This test case verify AIM ID of GS1 DataMatrix &amp; GS1 QR</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.502479" elapsed="0.000997">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s24-t5" name="ATQ_GS1_QR_Scenario5" line="76">
<doc>This test case verify AIM ID of GS1 DataMatrix &amp; GS1 QR</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.503476" elapsed="0.000997">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s24-t6" name="ATQ_GS1_QR_Scenario6" line="93">
<doc>This test case verify AIM ID of GS1 DataMatrix &amp; GS1 QR</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.504801" elapsed="0.000999">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s24-t7" name="ATQ_GS1_QR_Scenario7" line="110">
<doc>This test case verify AIM ID of GS1 DataMatrix &amp; GS1 QR</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.505800" elapsed="0.000000">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s24-t8" name="ATQ_GS1_QR_Scenario8" line="127">
<doc>This test case verify AIM ID of GS1 DataMatrix &amp; GS1 QR</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.506797" elapsed="0.000000">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s24-t9" name="ATQ_GS1_QR_Scenario9" line="144">
<doc>This test case verify AIM ID of GS1 DataMatrix &amp; GS1 QR</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.507795" elapsed="0.000000">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s24-t10" name="ATQ_GS1_QR_Scenario10" line="162">
<doc>This test case verify disable QR code will not able read  GS1 QR</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.507795" elapsed="0.000997">Test execution stopped due to a fatal error.</status>
</test>
<status status="FAIL" start="2024-11-14T17:23:05.500484" elapsed="0.008308"/>
</suite>
<suite id="s1-s25" name="ATQ GS1DigitalLink BuidTimeout" source="C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\ATQ_GS1DigitalLink_BuidTimeout.robot">
<test id="s1-s25-t1" name="ATQ_GS1DigitalLink_BuidTimeout" line="8">
<doc>This test case verify the remaining labels of the GS1 label set must be read within timeout to be considered part of the set.
- If GS1 Digital label set can be seen all within timeout Data will transmits to host immediately.
 - If GS1 Digital label set cannot be seen all within timeout  Data will wait the remaining label until timeout then will transmit to host.
- If after timeout is expired but HH cannot see all labels in group label set -&gt; Data will transmit to host what labels is seen.
Configuration: CI_GS1_DIGITAL_LINK_SET_BUILD_TIMEOUT
GDBS: min = 01, max = 0xFF (inscreate by  = 10ms). Default = 0x46 (700ms)</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.511822" elapsed="0.001004">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s25-t2" name="ATQ_GS1DigitalLink_BuidTimeout_SNRM03" line="62">
<doc>Repeate on Flashing Mode</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.513823" elapsed="0.000644">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s25-t3" name="ATQ_GS1DigitalLink_BuidTimeout_SNRM04" line="112">
<doc>Repeate on Always On</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.514467" elapsed="0.001000">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s25-t4" name="ATQ_GS1DigitalLink_BuidTimeout_SNRM05" line="162">
<doc>Repeate on Stand Mode</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.515467" elapsed="0.000997">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s25-t5" name="ATQ_GS1DigitalLink_BuidTimeout_SNRM00" line="212">
<doc>Repeate on Triggier Single</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.516464" elapsed="0.000000">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s25-t6" name="ATQ_GS1DigitalLink_BuidTimeout_SNRM01" line="264">
<doc>Repeate on Triggier Pulse</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.517461" elapsed="0.000000">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s25-t7" name="ATQ_GS1DigitalLink_BuidTimeout_SNRM02" line="316">
<doc>Repeate on Triggier Hold</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.518458" elapsed="0.000000">Test execution stopped due to a fatal error.</status>
</test>
<status status="FAIL" start="2024-11-14T17:23:05.509790" elapsed="0.009666"/>
</suite>
<suite id="s1-s26" name="ATQ GS1DigitalLink DoubleReadTimeout" source="C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\ATQ_GS1DigitalLink_DoubleReadTimeout.robot">
<test id="s1-s26-t1" name="ATQ_GS1DigitalLink_DoubleReadTimeout" line="8">
<doc>This test case verify use GS1 Digital Double Read Timeout to prevent sending any additional labels of set after transmission of label set result.
Covers case when not all labels from a set are seen during GS1_DIGITAL_LINK_SET_TIMEOUT and then an additional label is seen after first result is transmitted.
Configuration: CI_GS1_DIGITAL_LINK_SET_DOUBLE_READ_TIMEOUT
GDDR: min = 01, max = 0xFF (inscreate by  = 10ms). Default = 0x46 (700ms)</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.520453" elapsed="0.000998">Test execution stopped due to a fatal error.</status>
</test>
<status status="FAIL" start="2024-11-14T17:23:05.519456" elapsed="0.002991"/>
</suite>
<suite id="s1-s27" name="ATQ GS1DigitalLink LabelFormat" source="C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\ATQ_GS1DigitalLink_LabelFormat.robot">
<test id="s1-s27-t1" name="ATQ_GS1DigitalLink_LabelFormat" line="7">
<doc>This test case verify the output data when combine setting format:
&lt;Label Set Number ID&gt;&lt;Label Set Number&gt;&lt;Symbology Label ID&gt;&lt;AIM ID&gt;&lt;Label Data&gt;
Adding Prefix + Suffix.</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.523444" elapsed="0.001052">Test execution stopped due to a fatal error.</status>
</test>
<status status="FAIL" start="2024-11-14T17:23:05.523444" elapsed="0.001052"/>
</suite>
<suite id="s1-s28" name="ATQ GS1DigitalLink LabelSetID" source="C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\ATQ_GS1DigitalLink_LabelSetID.robot">
<test id="s1-s28-t1" name="ATQ_GS1DigitalLink_LabelSetID" line="7">
<doc>This test case verify set GS1 Label Set ID Character(s).
This is a field identifier for the GS1 Label Set that is transmitted. Located before the label data.
This configuration item is active when GDTM = 2 -&gt; Send all labels and It can be disabled by setting value to NULL characters.
An 8 digit decimal number that is added in frony of labels from the same GS1 Label Set.
Configuation: CI_GS1_DIGITAL_LINK_LABEL_SET_ID.</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.525493" elapsed="0.000998">Test execution stopped due to a fatal error.</status>
</test>
<status status="FAIL" start="2024-11-14T17:23:05.525493" elapsed="0.000998"/>
</suite>
<suite id="s1-s29" name="ATQ GS1DigitalLink ShareSameGTIN" source="C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\ATQ_GS1DigitalLink_ShareSameGTIN.robot">
<test id="s1-s29-t1" name="ATQ_GS1DigitalLink_ShareSameGTIN" line="7">
<doc>This test case verify set of two more labels of GS1 1D Label, GS1 2D Label or Digimarc label that share the same GTIN value.</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.527488" elapsed="0.000998">Test execution stopped due to a fatal error.</status>
</test>
<status status="FAIL" start="2024-11-14T17:23:05.527488" elapsed="0.000998"/>
</suite>
<suite id="s1-s30" name="ATQ GS1DigitalLink TransmitFormat" source="C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\ATQ_GS1DigitalLink_TransmitFormat.robot">
<test id="s1-s30-t1" name="ATQ_GS1DigitalLink_TransmitFormat" line="7">
<doc>This test case verify a field to format GS1 2D labels in the Label Set that before transmitted.
Configuation: CI_GS1_DIGITAL_LINK_2D_TRANSMIT_FORMAT.
   GDTF: 00=Send as its original label type, including web address part (default)
   01=Send the content its original label type, stripping web address part
   02=Send the content as GS1 Databar-14 containing only GTIN data portion, changing also Label ID and AIM ID if needed.
   03=Send the GTIN data portion in simplest form as Databar-14, EAN13, UPCA, EAN8</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.529483" elapsed="0.000997">Test execution stopped due to a fatal error.</status>
</test>
<status status="FAIL" start="2024-11-14T17:23:05.529483" elapsed="0.001995"/>
</suite>
<suite id="s1-s31" name="ATQ GS1DigitalLink TransmitMode" source="C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\ATQ_GS1DigitalLink_TransmitMode.robot">
<test id="s1-s31-t1" name="ATQ_GS1DigitalLink_TransmitMode" line="7">
<doc>TThis test case verify set transmit mode for GS1 label set.
Configuation: CI_GS1_LABEL_TRANSMIT_MODES: GDTM 00=Disable
   01=Send only the first GS1 label
   02=Send all GS1 label
   03=Prefer 2D GS1 label</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.532474" elapsed="0.000000">Test execution stopped due to a fatal error.</status>
</test>
<status status="FAIL" start="2024-11-14T17:23:05.531478" elapsed="0.001993"/>
</suite>
<suite id="s1-s32" name="ATQ I2O5InterleavedLonglabel" source="C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\ATQ_I2O5InterleavedLonglabel.robot">
<test id="s1-s32-t1" name="ATQ_I2O5InterleavedLongLabel" line="7">
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.534470" elapsed="0.000000">Test execution stopped due to a fatal error.</status>
</test>
<status status="FAIL" start="2024-11-14T17:23:05.533471" elapsed="0.001996"/>
</suite>
<suite id="s1-s33" name="ATQ I2O5InterleavedNomargin" source="C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\ATQ_I2O5InterleavedNomargin.robot">
<test id="s1-s33-t1" name="ATQ_I2O5InterleavedNomargin" line="7">
<doc>When testing the no margin options, the library works in this way:
- With normal barcode: Both sides of barcode pass the normal margin verification, so scanner can decode normally
- With barcode has short or very short (&lt;= 1 modul ) quiet zone at first side: the localizer starts at the side had wider quiet zone so it starts at last side of barcode
- With barcode has short or very short (&lt;= 1 modul ) quiet zone at last side: the localizer starts at the side had wider quiet zone so it starts at first side of barcode
- With barcode has short or very short (&lt;= 1 modul ) quiet zone at both sides: Both sides of barcode do not pass the normal margin verification, so the no margin control should be enabled for decoding it</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.536464" elapsed="0.000998">Test execution stopped due to a fatal error.</status>
</test>
<status status="FAIL" start="2024-11-14T17:23:05.535467" elapsed="0.002773"/>
</suite>
<suite id="s1-s34" name="ATQ IF HostCmds" source="C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\ATQ_IF_HostCmds.robot">
<test id="s1-s34-t1" name="ATQ_IF_HostCmds" line="7">
<doc>Test case checks the functionality host commands.</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.539240" elapsed="0.000000">Test execution stopped due to a fatal error.</status>
</test>
<status status="FAIL" start="2024-11-14T17:23:05.539240" elapsed="0.000997"/>
</suite>
<suite id="s1-s35" name="ATQ Interleaved2of5CheckDigit" source="C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\ATQ_Interleaved2of5CheckDigit.robot">
<test id="s1-s35-t1" name="ATQ_Interleaved2of5CheckDigit" line="7">
<doc>Test case checks the functionality host commands.</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.541235" elapsed="0.000000">Test execution stopped due to a fatal error.</status>
</test>
<status status="FAIL" start="2024-11-14T17:23:05.540237" elapsed="0.001995"/>
</suite>
<suite id="s1-s36" name="ATQ ISOCompatibleTransEAN128EmulationTrans" source="C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\ATQ_ISOCompatibleTransEAN128EmulationTrans.robot">
<test id="s1-s36-t1" name="ATQ_ISOCompatibleTransEAN128EmulationTrans" line="9">
<doc>This test verifies the rules for ISO compatible transmission for UCC composites and EAN128 Emulation
This function dosen't support Pegasus</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.543255" elapsed="0.000000">Test execution stopped due to a fatal error.</status>
</test>
<status status="FAIL" start="2024-11-14T17:23:05.542232" elapsed="0.002024"/>
</suite>
<suite id="s1-s37" name="ATQ LF Prefix Suffix" source="C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\ATQ_LF_Prefix_Suffix.robot">
<test id="s1-s37-t1" name="ATQ_LF_Prefix_Suffix" line="7">
<doc>Verify if scanner can add ALT [ to prefix and [0D CR] as suffix</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.545253" elapsed="0.000000">Test execution stopped due to a fatal error.</status>
</test>
<status status="FAIL" start="2024-11-14T17:23:05.544256" elapsed="0.000997"/>
</suite>
<suite id="s1-s38" name="ATQ MirrorLabels" source="C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\ATQ_MirrorLabels.robot">
<test id="s1-s38-t1" name="ATQ_MirrorLabels" line="7">
<doc>Test case checks ability that HH can read mirror 2D labels</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.546251" elapsed="0.000996">Test execution stopped due to a fatal error.</status>
</test>
<status status="FAIL" start="2024-11-14T17:23:05.546251" elapsed="0.000996"/>
</suite>
<suite id="s1-s39" name="ATQ MirrorLabels1" source="C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\ATQ_MirrorLabels1.robot">
<test id="s1-s39-t1" name="ATQ_MirrorLabels1_RS232_STD" line="7">
<doc>Test case checks ability that HH can read mirror 2D labels: Datamatrix and QR code</doc>
<tag>robot:exit</tag>
<tag>RS232_STD</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.548245" elapsed="0.000997">Test execution stopped due to a fatal error.</status>
</test>
<status status="FAIL" start="2024-11-14T17:23:05.548245" elapsed="0.000997"/>
</suite>
<suite id="s1-s40" name="ATQ NumberSystemTest" source="C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\ATQ_NumberSystemTest.robot">
<test id="s1-s40-t1" name="ATQ_NumberSystemTest_EAN13" line="7">
<doc>This test case is to validate the number system of EAN13, UPCA, UPC-Based  xtensions (5-DIGIT SUPPLEMENTS)</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.550240" elapsed="0.000000">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s40-t2" name="ATQ_NumberSystemTest_UPCA" line="142">
<doc>This test case is to validate the number system of UPCA, UPC-Based  xtensions (5-DIGIT SUPPLEMENTS)</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.551239" elapsed="0.000000">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s40-t3" name="ATQ_NumberSystemTest_UPCA_AddOn5" line="156">
<doc>This test case is to validate the number system of UPCA, UPC-Based  xtensions (5-DIGIT SUPPLEMENTS)</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.552235" elapsed="0.000967">Test execution stopped due to a fatal error.</status>
</test>
<status status="FAIL" start="2024-11-14T17:23:05.550240" elapsed="0.002962"/>
</suite>
<suite id="s1-s41" name="ATQ OCR AIMID" source="C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\ATQ_OCR_AIMID.robot">
<test id="s1-s41-t1" name="ATQ_OCR_AIMID" line="7">
<doc>Defect: 152662 Misread some label have characters "O, Q"
Defect: 150709 Misread some label have characters "2"</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.555198" elapsed="0.000000">Test execution stopped due to a fatal error.</status>
</test>
<status status="FAIL" start="2024-11-14T17:23:05.554201" elapsed="0.001995"/>
</suite>
<suite id="s1-s42" name="ATQ OCR Bdecoding 1" source="C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\ATQ_OCR_Bdecoding_1.robot">
<test id="s1-s42-t1" name="Verify that default OCR_B is disable" line="7">
<doc>Test case checks that OCR_B can be decoded succesfully. The OCR_B including OCR_B Passport &amp; OCR_B Postal</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.557192" elapsed="0.001274">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s42-t2" name="Verify that Enable Passport OCR_B the HH can read Passport OCR_B but can't read Postal OCR_B" line="16">
<doc>Test case checks that OCR_B can be decoded succesfully. The OCR_B including OCR_B Passport &amp; OCR_B Postal</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.558466" elapsed="0.001026">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s42-t3" name="Verify that Enable Italian Postal OCR_B the HH can't read Passport OCR_B but can read Postal OCR_B" line="33">
<doc>Test case checks that OCR_B can be decoded succesfully. The OCR_B including OCR_B Passport &amp; OCR_B Postal</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.559492" elapsed="0.000972">Test execution stopped due to a fatal error.</status>
</test>
<status status="FAIL" start="2024-11-14T17:23:05.557192" elapsed="0.003272"/>
</suite>
<suite id="s1-s43" name="ATQ OCR Configuration 1" source="C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\ATQ_OCR_Configuration_1.robot">
<test id="s1-s43-t1" name="Verify default of tag OCEN is disabled" line="7">
<doc>Check OCEN tag and combination of this tag. Also check label ID of each font.</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.562458" elapsed="0.000000">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s43-t2" name="Verify customer index setting in service port mode" line="17">
<doc>Check OCEN tag and combination of this tag. Also check label ID of each font.</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.563456" elapsed="0.000000">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s43-t3" name="Verify can read EU Identify card" line="37">
<doc>Check OCEN tag and combination of this tag. Also check label ID of each font.</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.564453" elapsed="0.000000">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s43-t4" name="Verify can read OCRB_Passport" line="48">
<doc>Check OCEN tag and combination of this tag. Also check label ID of each font.</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.564453" elapsed="0.000997">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s43-t5" name="Verify can read OCRB_Postal" line="81">
<doc>Check OCEN tag and combination of this tag. Also check label ID of each font.</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.565450" elapsed="0.000998">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s43-t6" name="Verify can read Italian ITB Bank" line="148">
<doc>Check OCEN tag and combination of this tag. Also check label ID of each font.</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.566448" elapsed="0.000997">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s43-t7" name="Verify can read SwissDriverLisence" line="155">
<doc>Check OCEN tag and combination of this tag. Also check label ID of each font.</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.568442" elapsed="0.000000">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s43-t8" name="Verify can read EU Identify card and OCRB_Passport" line="161">
<doc>Check OCEN tag and combination of this tag. Also check label ID of each font.</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.568442" elapsed="0.000998">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s43-t9" name="Verify can read OCRB_Passport and Postal" line="202">
<doc>Check OCEN tag and combination of this tag. Also check label ID of each font.</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.569440" elapsed="0.000997">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s43-t10" name="Verify can read OCRB Postal and Italian ITB Bank" line="299">
<doc>Check OCEN tag and combination of this tag. Also check label ID of each font.</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.570437" elapsed="0.000997">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s43-t11" name="Verify can read SwissDriverLisence and Italian ITB Bank" line="369">
<doc>Check OCEN tag and combination of this tag. Also check label ID of each font.</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.571434" elapsed="0.000000">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s43-t12" name="Verify can read SwissDriverLisence and Italian ITB Bank" line="378">
<doc>Check OCEN tag and combination of this tag. Also check label ID of each font.</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.572432" elapsed="0.000000">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s43-t13" name="Verify can read EU Identify card" line="414">
<doc>Check OCEN tag and combination of this tag. Also check label ID of each font.</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.573428" elapsed="0.000000">Test execution stopped due to a fatal error.</status>
</test>
<status status="FAIL" start="2024-11-14T17:23:05.561461" elapsed="0.012964"/>
</suite>
<suite id="s1-s44" name="ATQ OCR CS CheckCharacter" source="C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\ATQ_OCR_CS_CheckCharacter.robot">
<test id="s1-s44-t1" name="Scenario 1: Without both Weight String and Modulo String, check digit field into structure" line="7">
<doc>Check calculated check character with exists Weight String or Modulo string</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.575424" elapsed="0.000000">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s44-t2" name="Case 2: MICR font with 2 check characters at the midle position (63)" line="14">
<doc>Check calculated check character with exists Weight String or Modulo string</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.576420" elapsed="0.000000">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s44-t3" name="Scenario 2: Check Customer Structure OCR have Weight String , without Modulo String, no check digit field into structure" line="26">
<doc>Check calculated check character with exists Weight String or Modulo string</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.577418" elapsed="0.000000">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s44-t4" name="Scenario 3: Check Customer Structure OCR have Weight String , without Modulo String, check digit field into structure" line="34">
<doc>Case 1:  length of Weight String = length of &lt;FIELD&gt;, 1 check characters at the end</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.578415" elapsed="0.000000">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s44-t5" name="Scenario 3: Case 2: length of Weight String = length of &lt;FIELD&gt;, 2 check characters: 1 at the midle position and 1 at the end posititon" line="42">
<doc>Case 1:  length of Weight String = length of &lt;FIELD&gt;, 1 check characters at the end</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.579413" elapsed="0.000000">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s44-t6" name="Scenario 4: Check Customer Structure OCR have Weight String and Modulo String, no check digit field into structure" line="51">
<doc>There is not check character in label. If calculated check digit of this label is equal 0 then scanner can read it.
If calculate check digit different from 0, scanner can not read it.
Case 1: length of weight String = length of &lt;FIELD&gt;, start/stop removal</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.579413" elapsed="0.000997">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s44-t7" name="Scenario 5: Check Customer Structure OCR have Weight String and Modulo String, check digit field into structure" line="60">
<doc>Case 1: length of weight String = length of &lt;FIELD&gt;, 1 check character at the end position</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.580410" elapsed="0.000998">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s44-t8" name="Scenario 5: Case 2: length of weight String &lt; length of &lt;FIELD&gt;, 1 check character at the end position" line="71">
<doc>Case 2: length of weight String &lt; length of &lt;FIELD&gt;, 1 check character at the end position</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.581408" elapsed="0.000997">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s44-t9" name="Scenario 5: Case 4: length of weight String &lt; length of &lt;FIELD&gt;, 3 check characters at the end position" line="78">
<doc>Case 4: length of weight String &lt; length of &lt;FIELD&gt;, 3 check characters at the end position</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.583403" elapsed="0.000000">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s44-t10" name="Scenario 5: Case 5: length of weight String = length of &lt;FIELD&gt;, 2 check character at the midle and the end + start/stop removal" line="87">
<doc>Case 5: length of weight String = length of &lt;FIELD&gt;, 2 check character at the midle and the end + start/stop removal</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.583403" elapsed="0.000997">Test execution stopped due to a fatal error.</status>
</test>
<status status="FAIL" start="2024-11-14T17:23:05.574425" elapsed="0.009975"/>
</suite>
<suite id="s1-s45" name="ATQ OCR CS ControlField Multiline" source="C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\ATQ_OCR_CS_ControlField_Multiline.robot">
<test id="s1-s45-t1" name="Scenario 1: Multiline with OCR-A font with 2 lines" line="7">
<doc>Check ability of scanner can read OCR multiline</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.585397" elapsed="0.000997">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s45-t2" name="Scenario 1: Multiline with OCR-A font with 3 lines" line="15">
<doc>Check ability of scanner can read OCR multiline</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.586394" elapsed="0.000998">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s45-t3" name="Scenario 2: Multiline with OCR-B font 2 lines" line="24">
<doc>Check ability of scanner can read OCR multiline</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.587392" elapsed="0.000997">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s45-t4" name="Scenario 2: Multiline with OCR-B font 3 lines" line="32">
<doc>Check ability of scanner can read OCR multiline</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.588389" elapsed="0.000997">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s45-t5" name="Scenario 3: Multiline with MICR font 2 lines" line="40">
<doc>Check ability of scanner can read OCR multiline</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.589386" elapsed="0.000000">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s45-t6" name="Scenario 3: Multiline with MICR font 3 lines" line="47">
<doc>Check ability of scanner can read OCR multiline</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.590383" elapsed="0.000000">Test execution stopped due to a fatal error.</status>
</test>
<status status="FAIL" start="2024-11-14T17:23:05.585397" elapsed="0.005984"/>
</suite>
<suite id="s1-s46" name="ATQ OCR CS ControlField StartStopRemoval" source="C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\ATQ_OCR_CS_ControlField_StartStopRemoval.robot">
<test id="s1-s46-t1" name="Scenario 1: Remove letter" line="7">
<doc>Check all control field (space, start / stop removal) can be inserted into Data Field.</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.592378" elapsed="0.000000">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s46-t2" name="Scenario 2: Remove space" line="19">
<doc>Check all control field (space, start / stop removal) can be inserted into Data Field.</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.593375" elapsed="0.000000">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s46-t3" name="Scenario 3: Remove Symbol" line="31">
<doc>Check all control field (space, start / stop removal) can be inserted into Data Field.</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.593375" elapsed="0.000998">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s46-t4" name="Scenario 4: Multi removal" line="46">
<doc>Check all control field (space, start / stop removal) can be inserted into Data Field.</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.594373" elapsed="0.000997">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s46-t5" name="Scenario 5: Remove at first/end position" line="61">
<doc>Check all control field (space, start / stop removal) can be inserted into Data Field.</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.595370" elapsed="0.000000">Test execution stopped due to a fatal error.</status>
</test>
<status status="FAIL" start="2024-11-14T17:23:05.591381" elapsed="0.004986"/>
</suite>
<suite id="s1-s47" name="ATQ OCR CS DataField" source="C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\ATQ_OCR_CS_DataField.robot">
<test id="s1-s47-t1" name="Scenario 1: Verify default OCR font with all supported charset" line="7">
<doc>Check scanner can read OCR-A font , OCR-B font, MICR font with corresponding configuration</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.597364" elapsed="0.000998">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s47-t2" name="Scenario 2: Verify OCR-A font (66) with all supported charset" line="38">
<doc>Check scanner can read OCR-A font , OCR-B font, MICR font with corresponding configuration</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.599360" elapsed="0.000000">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s47-t3" name="Scenario 3: Verify MICR font (62) with all supported charset" line="71">
<doc>Check scanner can read OCR-A font , OCR-B font, MICR font with corresponding configuration</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.600357" elapsed="0.000000">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s47-t4" name="Scenario 4: Verify OCR-B font (72) with all supported charset" line="110">
<doc>Check scanner can read OCR-A font , OCR-B font, MICR font with corresponding configuration</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.601353" elapsed="0.000000">Test execution stopped due to a fatal error.</status>
</test>
<status status="FAIL" start="2024-11-14T17:23:05.597364" elapsed="0.004987"/>
</suite>
<suite id="s1-s48" name="ATQ OCR CS MaxDataField" source="C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\ATQ_OCR_CS_MaxDataField.robot">
<test id="s1-s48-t1" name="Verfiy scanner can setting one OCR word with maximum 70 Data Field" line="7">
<doc>Check maximum number of data field of Customer Structure OCR is 80 data field for each row</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.603349" elapsed="0.000000">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s48-t2" name="Verfiy scanner can setting two OCR word with maximum 80 Data Field for one row" line="17">
<doc>Check maximum number of data field of Customer Structure OCR is 80 data field for each row</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.604345" elapsed="0.000000">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s48-t3" name="Verify scanner can read two line with maximum character of each line" line="26">
<doc>Check maximum number of data field of Customer Structure OCR is 80 data field for each row</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.604345" elapsed="0.000998">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s48-t4" name="Verify scanner can read OCR word with length is 70 chars" line="35">
<doc>Check maximum number of data field of Customer Structure OCR is 80 data field for each row</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.605343" elapsed="0.000998">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s48-t5" name="Verify scanner can read long OCR label (from customer)" line="44">
<doc>Check maximum number of data field of Customer Structure OCR is 80 data field for each row</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.606341" elapsed="0.000997">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s48-t6" name="Verify scanner can read car certificate Frence (from customer defect 101270)" line="53">
<doc>Check maximum number of data field of Customer Structure OCR is 80 data field for each row</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.607338" elapsed="0.000997">Test execution stopped due to a fatal error.</status>
</test>
<status status="FAIL" start="2024-11-14T17:23:05.602351" elapsed="0.005984"/>
</suite>
<suite id="s1-s49" name="ATQ OCR Customer BankCheckSingapore" source="C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\ATQ_OCR_Customer_BankCheckSingapore.robot">
<test id="s1-s49-t1" name="ATQ_OCR_Customer_BankCheckSingapore" line="7">
<doc>Check scanner can read Bank Check Singapore with MICR font (defect 107579)</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.609332" elapsed="0.000998">Test execution stopped due to a fatal error.</status>
</test>
<status status="FAIL" start="2024-11-14T17:23:05.609332" elapsed="0.000998"/>
</suite>
<suite id="s1-s50" name="ATQ OCR Inverted" source="C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\ATQ_OCR_Inverted.robot">
<test id="s1-s50-t1" name="ATQ_OCR_Inverted" line="7">
<doc>Check scanner can decode OCR inverted</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.611327" elapsed="0.000000">Test execution stopped due to a fatal error.</status>
</test>
<status status="FAIL" start="2024-11-14T17:23:05.611327" elapsed="0.000997"/>
</suite>
<suite id="s1-s51" name="ATQ OCR LabelID" source="C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\ATQ_OCR_LabelID.robot">
<test id="s1-s51-t1" name="ATQ_OCR_LabelID" line="7">
<doc>Check scanner can decode OCR inverted</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.613322" elapsed="0.000997">Test execution stopped due to a fatal error.</status>
</test>
<status status="FAIL" start="2024-11-14T17:23:05.612324" elapsed="0.002992"/>
</suite>
<suite id="s1-s52" name="ATQ PDF417CarDriverLicense" source="C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\ATQ_PDF417CarDriverLicense.robot">
<test id="s1-s52-t1" name="ATQ_PDF417CarDriverLicense" line="7">
<doc>Test case checks the capability to decode the US_PDF417 Car Driver License</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.616313" elapsed="0.000000">Test execution stopped due to a fatal error.</status>
</test>
<status status="FAIL" start="2024-11-14T17:23:05.615316" elapsed="0.001994"/>
</suite>
<suite id="s1-s53" name="ATQ PostalCode" source="C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\ATQ_PostalCode.robot">
<test id="s1-s53-t1" name="ATQ_PostalCode_RS232_STD" line="7">
<doc>This test case verify for decoding Postal Code</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.618308" elapsed="0.000000">Test execution stopped due to a fatal error.</status>
</test>
<status status="FAIL" start="2024-11-14T17:23:05.618308" elapsed="0.000997"/>
</suite>
<suite id="s1-s54" name="ATQ ReInit" source="C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\ATQ_ReInit.robot">
<test id="s1-s54-t1" name="ATQ_ReInit" line="7">
<doc>This test case verify for decoding Postal Code</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.620302" elapsed="0.001028">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s54-t2" name="ATQ_ReInit_GunWireless" line="28">
<doc>This test case validates the r command can change and start using the new configuration settings in or out service port mode.
- r01: The scanner replies to the command, exits Service Port Mode, and starts using the new configuration settings including the baud rate of the host interface.  The scanner stops the Service Port Mode indication
- r02: The scanner replies to the command and starts using the new configuration settings while staying in Service Port Mode.  Reinitialization will only involve non-interface related configuration settings.  The baud rate will stay at the current Service Port Mode setting</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<tag>Wireless</tag>
<status status="FAIL" start="2024-11-14T17:23:05.622298" elapsed="0.001025">Test execution stopped due to a fatal error.</status>
</test>
<status status="FAIL" start="2024-11-14T17:23:05.619305" elapsed="0.004018"/>
</suite>
<suite id="s1-s55" name="ATQ RepeatDecode SpecialDataMatrix" source="C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\ATQ_RepeatDecode_SpecialDataMatrix.robot">
<test id="s1-s55-t1" name="ATQ_RepeatDecode_SpecialDataMatrix_Corded" line="7">
<doc>This test case verify that HH does not fall to bad behavior after read special label 100</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.625314" elapsed="0.000000">Test execution stopped due to a fatal error.</status>
</test>
<status status="FAIL" start="2024-11-14T17:23:05.624320" elapsed="0.001966"/>
</suite>
<suite id="s1-s56" name="ATQ RoyalMail PostalCode CheckCharacter" source="C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\ATQ_RoyalMail_PostalCode_CheckCharacter.robot">
<test id="s1-s56-t1" name="ATQ_RoyalMail_PostalCode_CheckCharacter" line="7">
<doc>This test case verifies check calculation and check character transmission of Royal Mail Postal code</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.627283" elapsed="0.001023">Test execution stopped due to a fatal error.</status>
</test>
<status status="FAIL" start="2024-11-14T17:23:05.627283" elapsed="0.001995"/>
</suite>
<suite id="s1-s57" name="ATQ Setting LF 1DsymEnable 2DsymDefault" source="C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\ATQ_Setting_LF_1DsymEnable_2DsymDefault.robot">
<test id="s1-s57-t1" name="ATQ_Setting_LF_1DsymEnable_2DsymDefault" line="7">
<doc>Verify that SUT can decodes all 1D &amp; 2D default enabled symbologies correctly when:
- Enable all of 1D syms &amp; label formatting:
o AIM ID &amp; Label ID
o Prefix &amp; Suffix
o Case Conversion &amp; Character Conversion
- Set label ID different with default.</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.630275" elapsed="0.000000">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s57-t2" name="ATQ_Setting_LF_1DsymEnable_2DsymDefault_UPCA" line="121">
<doc>Verify that SUT can decodes all 1D &amp; 2D symbologies correctly with below scenario:
DC_2Dsyms:          Label ID Default as Prefix + Syms (All Default 1D + 2D enable)</doc>
<tag>robot:exit</tag>
<tag>RS232_STD</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.631273" elapsed="0.000000">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s57-t3" name="ATQ_Setting_LF_1DsymEnable_2DsymDefault_UPCE" line="130">
<doc>Verify that SUT can decodes all 1D &amp; 2D symbologies correctly with below scenario:
DC_2Dsyms:          Label ID Default as Prefix + Syms (All Default 1D + 2D enable)</doc>
<tag>robot:exit</tag>
<tag>RS232_STD</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.632270" elapsed="0.000000">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s57-t4" name="ATQ_Setting_LF_1DsymEnable_2DsymDefault_EAN8" line="138">
<doc>Verify that SUT can decodes all 1D &amp; 2D symbologies correctly with below scenario:
DC_2Dsyms:          Label ID Default as Prefix + Syms (All Default 1D + 2D enable)</doc>
<tag>robot:exit</tag>
<tag>RS232_STD</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.633268" elapsed="0.000000">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s57-t5" name="ATQ_Setting_LF_1DsymEnable_2DsymDefault_EAN13" line="146">
<doc>Verify that SUT can decodes all 1D &amp; 2D symbologies correctly with below scenario:
DC_2Dsyms:          Label ID Default as Prefix + Syms (All Default 1D + 2D enable)</doc>
<tag>robot:exit</tag>
<tag>RS232_STD</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.634265" elapsed="0.000000">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s57-t6" name="ATQ_Setting_LF_1DsymEnable_2DsymDefault_Code39" line="159">
<doc>Verify that SUT can decodes all 1D &amp; 2D symbologies correctly with below scenario:
DC_2Dsyms:          Label ID Default as Prefix + Syms (All Default 1D + 2D enable)</doc>
<tag>robot:exit</tag>
<tag>RS232_STD</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.635263" elapsed="0.000000">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s57-t7" name="ATQ_Setting_LF_1DsymEnable_2DsymDefault_GS1DataBar" line="168">
<doc>Verify that SUT can decodes all 1D &amp; 2D symbologies correctly with below scenario:
DC_2Dsyms:          Label ID Default as Prefix + Syms (All Default 1D + 2D enable)</doc>
<tag>robot:exit</tag>
<tag>RS232_STD</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.635263" elapsed="0.000997">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s57-t8" name="ATQ_Setting_LF_1DsymEnable_2DsymDefault_Code128" line="180">
<doc>Verify that SUT can decodes all 1D &amp; 2D symbologies correctly with below scenario:
DC_2Dsyms:          Label ID Default as Prefix + Syms (All Default 1D + 2D enable)</doc>
<tag>robot:exit</tag>
<tag>RS232_STD</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.636260" elapsed="0.000997">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s57-t9" name="ATQ_Setting_LF_1DsymEnable_2DsymDefault_Code93" line="188">
<doc>Verify that SUT can decodes all 1D &amp; 2D symbologies correctly with below scenario:
DC_2Dsyms:          Label ID Default as Prefix + Syms (All Default 1D + 2D enable)</doc>
<tag>robot:exit</tag>
<tag>RS232_STD</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.637257" elapsed="0.000998">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s57-t10" name="ATQ_Setting_LF_1DsymEnable_2DsymDefault_Code11" line="195">
<doc>Verify that SUT can decodes all 1D &amp; 2D symbologies correctly with below scenario:
DC_2Dsyms:          Label ID Default as Prefix + Syms (All Default 1D + 2D enable)</doc>
<tag>robot:exit</tag>
<tag>RS232_STD</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.638255" elapsed="0.000997">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s57-t11" name="ATQ_Setting_LF_1DsymEnable_2DsymDefault_Code32" line="201">
<doc>Verify that SUT can decodes all 1D &amp; 2D symbologies correctly with below scenario:
DC_2Dsyms:          Label ID Default as Prefix + Syms (All Default 1D + 2D enable)</doc>
<tag>robot:exit</tag>
<tag>RS232_STD</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.639252" elapsed="0.000997">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s57-t12" name="ATQ_Setting_LF_1DsymEnable_2DsymDefault_MSI" line="207">
<doc>Verify that SUT can decodes all 1D &amp; 2D symbologies correctly with below scenario:
DC_2Dsyms:          Label ID Default as Prefix + Syms (All Default 1D + 2D enable)</doc>
<tag>robot:exit</tag>
<tag>RS232_STD</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.640249" elapsed="0.000998">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s57-t13" name="ATQ_Setting_LF_1DsymEnable_2DsymDefault_Codabar" line="215">
<doc>Verify that SUT can decodes all 1D &amp; 2D symbologies correctly with below scenario:
DC_2Dsyms:          Label ID Default as Prefix + Syms (All Default 1D + 2D enable)</doc>
<tag>robot:exit</tag>
<tag>RS232_STD</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.641247" elapsed="0.000997">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s57-t14" name="ATQ_Setting_LF_1DsymEnable_2DsymDefault_Code2of5" line="222">
<doc>Verify that SUT can decodes all 1D &amp; 2D symbologies correctly with below scenario:
DC_2Dsyms:          Label ID Default as Prefix + Syms (All Default 1D + 2D enable)</doc>
<tag>robot:exit</tag>
<tag>RS232_STD</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.642244" elapsed="0.000997">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s57-t15" name="ATQ_Setting_LF_1DsymEnable_2DsymDefault_Plessey" line="235">
<doc>Verify that SUT can decodes all 1D &amp; 2D symbologies correctly with below scenario:
DC_2Dsyms:          Label ID Default as Prefix + Syms (All Default 1D + 2D enable)</doc>
<tag>robot:exit</tag>
<tag>RS232_STD</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.643241" elapsed="0.000998">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s57-t16" name="ATQ_Setting_LF_1DsymEnable_2DsymDefault_Composite" line="241">
<doc>Verify that SUT can decodes all 1D &amp; 2D symbologies correctly with below scenario:
DC_2Dsyms:          Label ID Default as Prefix + Syms (All Default 1D + 2D enable)</doc>
<tag>robot:exit</tag>
<tag>RS232_STD</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.645237" elapsed="0.000000">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s57-t17" name="ATQ_Setting_LF_1DsymEnable_2DsymDefault" line="259">
<doc>Verify that SUT can decodes all 1D &amp; 2D symbologies correctly with below scenario:
DC_2Dsyms:          Label ID Default as Prefix + Syms (All Default 1D + 2D enable)</doc>
<tag>robot:exit</tag>
<tag>RS232_STD</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.646232" elapsed="0.000999">Test execution stopped due to a fatal error.</status>
</test>
<status status="FAIL" start="2024-11-14T17:23:05.629278" elapsed="0.017953"/>
</suite>
<suite id="s1-s58" name="ATQ Setting LF 1DsymsDefault 2DsymsEnable" source="C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\ATQ_Setting_LF_1DsymsDefault_2DsymsEnable.robot">
<test id="s1-s58-t1" name="ATQ_Setting_LF_1DsymEnable_2DsymDefault" line="7">
<doc>Verify that SUT can decodes 1D default &amp; 2D enabled symbologies correctly when:
- Enable all of 2D syms &amp; label formatting:
o AIM ID &amp; Label ID
o Prefix &amp; Suffix
o Case Conversion &amp; Character Conversion
- Set label ID different with default
LF_2Dsyms:      Global Prefix + AIM ID + Syms (All 2D, default 1D enable) + Label ID (Not Default) + Global Suffix.</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.649225" elapsed="0.000998">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s58-t2" name="ATQ_Setting_LF_1DsymEnable_2DsymDefault_UPCA" line="86">
<doc>Verify that SUT can decodes all 1D &amp; 2D symbologies correctly with below scenario:
DC_2Dsyms:          Label ID Default as Prefix + Syms (All Default 1D + 2D enable)</doc>
<tag>robot:exit</tag>
<tag>RS232_STD</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.650223" elapsed="0.000997">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s58-t3" name="ATQ_Setting_LF_1DsymEnable_2DsymDefault_UPCE" line="95">
<doc>Verify that SUT can decodes all 1D &amp; 2D symbologies correctly with below scenario:
DC_2Dsyms:          Label ID Default as Prefix + Syms (All Default 1D + 2D enable)</doc>
<tag>robot:exit</tag>
<tag>RS232_STD</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.651220" elapsed="0.000997">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s58-t4" name="ATQ_Setting_LF_1DsymEnable_2DsymDefault_EAN8" line="103">
<doc>Verify that SUT can decodes all 1D &amp; 2D symbologies correctly with below scenario:
DC_2Dsyms:          Label ID Default as Prefix + Syms (All Default 1D + 2D enable)</doc>
<tag>robot:exit</tag>
<tag>RS232_STD</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.652217" elapsed="0.000998">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s58-t5" name="ATQ_Setting_LF_1DsymEnable_2DsymDefault_EAN13" line="111">
<doc>Verify that SUT can decodes all 1D &amp; 2D symbologies correctly with below scenario:
DC_2Dsyms:          Label ID Default as Prefix + Syms (All Default 1D + 2D enable)</doc>
<tag>robot:exit</tag>
<tag>RS232_STD</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.653215" elapsed="0.000997">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s58-t6" name="ATQ_Setting_LF_1DsymEnable_2DsymDefault_Code39" line="124">
<doc>Verify that SUT can decodes all 1D &amp; 2D symbologies correctly with below scenario:
DC_2Dsyms:          Label ID Default as Prefix + Syms (All Default 1D + 2D enable)</doc>
<tag>robot:exit</tag>
<tag>RS232_STD</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.654212" elapsed="0.000997">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s58-t7" name="ATQ_Setting_LF_1DsymEnable_2DsymDefault_GS1DataBar" line="133">
<doc>Verify that SUT can decodes all 1D &amp; 2D symbologies correctly with below scenario:
DC_2Dsyms:          Label ID Default as Prefix + Syms (All Default 1D + 2D enable)</doc>
<tag>robot:exit</tag>
<tag>RS232_STD</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.655209" elapsed="0.000998">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s58-t8" name="ATQ_Setting_LF_1DsymEnable_2DsymDefault_Code128" line="145">
<doc>Verify that SUT can decodes all 1D &amp; 2D symbologies correctly with below scenario:
DC_2Dsyms:          Label ID Default as Prefix + Syms (All Default 1D + 2D enable)</doc>
<tag>robot:exit</tag>
<tag>RS232_STD</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.656207" elapsed="0.000997">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s58-t9" name="ATQ_Setting_LF_1DsymEnable_2DsymDefault_Code93" line="153">
<doc>Verify that SUT can decodes all 1D &amp; 2D symbologies correctly with below scenario:
DC_2Dsyms:          Label ID Default as Prefix + Syms (All Default 1D + 2D enable)</doc>
<tag>robot:exit</tag>
<tag>RS232_STD</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.657204" elapsed="0.000997">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s58-t10" name="ATQ_Setting_LF_1DsymEnable_2DsymDefault_Code11" line="160">
<doc>Verify that SUT can decodes all 1D &amp; 2D symbologies correctly with below scenario:
DC_2Dsyms:          Label ID Default as Prefix + Syms (All Default 1D + 2D enable)</doc>
<tag>robot:exit</tag>
<tag>RS232_STD</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.658201" elapsed="0.000997">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s58-t11" name="ATQ_Setting_LF_1DsymEnable_2DsymDefault_Code32" line="166">
<doc>Verify that SUT can decodes all 1D &amp; 2D symbologies correctly with below scenario:
DC_2Dsyms:          Label ID Default as Prefix + Syms (All Default 1D + 2D enable)</doc>
<tag>robot:exit</tag>
<tag>RS232_STD</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.659198" elapsed="0.000998">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s58-t12" name="ATQ_Setting_LF_1DsymEnable_2DsymDefault_MSI" line="172">
<doc>Verify that SUT can decodes all 1D &amp; 2D symbologies correctly with below scenario:
DC_2Dsyms:          Label ID Default as Prefix + Syms (All Default 1D + 2D enable)</doc>
<tag>robot:exit</tag>
<tag>RS232_STD</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.660788" elapsed="0.000000">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s58-t13" name="ATQ_Setting_LF_1DsymEnable_2DsymDefault_Codabar" line="180">
<doc>Verify that SUT can decodes all 1D &amp; 2D symbologies correctly with below scenario:
DC_2Dsyms:          Label ID Default as Prefix + Syms (All Default 1D + 2D enable)</doc>
<tag>robot:exit</tag>
<tag>RS232_STD</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.661788" elapsed="0.000000">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s58-t14" name="ATQ_Setting_LF_1DsymEnable_2DsymDefault_Code2of5" line="187">
<doc>Verify that SUT can decodes all 1D &amp; 2D symbologies correctly with below scenario:
DC_2Dsyms:          Label ID Default as Prefix + Syms (All Default 1D + 2D enable)</doc>
<tag>robot:exit</tag>
<tag>RS232_STD</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.662785" elapsed="0.000000">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s58-t15" name="ATQ_Setting_LF_1DsymEnable_2DsymDefault_Plessey" line="200">
<doc>Verify that SUT can decodes all 1D &amp; 2D symbologies correctly with below scenario:
DC_2Dsyms:          Label ID Default as Prefix + Syms (All Default 1D + 2D enable)</doc>
<tag>robot:exit</tag>
<tag>RS232_STD</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.663783" elapsed="0.000000">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s58-t16" name="ATQ_Setting_LF_1DsymEnable_2DsymDefault_Composite" line="206">
<doc>Verify that SUT can decodes all 1D &amp; 2D symbologies correctly with below scenario:
DC_2Dsyms:          Label ID Default as Prefix + Syms (All Default 1D + 2D enable)</doc>
<tag>robot:exit</tag>
<tag>RS232_STD</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.663783" elapsed="0.000997">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s58-t17" name="ATQ_Setting_LF_1DsymEnable_2DsymDefault" line="224">
<doc>Verify that SUT can decodes all 1D &amp; 2D symbologies correctly with below scenario:
DC_2Dsyms:          Label ID Default as Prefix + Syms (All Default 1D + 2D enable)</doc>
<tag>robot:exit</tag>
<tag>RS232_STD</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.665777" elapsed="0.000000">Test execution stopped due to a fatal error.</status>
</test>
<status status="FAIL" start="2024-11-14T17:23:05.648228" elapsed="0.018546"/>
</suite>
<suite id="s1-s59" name="ATQ StressChangingIF" source="C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\ATQ_StressChangingIF.robot">
<test id="s1-s59-t1" name="ATQ_StressChangingIF_RS232" line="7">
<doc>Strees gun by changing interface and reading label. It should not hang or reset</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<status status="FAIL" start="2024-11-14T17:23:05.667772" elapsed="0.000000">Test execution stopped due to a fatal error.</status>
</test>
<status status="FAIL" start="2024-11-14T17:23:05.666774" elapsed="0.000998"/>
</suite>
<suite id="s1-s60" name="ATQ TacoBell" source="C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\ATQ_TacoBell.robot">
<test id="s1-s60-t1" name="ATQ_TacoBell" line="7">
<doc>This feature allows the user to specify the area of the acquired image (starting from the geometrical center) on which the histogram is calculated. This is useful in scenarios where a spot evaluation of the exposure in the center of the image is preferred (such as reading from a mobile device with a bright background around).
This feature is implemented from Miki_C M24, and Miki_wireless M27 + HH 25</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<status status="FAIL" start="2024-11-14T17:23:05.668769" elapsed="0.000998">Test execution stopped due to a fatal error.</status>
</test>
<status status="FAIL" start="2024-11-14T17:23:05.668769" elapsed="0.001994"/>
</suite>
<suite id="s1-s61" name="ATQ UPCEANQuietZone" source="C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\ATQ_UPCEANQuietZone.robot">
<test id="s1-s61-t1" name="ATQ_UPCEANQuietZone" line="7">
<doc>Test cases is to check Quiet Zone of UPC-EAN that defined in Module (from 1 &gt; 8), default Quiet Zone of UPC-Ean is 2 module</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<status status="FAIL" start="2024-11-14T17:23:05.671762" elapsed="0.000000">Test execution stopped due to a fatal error.</status>
</test>
<status status="FAIL" start="2024-11-14T17:23:05.671762" elapsed="0.000997"/>
</suite>
<suite id="s1-s62" name="ATQ WaterMark" source="C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\ATQ_WaterMark.robot">
<test id="s1-s62-t1" name="ATQ_WaterMark" line="7">
<doc>Test case checks the capability to decode the Watermark labels. Make sure that WaterMark labels is used directly, not via screen of PC.</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<status status="FAIL" start="2024-11-14T17:23:05.673756" elapsed="0.000000">Test execution stopped due to a fatal error.</status>
</test>
<status status="FAIL" start="2024-11-14T17:23:05.672759" elapsed="0.001994"/>
</suite>
<suite id="s1-s63" name="ATQ WechatQR" source="C:\Diamond\HHS\HHSProject\Procedures\Quick_Test\ATQ_WechatQR.robot">
<test id="s1-s63-t1" name="ATQ_WaterMark" line="7">
<doc>Test case checks the capability to decode the Wechat QR. Make sure that Wechat labels are displayed on Cellphone screen, not via paper.</doc>
<tag>robot:exit</tag>
<tag>RS232_OPOS</tag>
<tag>RS232_STD</tag>
<tag>RS232_WN</tag>
<tag>USB_COM</tag>
<tag>USB_CPS</tag>
<status status="FAIL" start="2024-11-14T17:23:05.675751" elapsed="0.000997">Test execution stopped due to a fatal error.</status>
</test>
<status status="FAIL" start="2024-11-14T17:23:05.674753" elapsed="0.001995"/>
</suite>
<status status="FAIL" start="2024-11-14T17:15:36.897337" elapsed="448.781406"/>
</suite>
<statistics>
<total>
<stat pass="1" fail="243" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="7" skip="0" info="combined" combined="NOT robot:exit">NOT robot:exit</stat>
<stat pass="1" fail="176" skip="0">RS232_OPOS</stat>
<stat pass="1" fail="243" skip="0">RS232_STD</stat>
<stat pass="1" fail="172" skip="0">RS232_WN</stat>
<stat pass="1" fail="239" skip="0">USB_COM</stat>
<stat pass="1" fail="239" skip="0">USB_CPS</stat>
<stat pass="0" fail="16" skip="0">USB_KBD</stat>
<stat pass="0" fail="16" skip="0">USB_KBD_ALT</stat>
<stat pass="0" fail="1" skip="0">Wireless</stat>
</tag>
<suite>
<stat pass="1" fail="243" skip="0" id="s1" name="Quick Test">Quick Test</stat>
<stat pass="1" fail="2" skip="0" id="s1-s1" name="ATQ AddOn Timer">Quick Test.ATQ AddOn Timer</stat>
<stat pass="0" fail="1" skip="0" id="s1-s2" name="ATQ AdvancedBox">Quick Test.ATQ AdvancedBox</stat>
<stat pass="0" fail="1" skip="0" id="s1-s3" name="ATQ CERNER DataFormatting">Quick Test.ATQ CERNER DataFormatting</stat>
<stat pass="0" fail="1" skip="0" id="s1-s4" name="ATQ CERNER ISBT128 Concaternation">Quick Test.ATQ CERNER ISBT128 Concaternation</stat>
<stat pass="0" fail="1" skip="0" id="s1-s5" name="ATQ CERNER PrefixSuffix">Quick Test.ATQ CERNER PrefixSuffix</stat>
<stat pass="0" fail="5" skip="0" id="s1-s6" name="ATQ Codabar ShortMargin">Quick Test.ATQ Codabar ShortMargin</stat>
<stat pass="0" fail="5" skip="0" id="s1-s7" name="ATQ Code128 ShortMargin">Quick Test.ATQ Code128 ShortMargin</stat>
<stat pass="0" fail="6" skip="0" id="s1-s8" name="ATQ Code39 ShortMargin">Quick Test.ATQ Code39 ShortMargin</stat>
<stat pass="0" fail="3" skip="0" id="s1-s9" name="ATQ Code39CheckDigit">Quick Test.ATQ Code39CheckDigit</stat>
<stat pass="0" fail="5" skip="0" id="s1-s10" name="ATQ Code93 ShortMargin">Quick Test.ATQ Code93 ShortMargin</stat>
<stat pass="0" fail="1" skip="0" id="s1-s11" name="ATQ CompareAEAndAe">Quick Test.ATQ CompareAEAndAe</stat>
<stat pass="0" fail="3" skip="0" id="s1-s12" name="ATQ DatamatrixMirrorInvert">Quick Test.ATQ DatamatrixMirrorInvert</stat>
<stat pass="0" fail="8" skip="0" id="s1-s13" name="ATQ DC StructureAppend">Quick Test.ATQ DC StructureAppend</stat>
<stat pass="0" fail="17" skip="0" id="s1-s14" name="ATQ Decoding 1DsymsDefault 2DsymsEnable">Quick Test.ATQ Decoding 1DsymsDefault 2DsymsEnable</stat>
<stat pass="0" fail="17" skip="0" id="s1-s15" name="ATQ Decoding 1DsymsEnable 2DsymsDefault">Quick Test.ATQ Decoding 1DsymsEnable 2DsymsDefault</stat>
<stat pass="0" fail="13" skip="0" id="s1-s16" name="ATQ Decoding DatamatrixECC140">Quick Test.ATQ Decoding DatamatrixECC140</stat>
<stat pass="0" fail="1" skip="0" id="s1-s17" name="ATQ DigimarcMode">Quick Test.ATQ DigimarcMode</stat>
<stat pass="0" fail="1" skip="0" id="s1-s18" name="ATQ DMSpeciallabel">Quick Test.ATQ DMSpeciallabel</stat>
<stat pass="0" fail="1" skip="0" id="s1-s19" name="ATQ DotCode">Quick Test.ATQ DotCode</stat>
<stat pass="0" fail="6" skip="0" id="s1-s20" name="ATQ DoubleRead">Quick Test.ATQ DoubleRead</stat>
<stat pass="0" fail="1" skip="0" id="s1-s21" name="ATQ EANbelowDatamatrix">Quick Test.ATQ EANbelowDatamatrix</stat>
<stat pass="0" fail="4" skip="0" id="s1-s22" name="ATQ Febraban">Quick Test.ATQ Febraban</stat>
<stat pass="0" fail="10" skip="0" id="s1-s23" name="ATQ GS1 Datamatrix">Quick Test.ATQ GS1 Datamatrix</stat>
<stat pass="0" fail="10" skip="0" id="s1-s24" name="ATQ GS1 QR">Quick Test.ATQ GS1 QR</stat>
<stat pass="0" fail="7" skip="0" id="s1-s25" name="ATQ GS1DigitalLink BuidTimeout">Quick Test.ATQ GS1DigitalLink BuidTimeout</stat>
<stat pass="0" fail="1" skip="0" id="s1-s26" name="ATQ GS1DigitalLink DoubleReadTimeout">Quick Test.ATQ GS1DigitalLink DoubleReadTimeout</stat>
<stat pass="0" fail="1" skip="0" id="s1-s27" name="ATQ GS1DigitalLink LabelFormat">Quick Test.ATQ GS1DigitalLink LabelFormat</stat>
<stat pass="0" fail="1" skip="0" id="s1-s28" name="ATQ GS1DigitalLink LabelSetID">Quick Test.ATQ GS1DigitalLink LabelSetID</stat>
<stat pass="0" fail="1" skip="0" id="s1-s29" name="ATQ GS1DigitalLink ShareSameGTIN">Quick Test.ATQ GS1DigitalLink ShareSameGTIN</stat>
<stat pass="0" fail="1" skip="0" id="s1-s30" name="ATQ GS1DigitalLink TransmitFormat">Quick Test.ATQ GS1DigitalLink TransmitFormat</stat>
<stat pass="0" fail="1" skip="0" id="s1-s31" name="ATQ GS1DigitalLink TransmitMode">Quick Test.ATQ GS1DigitalLink TransmitMode</stat>
<stat pass="0" fail="1" skip="0" id="s1-s32" name="ATQ I2O5InterleavedLonglabel">Quick Test.ATQ I2O5InterleavedLonglabel</stat>
<stat pass="0" fail="1" skip="0" id="s1-s33" name="ATQ I2O5InterleavedNomargin">Quick Test.ATQ I2O5InterleavedNomargin</stat>
<stat pass="0" fail="1" skip="0" id="s1-s34" name="ATQ IF HostCmds">Quick Test.ATQ IF HostCmds</stat>
<stat pass="0" fail="1" skip="0" id="s1-s35" name="ATQ Interleaved2of5CheckDigit">Quick Test.ATQ Interleaved2of5CheckDigit</stat>
<stat pass="0" fail="1" skip="0" id="s1-s36" name="ATQ ISOCompatibleTransEAN128EmulationTrans">Quick Test.ATQ ISOCompatibleTransEAN128EmulationTrans</stat>
<stat pass="0" fail="1" skip="0" id="s1-s37" name="ATQ LF Prefix Suffix">Quick Test.ATQ LF Prefix Suffix</stat>
<stat pass="0" fail="1" skip="0" id="s1-s38" name="ATQ MirrorLabels">Quick Test.ATQ MirrorLabels</stat>
<stat pass="0" fail="1" skip="0" id="s1-s39" name="ATQ MirrorLabels1">Quick Test.ATQ MirrorLabels1</stat>
<stat pass="0" fail="3" skip="0" id="s1-s40" name="ATQ NumberSystemTest">Quick Test.ATQ NumberSystemTest</stat>
<stat pass="0" fail="1" skip="0" id="s1-s41" name="ATQ OCR AIMID">Quick Test.ATQ OCR AIMID</stat>
<stat pass="0" fail="3" skip="0" id="s1-s42" name="ATQ OCR Bdecoding 1">Quick Test.ATQ OCR Bdecoding 1</stat>
<stat pass="0" fail="13" skip="0" id="s1-s43" name="ATQ OCR Configuration 1">Quick Test.ATQ OCR Configuration 1</stat>
<stat pass="0" fail="10" skip="0" id="s1-s44" name="ATQ OCR CS CheckCharacter">Quick Test.ATQ OCR CS CheckCharacter</stat>
<stat pass="0" fail="6" skip="0" id="s1-s45" name="ATQ OCR CS ControlField Multiline">Quick Test.ATQ OCR CS ControlField Multiline</stat>
<stat pass="0" fail="5" skip="0" id="s1-s46" name="ATQ OCR CS ControlField StartStopRemoval">Quick Test.ATQ OCR CS ControlField StartStopRemoval</stat>
<stat pass="0" fail="4" skip="0" id="s1-s47" name="ATQ OCR CS DataField">Quick Test.ATQ OCR CS DataField</stat>
<stat pass="0" fail="6" skip="0" id="s1-s48" name="ATQ OCR CS MaxDataField">Quick Test.ATQ OCR CS MaxDataField</stat>
<stat pass="0" fail="1" skip="0" id="s1-s49" name="ATQ OCR Customer BankCheckSingapore">Quick Test.ATQ OCR Customer BankCheckSingapore</stat>
<stat pass="0" fail="1" skip="0" id="s1-s50" name="ATQ OCR Inverted">Quick Test.ATQ OCR Inverted</stat>
<stat pass="0" fail="1" skip="0" id="s1-s51" name="ATQ OCR LabelID">Quick Test.ATQ OCR LabelID</stat>
<stat pass="0" fail="1" skip="0" id="s1-s52" name="ATQ PDF417CarDriverLicense">Quick Test.ATQ PDF417CarDriverLicense</stat>
<stat pass="0" fail="1" skip="0" id="s1-s53" name="ATQ PostalCode">Quick Test.ATQ PostalCode</stat>
<stat pass="0" fail="2" skip="0" id="s1-s54" name="ATQ ReInit">Quick Test.ATQ ReInit</stat>
<stat pass="0" fail="1" skip="0" id="s1-s55" name="ATQ RepeatDecode SpecialDataMatrix">Quick Test.ATQ RepeatDecode SpecialDataMatrix</stat>
<stat pass="0" fail="1" skip="0" id="s1-s56" name="ATQ RoyalMail PostalCode CheckCharacter">Quick Test.ATQ RoyalMail PostalCode CheckCharacter</stat>
<stat pass="0" fail="17" skip="0" id="s1-s57" name="ATQ Setting LF 1DsymEnable 2DsymDefault">Quick Test.ATQ Setting LF 1DsymEnable 2DsymDefault</stat>
<stat pass="0" fail="17" skip="0" id="s1-s58" name="ATQ Setting LF 1DsymsDefault 2DsymsEnable">Quick Test.ATQ Setting LF 1DsymsDefault 2DsymsEnable</stat>
<stat pass="0" fail="1" skip="0" id="s1-s59" name="ATQ StressChangingIF">Quick Test.ATQ StressChangingIF</stat>
<stat pass="0" fail="1" skip="0" id="s1-s60" name="ATQ TacoBell">Quick Test.ATQ TacoBell</stat>
<stat pass="0" fail="1" skip="0" id="s1-s61" name="ATQ UPCEANQuietZone">Quick Test.ATQ UPCEANQuietZone</stat>
<stat pass="0" fail="1" skip="0" id="s1-s62" name="ATQ WaterMark">Quick Test.ATQ WaterMark</stat>
<stat pass="0" fail="1" skip="0" id="s1-s63" name="ATQ WechatQR">Quick Test.ATQ WechatQR</stat>
</suite>
</statistics>
<errors>
<msg time="2024-11-14T17:23:05.572432" level="WARN">Multiple tests with name 'Verify can read SwissDriverLisence and Italian ITB Bank' executed in suite 'Quick Test.ATQ OCR Configuration 1'.</msg>
<msg time="2024-11-14T17:23:05.573428" level="WARN">Multiple tests with name 'Verify can read EU Identify card' executed in suite 'Quick Test.ATQ OCR Configuration 1'.</msg>
<msg time="2024-11-14T17:23:05.646232" level="WARN">Multiple tests with name 'ATQ_Setting_LF_1DsymEnable_2DsymDefault' executed in suite 'Quick Test.ATQ Setting LF 1DsymEnable 2DsymDefault'.</msg>
<msg time="2024-11-14T17:23:05.664780" level="WARN">Multiple tests with name 'ATQ_Setting_LF_1DsymEnable_2DsymDefault' executed in suite 'Quick Test.ATQ Setting LF 1DsymsDefault 2DsymsEnable'.</msg>
</errors>
</robot>
